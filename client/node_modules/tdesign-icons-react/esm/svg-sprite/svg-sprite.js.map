{"version":3,"sources":["svg-sprite/svg-sprite.jsx","svg-sprite/svg-sprite.tsx"],"names":["__rest","React","forwardRef","useEffect","useMemo","classNames","useConfig","useSizeProps","checkScriptAndLoad","CDN_SVGSPRITE_URL","Icon","props","ref","classPrefix","name","size","url","loadDefaultIcons","customClassName","className","customStyle","style","restProps","sizeClassName","sizeStyle","document","urls","Array","isArray","forEach","Object","assign","displayName"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,OAAvB,C,CCAA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,UADF,EACmBC,SADnB,EAC8BC,OAD9B,QAEO,OAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AAIA,OAAO,oBAAP;AA6BA,IAAMC,iBAAiB,GAAG,qDAA1B;AAEA;ADhCA;AACA;AACA;;ACkCA,OAAO,IAAMC,IAAI,gBAAGR,UAAU,CAAC,UAACS,KAAD,EAAyBC,GAAzB,EAAoD;AACjF,mBAAwBN,SAAS,EAAjC;AAAA,MAAQO,WAAR,cAAQA,WAAR;;AACA,MACEC,IADF,GAQIH,KARJ,CACEG,IADF;AAAA,MAEEC,IAFF,GAQIJ,KARJ,CAEEI,IAFF;AAAA,mBAQIJ,KARJ,CAGEK,GAHF;AAAA,MAGEA,GAHF,2BAGQ,EAHR;AAAA,8BAQIL,KARJ,CAIEM,gBAJF;AAAA,MAIEA,gBAJF,sCAIqB,IAJrB;AAAA,MAKaC,eALb,GAQIP,KARJ,CAKEQ,SALF;AAAA,MAMSC,WANT,GAQIT,KARJ,CAMEU,KANF;AAAA,MAOKC,SAPL,GAOctB,MAAA,CACVW,KADU,EAPR,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,OAAA,CAOQ,CAPd;;AASA,sBAAuDJ,YAAY,CAACQ,IAAI,IAAI,QAAT,CAAnE;AAAA,MAAmBQ,aAAnB,iBAAQJ,SAAR;AAAA,MAAyCK,SAAzC,iBAAkCH,KAAlC;;AACA,MAAMF,SAAS,GAAGf,OAAO,CACvB;AAAA,WACE;AACAC,MAAAA,UAAU,WAAIQ,WAAJ,sBAA2BA,WAA3B,mBAA+CC,IAA/C,GAAuDS,aAAvD,EAAsEL,eAAtE;AAFZ;AAAA,GADuB,EAIvB,CAACL,WAAD,EAAcK,eAAd,EAA+BJ,IAA/B,EAAqCS,aAArC,CAJuB,CAAzB,CAZiF,CAmBjF;;AACApB,EAAAA,SAAS,CAAC,YAAK;AACb;AACA,QAAI,OAAOsB,QAAP,KAAoB,WAAxB,EAAqC;AACnC;AACD,KAJY,CAMb;;;AACA,QAAI,CAACR,gBAAL,EAAuB;AACrB;AACD;;AAEDT,IAAAA,kBAAkB,CAACC,iBAAD,YAAuBI,WAAvB,sCAAlB;AACD,GAZQ,EAYN,CAACA,WAAD,EAAcI,gBAAd,CAZM,CAAT,CApBiF,CAkCjF;;AACAd,EAAAA,SAAS,CAAC,YAAK;AACb,QAAMuB,IAAI,GAAGC,KAAK,CAACC,OAAN,CAAcZ,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD,CAAxC;AACAU,IAAAA,IAAI,CAACG,OAAL,CAAa,UAACb,GAAD,EAAQ;AACnBR,MAAAA,kBAAkB,CAACQ,GAAD,YAASH,WAAT,sCAAlB;AACD,KAFD;AAGD,GALQ,EAKN,CAACA,WAAD,EAAcG,GAAd,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,GAAG,EAAEJ,GAAV;AAAe,IAAA,SAAS,EAAEO,SAA1B;AAAqC,IAAA,KAAK,EAACW,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,CAAA,EAAA,EAAMX,WAAN,CAAA,EAAsBI,SAAtB;AAA3C,KAAkFF,SAAlF,gBACE;AAAK,IAAA,SAAS,oBAAaR,IAAb;AAAd,IADF,CADF;AAKD,CA/C6B,CAAvB;AAiDPJ,IAAI,CAACsB,WAAL,GAAmB,MAAnB","file":"svg-sprite.js","sourcesContent":["import { __rest } from \"tslib\";\n// eslint-disable-next-line no-use-before-define\nimport * as React from 'react';\nimport { forwardRef, useEffect, useMemo, } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../iconfont/use-size-props';\nimport { checkScriptAndLoad } from '../util/check-url-and-load';\nimport '../style/index.css';\nconst CDN_SVGSPRITE_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.js';\n/**\n * 图标组件\n * svg 版本\n */\nexport const Icon = forwardRef((props, ref) => {\n    const { classPrefix } = useConfig();\n    const { name, size, url = [], loadDefaultIcons = true, className: customClassName, style: customStyle } = props, restProps = __rest(props, [\"name\", \"size\", \"url\", \"loadDefaultIcons\", \"className\", \"style\"]);\n    const { className: sizeClassName, style: sizeStyle } = useSizeProps(size || 'middle');\n    const className = useMemo(() => \n    // eslint-disable-next-line implicit-arrow-linebreak\n    classNames(`${classPrefix}-icon`, `${classPrefix}-icon-${name}`, sizeClassName, customClassName), [classPrefix, customClassName, name, sizeClassName]);\n    // 插入 iconfont 样式\n    useEffect(() => {\n        // 兼容一下服务端渲染\n        if (typeof document === 'undefined') {\n            return;\n        }\n        // 不加载图标\n        if (!loadDefaultIcons) {\n            return;\n        }\n        checkScriptAndLoad(CDN_SVGSPRITE_URL, `${classPrefix}-svg-js-stylesheet--unique-class`);\n    }, [classPrefix, loadDefaultIcons]);\n    // 加载 url\n    useEffect(() => {\n        const urls = Array.isArray(url) ? url : [url];\n        urls.forEach((url) => {\n            checkScriptAndLoad(url, `${classPrefix}-svg-js-stylesheet--unique-class`);\n        });\n    }, [classPrefix, url]);\n    return (<svg ref={ref} className={className} style={Object.assign(Object.assign({}, customStyle), sizeStyle)} {...restProps}>\n      <use xlinkHref={`#t-icon-${name}`}/>\n    </svg>);\n});\nIcon.displayName = 'Icon';\n","// eslint-disable-next-line no-use-before-define\nimport * as React from 'react';\nimport {\n  forwardRef, Ref, useEffect, useMemo, CSSProperties,\n} from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../iconfont/use-size-props';\nimport { checkScriptAndLoad } from '../util/check-url-and-load';\n\nimport { IconProps as BaseIconProps } from './type';\n\nimport '../style/index.css';\n\nexport interface SpriteIconProps extends BaseIconProps {\n  /**\n   * 图标类型\n   */\n  name?: string;\n\n  /**\n   * 图标地址\n   */\n  url?: string | string[];\n\n  /**\n   * @default true\n   */\n  loadDefaultIcons?: boolean;\n\n  /**\n   * 样式\n   */\n  style?: CSSProperties;\n\n  /**\n   * 类名\n   */\n  className?: string;\n}\n\nconst CDN_SVGSPRITE_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.js';\n\n/**\n * 图标组件\n * svg 版本\n */\nexport const Icon = forwardRef((props: SpriteIconProps, ref: Ref<SVGSVGElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    name,\n    size,\n    url = [],\n    loadDefaultIcons = true,\n    className: customClassName,\n    style: customStyle,\n    ...restProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size || 'middle');\n  const className = useMemo(\n    () =>\n      // eslint-disable-next-line implicit-arrow-linebreak\n      classNames(`${classPrefix}-icon`, `${classPrefix}-icon-${name}`, sizeClassName, customClassName),\n    [classPrefix, customClassName, name, sizeClassName],\n  );\n\n  // 插入 iconfont 样式\n  useEffect(() => {\n    // 兼容一下服务端渲染\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    // 不加载图标\n    if (!loadDefaultIcons) {\n      return;\n    }\n\n    checkScriptAndLoad(CDN_SVGSPRITE_URL, `${classPrefix}-svg-js-stylesheet--unique-class`);\n  }, [classPrefix, loadDefaultIcons]);\n\n  // 加载 url\n  useEffect(() => {\n    const urls = Array.isArray(url) ? url : [url];\n    urls.forEach((url) => {\n      checkScriptAndLoad(url, `${classPrefix}-svg-js-stylesheet--unique-class`);\n    });\n  }, [classPrefix, url]);\n\n  return (\n    <svg ref={ref} className={className} style={{ ...customStyle, ...sizeStyle }} {...restProps}>\n      <use xlinkHref={`#t-icon-${name}`} />\n    </svg>\n  );\n});\n\nIcon.displayName = 'Icon';\n"]}