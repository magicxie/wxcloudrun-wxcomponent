"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconBase = void 0;

var tslib_1 = require("tslib");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var react_1 = require("react");

var use_size_props_1 = tslib_1.__importDefault(require("./iconfont/use-size-props"));
/**
 * use react createElement to render an IconElement with other props
 */


function render(node, id, rootProps) {
  return react_1.createElement(node.tag, tslib_1.__assign(tslib_1.__assign({
    key: id
  }, node.attrs), rootProps), (node.children || []).map(function (child, index) {
    return render(child, id + "-" + node.tag + "-" + index);
  }));
}

exports.IconBase = react_1.forwardRef(function (props, ref) {
  var icon = props.icon,
      id = props.id,
      className = props.className,
      _a = props.size,
      size = _a === void 0 ? 'middle' : _a,
      style = props.style,
      restProps = tslib_1.__rest(props, ["icon", "id", "className", "size", "style"]);

  var _b = use_size_props_1["default"](size),
      sizeClassName = _b.className,
      sizeStyle = _b.style;

  var cls = classnames_1["default"]('t-icon', "t-icon-" + id, className, sizeClassName);
  return render(icon, "" + id, tslib_1.__assign({
    ref: ref,
    className: cls,
    style: tslib_1.__assign(tslib_1.__assign({}, style), sizeStyle)
  }, restProps));
});
exports.IconBase.displayName = 'TIconBase';
//# sourceMappingURL=icon.js.map
