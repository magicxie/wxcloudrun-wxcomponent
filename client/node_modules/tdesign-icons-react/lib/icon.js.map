{"version":3,"sources":["icon.jsx","icon.tsx"],"names":["Object","defineProperty","exports","value","IconBase","tslib_1","require","classnames_1","__importDefault","react_1","use_size_props_1","render","node","id","rootProps","createElement","tag","__assign","key","attrs","children","map","child","index","forwardRef","props","ref","icon","className","_a","size","style","restProps","__rest","_b","sizeClassName","sizeStyle","cls","displayName"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;ACHA,IAAAC,YAAA,GAAAF,OAAA,CAAAG,eAAA,CAAAF,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAAG,OAAA,GAAAH,OAAA,CAAA,OAAA,CAAA;;AAUA,IAAAI,gBAAA,GAAAL,OAAA,CAAAG,eAAA,CAAAF,OAAA,CAAA,2BAAA,CAAA,CAAA;AAoBA;ADvBA;AACA;;;ACyBA,SAASK,MAAT,CAAgBC,IAAhB,EAAmCC,EAAnC,EAA+CC,SAA/C,EAAiF;AAC/E,SAAOL,OAAA,CAAAM,aAAA,CACLH,IAAI,CAACI,GADA,EACGX,OAAA,CAAAY,QAAA,CAAAZ,OAAA,CAAAY,QAAA,CAAA;AAENC,IAAAA,GAAG,EAAEL;AAFC,GAAA,EAGHD,IAAI,CAACO,KAHF,CAAA,EAIHL,SAJG,CADH,EAOL,CAACF,IAAI,CAACQ,QAAL,IAAiB,EAAlB,EAAsBC,GAAtB,CAA0B,UAACC,KAAD,EAAQC,KAAR,EAAa;AAAK,WAAAZ,MAAM,CAACW,KAAD,EAAWT,EAAE,GAAA,GAAF,GAAMD,IAAI,CAACI,GAAX,GAAc,GAAd,GAAkBO,KAA7B,CAAN;AAA2C,GAAvF,CAPK,CAAP;AASD;;AAKYrB,OAAA,CAAAE,QAAA,GAAWK,OAAA,CAAAe,UAAA,CAAW,UAACC,KAAD,EAA4BC,GAA5B,EAAgD;AAE/E,MAAAC,IAAI,GACFF,KAAK,CAAAE,IADP;AAAA,MAAMd,EAAE,GACNY,KAAK,CAAAZ,EADP;AAAA,MAAUe,SAAS,GACjBH,KAAK,CAAAG,SADP;AAAA,MAAqBC,EAAA,GACnBJ,KAAK,CAAAK,IADP;AAAA,MAAqBA,IAAI,GAAAD,EAAA,KAAA,KAAA,CAAA,GAAG,QAAH,GAAWA,EAApC;AAAA,MAAsCE,KAAK,GACzCN,KAAK,CAAAM,KADP;AAAA,MAAgDC,SAAS,GAAA3B,OAAA,CAAA4B,MAAA,CACvDR,KADuD,EADrD,CAAA,MAAA,EAAA,IAAA,EAAA,WAAA,EAAA,MAAA,EAAA,OAAA,CACqD,CAAzD;;AAEI,MAAAS,EAAA,GAAiDxB,gBAAA,WAAA,CAAaoB,IAAb,CAAjD;AAAA,MAAaK,aAAa,GAAAD,EAAA,CAAAN,SAA1B;AAAA,MAAmCQ,SAAS,GAAAF,EAAA,CAAAH,KAA5C;;AACN,MAAMM,GAAG,GAAG9B,YAAA,WAAA,CAAW,QAAX,EAAqB,YAAUM,EAA/B,EAAqCe,SAArC,EAAgDO,aAAhD,CAAZ;AAEA,SAAOxB,MAAM,CAACgB,IAAD,EAAO,KAAGd,EAAV,EAAcR,OAAA,CAAAY,QAAA,CAAA;AACzBS,IAAAA,GAAG,EAAAA,GADsB;AAEzBE,IAAAA,SAAS,EAAES,GAFc;AAGzBN,IAAAA,KAAK,EAAA1B,OAAA,CAAAY,QAAA,CAAAZ,OAAA,CAAAY,QAAA,CAAA,EAAA,EAAOc,KAAP,CAAA,EAAiBK,SAAjB;AAHoB,GAAA,EAItBJ,SAJsB,CAAd,CAAb;AAMD,CAbuB,CAAX;AAeb9B,OAAA,CAAAE,QAAA,CAASkC,WAAT,GAAuB,WAAvB","file":"icon.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IconBase = void 0;\nvar tslib_1 = require(\"tslib\");\nvar classnames_1 = tslib_1.__importDefault(require(\"classnames\"));\nvar react_1 = require(\"react\");\nvar use_size_props_1 = tslib_1.__importDefault(require(\"./iconfont/use-size-props\"));\n/**\n * use react createElement to render an IconElement with other props\n */\nfunction render(node, id, rootProps) {\n    return react_1.createElement(node.tag, tslib_1.__assign(tslib_1.__assign({ key: id }, node.attrs), rootProps), (node.children || []).map(function (child, index) { return render(child, id + \"-\" + node.tag + \"-\" + index); }));\n}\nexports.IconBase = react_1.forwardRef(function (props, ref) {\n    var icon = props.icon, id = props.id, className = props.className, _a = props.size, size = _a === void 0 ? 'middle' : _a, style = props.style, restProps = tslib_1.__rest(props, [\"icon\", \"id\", \"className\", \"size\", \"style\"]);\n    var _b = use_size_props_1.default(size), sizeClassName = _b.className, sizeStyle = _b.style;\n    var cls = classnames_1.default('t-icon', \"t-icon-\" + id, className, sizeClassName);\n    return render(icon, \"\" + id, tslib_1.__assign({ ref: ref, className: cls, style: tslib_1.__assign(tslib_1.__assign({}, style), sizeStyle) }, restProps));\n});\nexports.IconBase.displayName = 'TIconBase';\n","import classNames from 'classnames';\nimport {\n  createElement,\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactElement,\n  Ref,\n  RefAttributes,\n  SVGAttributes,\n  CSSProperties,\n} from 'react';\nimport useSizeProps from './iconfont/use-size-props';\n\nexport interface IconProps extends SVGAttributes<SVGSVGElement> {\n  style?: CSSProperties;\n  className?: string;\n  size?: 'small' | 'middle' | 'large' | string | number;\n}\nexport interface Attrs {\n  [key: string]: any;\n}\nexport interface IconElement {\n  tag: string;\n  attrs: Attrs;\n  children?: IconElement[];\n}\nexport interface IconFulfilledProps extends IconProps {\n  icon: IconElement;\n  id: string;\n}\n\n/**\n * use react createElement to render an IconElement with other props\n */\nfunction render(node: IconElement, id: string, rootProps?: { [key: string]: any }): ReactElement {\n  return createElement(\n    node.tag,\n    {\n      key: id,\n      ...node.attrs,\n      ...rootProps,\n    },\n    (node.children || []).map((child, index) => render(child, `${id}-${node.tag}-${index}`)),\n  );\n}\n\n// https://github.com/DefinitelyTyped/DefinitelyTyped/issues/34757\nexport type CompoundedComponent = ForwardRefExoticComponent<IconFulfilledProps & RefAttributes<SVGElement>>;\n\nexport const IconBase = forwardRef((props: IconFulfilledProps, ref: Ref<SVGElement>) => {\n  const {\n    icon, id, className, size = 'middle', style, ...restProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size);\n  const cls = classNames('t-icon', `t-icon-${id}`, className, sizeClassName);\n\n  return render(icon, `${id}`, {\n    ref,\n    className: cls,\n    style: { ...style, ...sizeStyle },\n    ...restProps,\n  });\n}) as CompoundedComponent;\n\nIconBase.displayName = 'TIconBase';\n"]}