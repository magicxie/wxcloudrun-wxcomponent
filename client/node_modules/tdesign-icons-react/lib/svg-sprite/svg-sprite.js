"use strict";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Icon = void 0;

var tslib_1 = require("tslib"); // eslint-disable-next-line no-use-before-define


var React = tslib_1.__importStar(require("react"));

var react_1 = require("react");

var classnames_1 = tslib_1.__importDefault(require("classnames"));

var use_config_1 = tslib_1.__importDefault(require("../util/use-config"));

var use_size_props_1 = tslib_1.__importDefault(require("../iconfont/use-size-props"));

var check_url_and_load_1 = require("../util/check-url-and-load");

require("../style/index.css");

var CDN_SVGSPRITE_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.js';
/**
 * 图标组件
 * svg 版本
 */

exports.Icon = react_1.forwardRef(function (props, ref) {
  var classPrefix = use_config_1["default"]().classPrefix;

  var name = props.name,
      size = props.size,
      _a = props.url,
      url = _a === void 0 ? [] : _a,
      _b = props.loadDefaultIcons,
      loadDefaultIcons = _b === void 0 ? true : _b,
      customClassName = props.className,
      customStyle = props.style,
      restProps = tslib_1.__rest(props, ["name", "size", "url", "loadDefaultIcons", "className", "style"]);

  var _c = use_size_props_1["default"](size || 'middle'),
      sizeClassName = _c.className,
      sizeStyle = _c.style;

  var className = react_1.useMemo(function () {
    // eslint-disable-next-line implicit-arrow-linebreak
    return classnames_1["default"](classPrefix + "-icon", classPrefix + "-icon-" + name, sizeClassName, customClassName);
  }, [classPrefix, customClassName, name, sizeClassName]); // 插入 iconfont 样式

  react_1.useEffect(function () {
    // 兼容一下服务端渲染
    if (typeof document === 'undefined') {
      return;
    } // 不加载图标


    if (!loadDefaultIcons) {
      return;
    }

    check_url_and_load_1.checkScriptAndLoad(CDN_SVGSPRITE_URL, classPrefix + "-svg-js-stylesheet--unique-class");
  }, [classPrefix, loadDefaultIcons]); // 加载 url

  react_1.useEffect(function () {
    var urls = Array.isArray(url) ? url : [url];
    urls.forEach(function (url) {
      check_url_and_load_1.checkScriptAndLoad(url, classPrefix + "-svg-js-stylesheet--unique-class");
    });
  }, [classPrefix, url]);
  return /*#__PURE__*/React.createElement("svg", _extends({
    ref: ref,
    className: className,
    style: tslib_1.__assign(tslib_1.__assign({}, customStyle), sizeStyle)
  }, restProps), /*#__PURE__*/React.createElement("use", {
    xlinkHref: "#t-icon-" + name
  }));
});
exports.Icon.displayName = 'Icon';
//# sourceMappingURL=svg-sprite.js.map
