{"version":3,"sources":["util/use-common-classname.js","util/use-common-classname.ts"],"names":["Object","defineProperty","exports","value","tslib_1","require","react_1","use_config_1","__importDefault","keyList","useCommonClassName","classPrefix","useMemo","SIZE","xs","small","middle","large","xl","block","STATUS","loading","disabled","focused","success","error","warning","selected","active","checked","current","hidden","visible","expanded","indeterminate"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAArB;;ACFA,IAAAC,OAAA,GAAAD,OAAA,CAAA,OAAA,CAAA;;AACA,IAAAE,YAAA,GAAAH,OAAA,CAAAI,eAAA,CAAAH,OAAA,CAAA,cAAA,CAAA,CAAA;;AAEA,IAAMI,OAAO,GAAG,CAAC,MAAD,EAAS,QAAT,CAAhB;;AAMA,SAAwBC,kBAAxB,GAA0C;AAChC,MAAAC,WAAW,GAAKJ,YAAA,WAAA,GAAWI,WAA3B;AAER,SAAOL,OAAA,CAAAM,OAAA,CACL,YAAA;AAAM,WAAC;AACLC,MAAAA,IAAI,EAAE;AACJ,mBAAS,EADL;AAEJC,QAAAA,EAAE,EAAKH,WAAW,GAAA,UAFd;AAGJI,QAAAA,KAAK,EAAKJ,WAAW,GAAA,SAHjB;AAIJK,QAAAA,MAAM,EAAKL,WAAW,GAAA,SAJlB;AAKJM,QAAAA,KAAK,EAAKN,WAAW,GAAA,SALjB;AAMJO,QAAAA,EAAE,EAAKP,WAAW,GAAA,UANd;AAOJQ,QAAAA,KAAK,EAAKR,WAAW,GAAA;AAPjB,OADD;AAULS,MAAAA,MAAM,EAAE;AACNC,QAAAA,OAAO,EAAKV,WAAW,GAAA,aADjB;AAENW,QAAAA,QAAQ,EAAKX,WAAW,GAAA,cAFlB;AAGNY,QAAAA,OAAO,EAAKZ,WAAW,GAAA,aAHjB;AAINa,QAAAA,OAAO,EAAKb,WAAW,GAAA,aAJjB;AAKNc,QAAAA,KAAK,EAAKd,WAAW,GAAA,WALf;AAMNe,QAAAA,OAAO,EAAKf,WAAW,GAAA,aANjB;AAONgB,QAAAA,QAAQ,EAAKhB,WAAW,GAAA,cAPlB;AAQNiB,QAAAA,MAAM,EAAKjB,WAAW,GAAA,YARhB;AASNkB,QAAAA,OAAO,EAAKlB,WAAW,GAAA,aATjB;AAUNmB,QAAAA,OAAO,EAAKnB,WAAW,GAAA,aAVjB;AAWNoB,QAAAA,MAAM,EAAKpB,WAAW,GAAA,YAXhB;AAYNqB,QAAAA,OAAO,EAAKrB,WAAW,GAAA,aAZjB;AAaNsB,QAAAA,QAAQ,EAAKtB,WAAW,GAAA,cAblB;AAcNuB,QAAAA,aAAa,EAAKvB,WAAW,GAAA;AAdvB;AAVH,KAAD;AA0BJ,GA3BG,EA4BL,CAACA,WAAD,CA5BK,CAAP;AA8BD;;AAjCDT,OAAA,WAAA,GAAAQ,kBAAA","file":"use-common-classname.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar react_1 = require(\"react\");\nvar use_config_1 = tslib_1.__importDefault(require(\"./use-config\"));\nvar keyList = ['SIZE', 'STATUS'];\nfunction useCommonClassName() {\n    var classPrefix = use_config_1.default().classPrefix;\n    return react_1.useMemo(function () { return ({\n        SIZE: {\n            default: '',\n            xs: classPrefix + \"-size-xs\",\n            small: classPrefix + \"-size-s\",\n            middle: classPrefix + \"-size-m\",\n            large: classPrefix + \"-size-l\",\n            xl: classPrefix + \"-size-xl\",\n            block: classPrefix + \"-size-full-width\",\n        },\n        STATUS: {\n            loading: classPrefix + \"-is-loading\",\n            disabled: classPrefix + \"-is-disabled\",\n            focused: classPrefix + \"-is-focused\",\n            success: classPrefix + \"-is-success\",\n            error: classPrefix + \"-is-error\",\n            warning: classPrefix + \"-is-warning\",\n            selected: classPrefix + \"-is-selected\",\n            active: classPrefix + \"-is-active\",\n            checked: classPrefix + \"-is-checked\",\n            current: classPrefix + \"-is-current\",\n            hidden: classPrefix + \"-is-hidden\",\n            visible: classPrefix + \"-is-visible\",\n            expanded: classPrefix + \"-is-expanded\",\n            indeterminate: classPrefix + \"-is-indeterminate\",\n        },\n    }); }, [classPrefix]);\n}\nexports.default = useCommonClassName;\n","import { useMemo } from 'react';\nimport useConfig from './use-config';\n\nconst keyList = ['SIZE', 'STATUS'] as const;\n\ntype CommonClassNameRecord<T extends readonly (keyof any)[]> = {\n  [K in T[number]]: Record<string, string>;\n};\n\nexport default function useCommonClassName(): CommonClassNameRecord<typeof keyList> {\n  const { classPrefix } = useConfig();\n\n  return useMemo(\n    () => ({\n      SIZE: {\n        default: '',\n        xs: `${classPrefix}-size-xs`,\n        small: `${classPrefix}-size-s`,\n        middle: `${classPrefix}-size-m`,\n        large: `${classPrefix}-size-l`,\n        xl: `${classPrefix}-size-xl`,\n        block: `${classPrefix}-size-full-width`,\n      },\n      STATUS: {\n        loading: `${classPrefix}-is-loading`,\n        disabled: `${classPrefix}-is-disabled`,\n        focused: `${classPrefix}-is-focused`,\n        success: `${classPrefix}-is-success`,\n        error: `${classPrefix}-is-error`,\n        warning: `${classPrefix}-is-warning`,\n        selected: `${classPrefix}-is-selected`,\n        active: `${classPrefix}-is-active`,\n        checked: `${classPrefix}-is-checked`,\n        current: `${classPrefix}-is-current`,\n        hidden: `${classPrefix}-is-hidden`,\n        visible: `${classPrefix}-is-visible`,\n        expanded: `${classPrefix}-is-expanded`,\n        indeterminate: `${classPrefix}-is-indeterminate`,\n      },\n    }),\n    [classPrefix],\n  );\n}\n"]}