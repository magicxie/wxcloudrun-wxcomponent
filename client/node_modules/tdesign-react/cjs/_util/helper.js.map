{"version":3,"file":"helper.js","sources":["../../src/_util/helper.ts"],"sourcesContent":["import camelCase from 'lodash/camelCase';\n\nexport function omit(obj: object, fields: string[]): object {\n  const shallowCopy = {\n    ...obj,\n  };\n  for (let i = 0; i < fields.length; i++) {\n    const key = fields[i];\n    delete shallowCopy[key];\n  }\n  return shallowCopy;\n}\n\nexport function removeEmptyAttrs<T>(obj: T): Partial<T> {\n  const newObj = {};\n\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined' || obj[key] === null) {\n      newObj[key] = obj[key];\n    }\n  });\n\n  return newObj;\n}\n\nexport function getTabElementByValue(tabs: [] = [], value: string): object {\n  const [result] = tabs.filter((item) => {\n    const { id } = item as any;\n    return id === value;\n  });\n  return result || null;\n}\n\nexport function firstUpperCase(str: string): string {\n  return str.toLowerCase().replace(/( |^)[a-z]/g, (char: string) => char.toUpperCase());\n}\n\nexport type Gradients = { [percent: string]: string };\nexport type FromTo = { from: string; to: string };\nexport type LinearGradient = { direction?: string } & (Gradients | FromTo);\nexport function getBackgroundColor(color: string | string[] | LinearGradient): string {\n  if (typeof color === 'string') {\n    return color;\n  }\n  if (Array.isArray(color)) {\n    if (color[0] && color[0][0] === '#') {\n      color.unshift('90deg');\n    }\n    return `linear-gradient( ${color.join(',')} )`;\n  }\n  const { from, to, direction = 'to right', ...rest } = color;\n  let keys = Object.keys(rest);\n  if (keys.length) {\n    keys = keys.sort((a, b) => parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1)));\n    const tempArr = keys.map((key: any) => `${rest[key]} ${key}`);\n    return `linear-gradient(${direction}, ${tempArr.join(',')})`;\n  }\n  return `linear-gradient(${direction}, ${from}, ${to})`;\n}\n\n// keyboard-event => onKeyboardEvent\nexport function getPropsApiByEvent(eventName: string) {\n  return camelCase(`on-${eventName}`);\n}\n\n/**\n * 计算字符串字符的长度并可以截取字符串。\n * @param str 传入字符串\n * @param maxCharacter 规定最大字符串长度\n * @returns 当没有传入maxCharacter时返回字符串字符长度，当传入maxCharacter时返回截取之后的字符串和长度。\n */\nexport function getCharacterLength(str: string, maxCharacter?: number) {\n  const hasMaxCharacter = typeof maxCharacter === 'number';\n  if (!str || str.length === 0) {\n    if (hasMaxCharacter) {\n      return {\n        length: 0,\n        characters: str,\n      };\n    }\n    return 0;\n  }\n  let len = 0;\n  for (let i = 0; i < str.length; i++) {\n    let currentStringLength = 0;\n    if (str.charCodeAt(i) > 127 || str.charCodeAt(i) === 94) {\n      currentStringLength = 2;\n    } else {\n      currentStringLength = 1;\n    }\n    if (hasMaxCharacter && len + currentStringLength > maxCharacter) {\n      return {\n        length: len,\n        characters: str.slice(0, i),\n      };\n    }\n    len += currentStringLength;\n  }\n  if (hasMaxCharacter) {\n    return {\n      length: len,\n      characters: str,\n    };\n  }\n  return len;\n}\n\n/**\n * 兼容样式中支持number/string类型的传值 得出最后的结果。\n * @param param number或string类型的可用于样式上的值\n * @returns 可使用的样式值。\n */\nexport function pxCompat(param: string | number) {\n  return typeof param === 'number' ? `${param}px` : param;\n}\n"],"names":["omit","obj","fields","shallowCopy","i","length","key","removeEmptyAttrs","newObj","Object","keys","forEach","getTabElementByValue","tabs","value","filter","item","id","result","firstUpperCase","str","toLowerCase","replace","char","toUpperCase","getBackgroundColor","color","Array","isArray","unshift","join","from","to","direction","rest","sort","a","b","parseFloat","substr","tempArr","map","getPropsApiByEvent","eventName","camelCase","getCharacterLength","maxCharacter","hasMaxCharacter","characters","len","currentStringLength","charCodeAt","slice","pxCompat","param"],"mappings":"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"}