{"version":3,"file":"useRefAndForward.js","sources":["../../src/_util/useRefAndForward.ts"],"sourcesContent":["import { Ref, useRef } from 'react';\n\nexport default function useRefAndForward<T>(initialValue: T, forwardedRef: Ref<T>) {\n  const ref = useRef(initialValue);\n\n  const forward = (instance: T) => {\n    ref.current = instance;\n    if (typeof forwardedRef === 'function') {\n      forwardedRef(instance);\n    } else if (forwardedRef) {\n      (forwardedRef as any).current = instance; // eslint-disable-line no-param-reassign\n    }\n  };\n\n  return [ref, forward] as [typeof ref, typeof forward];\n}\n"],"names":["useRefAndForward","initialValue","forwardedRef","ref","useRef","forward","instance","current"],"mappings":";;;;;;;;;;;;AACe,SAASA,gBAAT,CAA0BC,YAA1B,EAAwCC,YAAxC,EAAsD;AACnE,MAAMC,GAAG,GAAGC,YAAM,CAACH,YAAD,CAAlB;;AACA,MAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AAC5BH,IAAAA,GAAG,CAACI,OAAJ,GAAcD,QAAd;;AACA,QAAI,OAAOJ,YAAP,KAAwB,UAA5B,EAAwC;AACtCA,MAAAA,YAAY,CAACI,QAAD,CAAZ;AACD,KAFD,MAEO,IAAIJ,YAAJ,EAAkB;AACvBA,MAAAA,YAAY,CAACK,OAAb,GAAuBD,QAAvB;AACD;AACF,GAPD;;AAQA,SAAO,CAACH,GAAD,EAAME,OAAN,CAAP;AACD;;;;"}