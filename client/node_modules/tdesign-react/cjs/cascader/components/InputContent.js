/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-fa36e79f.js');
var React = require('react');
var classNames = require('classnames');
var isFunction = require('../../_chunks/dep-1bafebb1.js');
var tdesignIconsReact = require('tdesign-icons-react');
var _util_useConfig = require('../../_util/useConfig.js');
var _util_useCommonClassName = require('../../_util/useCommonClassName.js');
var tag_index = require('../../tag/index.js');
var input_index = require('../../input/index.js');
var common_FakeArrow = require('../../common/FakeArrow.js');
var cascader_utils_inputContent = require('../utils/inputContent.js');
require('../../_chunks/dep-045b87c1.js');
require('../../_chunks/dep-0e3f1753.js');
require('../../_chunks/dep-a7666a95.js');
require('../../_chunks/dep-735b841a.js');
require('../../config-provider/ConfigContext.js');
require('../../locale/zh_CN.js');
require('../../tag/Tag.js');
require('../../_chunks/dep-449daca3.js');
require('../../_chunks/dep-e03ca79d.js');
require('../../_util/noop.js');
require('../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../tag/CheckTag.js');
require('../../_util/useDefault.js');
require('../../input/Input.js');
require('../../input/InputGroup.js');
require('../../_util/useDefaultValue.js');
require('../../_chunks/dep-72f8673c.js');
require('../../_chunks/dep-c82d4aac.js');
require('../../_chunks/dep-72511bfe.js');
require('../../_chunks/dep-48870ae5.js');
require('../../_chunks/dep-07d4a79b.js');
require('../../_chunks/dep-fb89215e.js');
require('../../_chunks/dep-69abf228.js');
require('../../_chunks/dep-20e76bfc.js');
require('../../_chunks/dep-c5449fbe.js');
require('../../_chunks/dep-9125a75e.js');
require('../../_chunks/dep-f445e9bb.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var SuffixIcon = function SuffixIcon(props) {
  var cascaderContext = props.cascaderContext,
      closeShow = props.closeShow,
      fakeArrowIconClass = props.fakeArrowIconClass,
      closeIconClass = props.closeIconClass;
  var visible = cascaderContext.visible,
      disabled = cascaderContext.disabled,
      size = cascaderContext.size;

  var closeIconClick = function closeIconClick(e) {
    e.stopPropagation();
    cascader_utils_inputContent.closeIconClickEffect(cascaderContext);
  };

  if (closeShow) {
    return /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseCircleFilledIcon, {
      className: closeIconClass,
      onClick: closeIconClick,
      size: size
    });
  }

  return /* @__PURE__ */React__default["default"].createElement(common_FakeArrow["default"], {
    overlayClassName: fakeArrowIconClass,
    isActive: visible,
    disabled: disabled
  });
};

var InnerContent = function InnerContent(props) {
  var cascaderContext = props.cascaderContext,
      listeners = props.listeners,
      placeholder = props.placeholder,
      collapsedItems = props.collapsedItems;

  var _useConfig = _util_useConfig["default"](),
      prefix = _useConfig.classPrefix;

  var multiple = cascaderContext.multiple,
      size = cascaderContext.size,
      disabled = cascaderContext.disabled,
      filterable = cascaderContext.filterable,
      setFilterActive = cascaderContext.setFilterActive,
      visible = cascaderContext.visible,
      inputVal = cascaderContext.inputVal,
      setInputVal = cascaderContext.setInputVal,
      minCollapsedNum = cascaderContext.minCollapsedNum;
  var _onFocus = listeners.onFocus,
      _onBlur = listeners.onBlur,
      onRemove = listeners.onRemove;
  var singleContent = React.useMemo(function () {
    return cascader_utils_inputContent.getSingleContent(cascaderContext);
  }, [cascaderContext]);
  var multipleContent = React.useMemo(function () {
    return cascader_utils_inputContent.getMultipleContent(cascaderContext);
  }, [cascaderContext]);

  var renderSelfTag = function renderSelfTag(node, index) {
    return /* @__PURE__ */React__default["default"].createElement(tag_index.Tag, {
      closable: !disabled,
      key: index,
      disabled: disabled,
      onClose: function onClose(ctx) {
        ctx.e.stopPropagation();
        cascader_utils_inputContent.handleRemoveTagEffect(cascaderContext, node, onRemove);
      },
      size: size
    }, node.label);
  };

  var generalContent = !multiple ? /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(prefix, "-cascader__content")
  }, singleContent) : /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, minCollapsedNum > 0 && multipleContent.length > minCollapsedNum ? /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, multipleContent.slice(0, minCollapsedNum).map(function (node, index) {
    return renderSelfTag(node, index);
  }), !collapsedItems ? /* @__PURE__ */React__default["default"].createElement(tag_index.Tag, {
    size: size,
    disabled: disabled
  }, "+", multipleContent.length - minCollapsedNum) : collapsedItems) : multipleContent.map(function (node, index) {
    return renderSelfTag(node, index);
  }));
  var inputPlaceholder = multiple ? multipleContent.map(function (node) {
    return node.label;
  }).join("\u3001") : singleContent;
  var filterContent = /* @__PURE__ */React__default["default"].createElement(input_index.Input, {
    placeholder: inputPlaceholder || placeholder,
    value: inputVal,
    onChange: function onChange(value) {
      setInputVal(value);
      setFilterActive(!!value);
    },
    autofocus: true,
    onFocus: function onFocus(v, context) {
      return isFunction.isFunction_1(_onFocus) && _onFocus({
        inputVal: inputVal,
        e: context === null || context === void 0 ? void 0 : context.e
      });
    },
    onBlur: function onBlur(v, context) {
      return isFunction.isFunction_1(_onBlur) && _onBlur({
        inputVal: inputVal,
        e: context === null || context === void 0 ? void 0 : context.e
      });
    }
  });
  var showFilter = React.useMemo(function () {
    return filterable && visible;
  }, [filterable, visible]);
  return showFilter ? filterContent : generalContent;
};

var Content = function Content(props) {
  var placeholder = props.placeholder,
      cascaderContext = props.cascaderContext,
      listeners = props.listeners,
      isHover = props.isHover,
      collapsedItems = props.collapsedItems;

  var _useConfig2 = _util_useConfig["default"](),
      prefix = _useConfig2.classPrefix;

  var singleContent = React.useMemo(function () {
    return cascader_utils_inputContent.getSingleContent(cascaderContext);
  }, [cascaderContext]);
  var multipleContent = React.useMemo(function () {
    return cascader_utils_inputContent.getMultipleContent(cascaderContext);
  }, [cascaderContext]);
  var showPlaceholder = React.useMemo(function () {
    return cascader_utils_inputContent.getPlaceholderShow(cascaderContext, singleContent, multipleContent);
  }, [cascaderContext, singleContent, multipleContent]);
  var content = !showPlaceholder ? /* @__PURE__ */React__default["default"].createElement(InnerContent, {
    isHover: isHover,
    cascaderContext: cascaderContext,
    listeners: listeners,
    collapsedItems: collapsedItems,
    placeholder: placeholder
  }) : /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(prefix, "-cascader__placeholder")
  }, placeholder || "\u8BF7\u9009\u62E9");
  return content;
};

var InputContent = function InputContent(props) {
  var cascaderContext = props.cascaderContext,
      className = props.className,
      style = props.style,
      placeholder = props.placeholder,
      listeners = props.listeners,
      collapsedItems = props.collapsedItems;

  var _useConfig3 = _util_useConfig["default"](),
      prefix = _useConfig3.classPrefix;

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      isHover = _useState2[0],
      setIsHover = _useState2[1];

  var CLASSNAMES = _util_useCommonClassName["default"]();
  var cascaderInnerClasses = React.useMemo(function () {
    return classNames__default["default"](cascader_utils_inputContent.getCascaderInnerClasses(prefix, CLASSNAMES, cascaderContext), className);
  }, [prefix, CLASSNAMES, cascaderContext, className]);
  var inputContentRef = React.useRef();
  React.useEffect(function () {
    var outerClickListenerFn = function outerClickListenerFn(event) {
      return cascader_utils_inputContent.outerClickListenerEffect(inputContentRef.current, cascaderContext, event);
    };

    document.addEventListener("click", outerClickListenerFn);

    var _inputContentRef$curr = inputContentRef.current.getBoundingClientRect(),
        width = _inputContentRef$curr.width;

    cascaderContext.setInputWidth(width);
    return function () {
      document.removeEventListener("click", outerClickListenerFn);
    };
  }, [cascaderContext]);
  var closeIconClass = React.useMemo(function () {
    return classNames__default["default"](cascader_utils_inputContent.getCloseIconClass(prefix, CLASSNAMES, cascaderContext));
  }, [prefix, CLASSNAMES, cascaderContext]);
  var fakeArrowIconClass = React.useMemo(function () {
    return classNames__default["default"](cascader_utils_inputContent.getFakeArrowIconClass(prefix, CLASSNAMES, cascaderContext));
  }, [prefix, CLASSNAMES, cascaderContext]);
  var closeShow = React.useMemo(function () {
    return cascader_utils_inputContent.getCloseShow(isHover, cascaderContext);
  }, [isHover, cascaderContext]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: cascaderInnerClasses,
    style: style,
    onMouseEnter: function onMouseEnter() {
      setIsHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      setIsHover(false);
    },
    ref: inputContentRef,
    onClick: function onClick(e) {
      e.preventDefault();
      cascader_utils_inputContent.innerContentClickEffect(cascaderContext);
    }
  }, /* @__PURE__ */React__default["default"].createElement(Content, {
    cascaderContext: cascaderContext,
    isHover: isHover,
    collapsedItems: collapsedItems,
    placeholder: placeholder,
    listeners: listeners
  }), /* @__PURE__ */React__default["default"].createElement(SuffixIcon, {
    cascaderContext: cascaderContext,
    closeShow: closeShow,
    closeIconClass: closeIconClass,
    fakeArrowIconClass: fakeArrowIconClass,
    listeners: listeners
  }));
};

exports["default"] = InputContent;
//# sourceMappingURL=InputContent.js.map
