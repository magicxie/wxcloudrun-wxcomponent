/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-449daca3.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var _util_useConfig = require('../../_util/useConfig.js');
var _util_useCommonClassName = require('../../_util/useCommonClassName.js');
var _util_useRipple = require('../../_util/useRipple.js');
var cascader_utils_item = require('../utils/item.js');
var cascader_utils_helper = require('../utils/helper.js');
var loading_index = require('../../loading/index.js');
var tooltip_Tooltip = require('../../tooltip/Tooltip.js');
var checkbox_CheckboxGroup = require('../../_chunks/dep-8027cfc6.js');
require('../../config-provider/ConfigContext.js');
require('../../locale/zh_CN.js');
require('../../_util/setStyle.js');
require('../../_chunks/dep-8f3deb2a.js');
require('../../_chunks/dep-045b87c1.js');
require('../../_chunks/dep-a7666a95.js');
require('../../loading/loading.js');
require('../../_chunks/dep-fa36e79f.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-0705da20.js');
require('../../_chunks/dep-0e3f1753.js');
require('../../_chunks/dep-9125a75e.js');
require('../../_chunks/dep-48870ae5.js');
require('../../_util/easing.js');
require('../../common/Portal.js');
require('react-dom');
require('../../loading/gradient.js');
require('../../loading/plugin.js');
require('../../_chunks/dep-e03ca79d.js');
require('../../popup/index.js');
require('../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../_util/useDefault.js');
require('../../_util/noop.js');
require('../../_util/composeRefs.js');
require('../../_util/usePrevious.js');
require('../../popup/Portal.js');
require('../../popup/hooks/useTriggerProps.js');
require('../../_util/useClickOutside.js');
require('../../popup/hooks/usePopupCssTransition.js');
require('../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../common/Check.js');
require('../../_util/helper.js');
require('../../_chunks/dep-3ca698ba.js');
require('../../_chunks/dep-7a0cfc4c.js');
require('../../_chunks/dep-9c74d22d.js');
require('../../_chunks/dep-bc486aab.js');
require('../../_chunks/dep-c7adf4af.js');
require('../../_chunks/dep-f0639562.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var RenderLabelInner = function RenderLabelInner(name, node, cascaderContext) {
  var filterActive = cascaderContext.filterActive,
      inputVal = cascaderContext.inputVal;
  var labelText = filterActive ? cascader_utils_helper.getFullPathLabel(node) : node.label;

  if (filterActive) {
    var texts = labelText.split(inputVal);
    var doms = [];

    for (var index = 0; index < texts.length; index++) {
      doms.push( /* @__PURE__ */React__default["default"].createElement("span", {
        key: index
      }, texts[index]));
      if (index === texts.length - 1) break;
      doms.push( /* @__PURE__ */React__default["default"].createElement("span", {
        key: "".concat(index, "filter"),
        className: "".concat(name, "-label--filter")
      }, inputVal));
    }

    return doms;
  }

  return labelText;
};

var RenderLabelContent = function RenderLabelContent(node, cascaderContext) {
  var _useConfig = _util_useConfig["default"](),
      prefix = _useConfig.classPrefix;

  var name = "".concat(prefix, "-cascader__item");
  var label = RenderLabelInner(name, node, cascaderContext);
  var isEllipsis = cascader_utils_item.getLabelIsEllipsis(node, cascaderContext.size);

  if (isEllipsis) {
    return /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(name, "-label"),
      role: "label"
    }, label, /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(name, "-label--ellipsis")
    }, /* @__PURE__ */React__default["default"].createElement(tooltip_Tooltip["default"], {
      content: node.label,
      placement: "top-left"
    })));
  }

  return /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(name, "__label")
  }, label);
};

var RenderCheckBox = function RenderCheckBox(node, cascaderContext, handleChange) {
  var _useConfig2 = _util_useConfig["default"](),
      prefix = _useConfig2.classPrefix;

  var name = "".concat(prefix, "-cascader__item");
  var checkProps = cascaderContext.checkProps,
      value = cascaderContext.value,
      max = cascaderContext.max;
  var label = RenderLabelInner(name, node, cascaderContext);
  return /* @__PURE__ */React__default["default"].createElement(checkbox_CheckboxGroup.Checkbox, _objectSpread(_objectSpread({}, checkProps), {}, {
    checked: node.checked,
    indeterminate: node.indeterminate,
    disabled: node.isDisabled() || value.length >= max && max !== 0,
    name: node.value,
    onChange: handleChange
  }), label);
};

var Item = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var node = props.node,
      multiple = props.cascaderContext.multiple,
      onClick = props.onClick,
      onChange = props.onChange,
      onMouseEnter = props.onMouseEnter,
      cascaderContext = props.cascaderContext;

  var _useConfig3 = _util_useConfig["default"](),
      prefix = _useConfig3.classPrefix;

  var itemRef = React.useRef();
  _util_useRipple["default"](ref || itemRef);
  var CLASSNAMES = _util_useCommonClassName["default"]();
  var itemClass = React.useMemo(function () {
    return classNames__default["default"](cascader_utils_item.getCascaderItemClass(prefix, node, CLASSNAMES, cascaderContext));
  }, [prefix, node, CLASSNAMES, cascaderContext]);
  var iconClass = React.useMemo(function () {
    return classNames__default["default"](cascader_utils_item.getCascaderItemIconClass(prefix, node, CLASSNAMES, cascaderContext));
  }, [prefix, node, CLASSNAMES, cascaderContext]);

  var handleClick = function handleClick(e) {
    e.stopPropagation();
    var ctx = {
      e: e,
      node: node
    };
    onClick(ctx);
  };

  var handleChange = function handleChange(e) {
    var ctx = {
      e: e,
      node: node
    };
    onChange(ctx);
  };

  var handleMouseenter = function handleMouseenter(e) {
    e.stopPropagation();
    var ctx = {
      e: e,
      node: node
    };
    onMouseEnter(ctx);
  };

  return /* @__PURE__ */React__default["default"].createElement("li", {
    ref: ref || itemRef,
    className: itemClass,
    onClick: handleClick,
    onMouseEnter: handleMouseenter
  }, multiple ? RenderCheckBox(node, cascaderContext, handleChange) : RenderLabelContent(node, cascaderContext), node.children && (node.loading ? /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
    className: iconClass,
    loading: true,
    size: "small"
  }) : /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.ChevronRightIcon, {
    className: iconClass
  })));
});

exports["default"] = Item;
//# sourceMappingURL=Item.js.map
