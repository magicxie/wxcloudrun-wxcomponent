import { TreeNode, CascaderContextType, CascaderProps } from '../interface';
/**
 * icon Class
 * @param prefix
 * @param CLASSNAMES
 * @param cascaderContext
 * @returns
 */
export declare function getCloseIconClass(prefix: string, CLASSNAMES: any, cascaderContext: CascaderContextType): (string | {
    [x: number]: boolean;
})[];
/**
 * icon Class
 * @param prefix
 * @param CLASSNAMES
 * @param cascaderContext
 * @returns
 */
export declare function getFakeArrowIconClass(prefix: string, CLASSNAMES: any, cascaderContext: CascaderContextType): (string | {
    [x: number]: boolean;
})[];
/**
 * Cascader外显div class
 * @param prefix
 * @param CLASSNAMES
 * @param cascaderContext
 * @returns
 */
export declare function getCascaderInnerClasses(prefix: string, CLASSNAMES: any, cascaderContext: CascaderContextType): (string | {
    [x: string]: boolean;
    [x: number]: boolean | import("../../common").SizeEnum;
})[];
/**
 * closeIcon 是否显示
 * @param isHover
 * @param cascaderContext
 * @returns
 */
export declare function getCloseShow(isHover: boolean, cascaderContext: CascaderContextType): boolean;
/**
 * Placeholder 是否显示
 * @param isHover
 * @param cascaderContext
 * @returns
 */
export declare function getPlaceholderShow(cascaderContext: CascaderContextType, singleContent: string, multipleContent: TreeNode[]): boolean;
/**
 * 单选状态下内容
 * @param isHover
 * @param cascaderContext
 * @returns
 */
export declare function getSingleContent(cascaderContext: CascaderContextType): string;
/**
 * 多选状态下选中内容
 * @param isHover
 * @param cascaderContext
 * @returns
 */
export declare function getMultipleContent(cascaderContext: CascaderContextType): TreeNode[];
/**
 * 点击popup outside副作用
 * @param ref
 * @param cascaderContext
 * @param event
 * @returns
 */
export declare function outerClickListenerEffect(ref: HTMLElement, cascaderContext: CascaderContextType, event: MouseEvent | TouchEvent): void;
/**
 * closeIcon点击副作用
 * @param cascaderContext
 */
export declare function closeIconClickEffect(cascaderContext: CascaderContextType): void;
/**
 * tag 关闭按钮点击副作用
 * @param cascaderContext
 */
export declare function handleRemoveTagEffect(cascaderContext: CascaderContextType, node: TreeNode, onRemove: CascaderProps['onRemove']): void;
/**
 * 外显content点击副作用
 * @param cascaderContext
 */
export declare function innerContentClickEffect(cascaderContext: CascaderContextType): void;
