/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-fa36e79f.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var button_index = require('../../button/index.js');
var _util_useConfig = require('../../_util/useConfig.js');
require('../../_chunks/dep-045b87c1.js');
require('../../_chunks/dep-449daca3.js');
require('../../config-provider/ConfigContext.js');
require('../../locale/zh_CN.js');
require('../../button/Button.js');
require('../../_chunks/dep-e03ca79d.js');
require('classnames');
require('../../_util/noop.js');
require('../../_util/useRipple.js');
require('../../_util/setStyle.js');
require('../../loading/index.js');
require('../../loading/loading.js');
require('../../_util/dom.js');
require('raf');
require('../../_chunks/dep-0705da20.js');
require('../../_chunks/dep-0e3f1753.js');
require('../../_chunks/dep-a7666a95.js');
require('../../_chunks/dep-9125a75e.js');
require('../../_chunks/dep-48870ae5.js');
require('../../_util/easing.js');
require('../../common/Portal.js');
require('react-dom');
require('../../loading/gradient.js');
require('../../loading/plugin.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var useDatePickerLocalConfig = function useDatePickerLocalConfig() {
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("datePicker"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  return {
    rangeSeparator: t(local.rangeSeparator),
    yearAriaLabel: t(local.yearAriaLabel),
    monthAriaLabel: t(local.monthAriaLabel),
    nextYear: t(local.nextYear),
    preYear: t(local.preYear),
    nextMonth: t(local.nextMonth),
    preMonth: t(local.preMonth),
    preDecade: t(local.preDecade),
    nextDecade: t(local.nextDecade),
    now: t(local.now)
  };
};

var DatePickerHeader = function DatePickerHeader(props) {
  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var type = props.type,
      year = props.year,
      month = props.month,
      onBtnClick = props.onBtnClick,
      onTypeChange = props.onTypeChange;
  var startYear = parseInt((year / 10).toString(), 10) * 10;

  var _useDatePickerLocalCo = useDatePickerLocalConfig(),
      now = _useDatePickerLocalCo.now,
      rangeSeparator = _useDatePickerLocalCo.rangeSeparator,
      yearAriaLabel = _useDatePickerLocalCo.yearAriaLabel,
      monthAriaLabel = _useDatePickerLocalCo.monthAriaLabel,
      preMonth = _useDatePickerLocalCo.preMonth,
      preYear = _useDatePickerLocalCo.preYear,
      nextMonth = _useDatePickerLocalCo.nextMonth,
      nextYear = _useDatePickerLocalCo.nextYear,
      preDecade = _useDatePickerLocalCo.preDecade,
      nextDecade = _useDatePickerLocalCo.nextDecade;

  var preLabel;
  var nextLabel;

  if (type === "year") {
    preLabel = preDecade;
    nextLabel = nextDecade;
  } else if (type === "date") {
    preLabel = preMonth;
    nextLabel = nextMonth;
  } else {
    preLabel = preYear;
    nextLabel = nextYear;
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-date-picker__header")
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-date-picker__header-title")
  }, type === "year" && /* @__PURE__ */React__default["default"].createElement("div", null, /* @__PURE__ */React__default["default"].createElement("span", null, startYear), rangeSeparator, /* @__PURE__ */React__default["default"].createElement("span", null, startYear + 9)), type !== "year" && /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    variant: "text",
    size: "small",
    onClick: function onClick() {
      return onTypeChange("year");
    },
    className: "".concat(classPrefix, "-date-picker__header-btn")
  }, "".concat(year, " ").concat(yearAriaLabel)), type === "date" && /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    className: "".concat(classPrefix, "-date-picker__header-btn"),
    variant: "text",
    size: "small",
    onClick: function onClick() {
      return onTypeChange("month");
    }
  }, "".concat(month === 12 ? 1 : month + 1, " ").concat(monthAriaLabel))), /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(classPrefix, "-date-picker__header-controller")
  }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    title: preLabel,
    variant: "text",
    onClick: function onClick() {
      return onBtnClick(-1);
    },
    icon: /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.ChevronLeftIcon, null),
    className: "".concat(classPrefix, "-date-picker__header-controller__btn")
  }), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    title: now,
    variant: "text",
    onClick: function onClick() {
      return onBtnClick(0);
    },
    icon: /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.RoundIcon, null),
    className: "".concat(classPrefix, "-date-picker__header-controller__btn ").concat(classPrefix, "-date-picker__header-controller__btn--now")
  }), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    title: nextLabel,
    variant: "text",
    onClick: function onClick() {
      return onBtnClick(1);
    },
    icon: /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.ChevronRightIcon, null),
    className: "".concat(classPrefix, "-date-picker__header-controller__btn")
  })));
};

DatePickerHeader.displayName = "DatePickerHeader";

exports["default"] = DatePickerHeader;
//# sourceMappingURL=Header.js.map
