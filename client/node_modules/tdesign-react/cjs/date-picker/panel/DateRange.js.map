{"version":3,"file":"DateRange.js","sources":["../../../src/date-picker/panel/DateRange.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport dayjs from 'dayjs';\nimport useConfig from '../../_util/useConfig';\nimport DateHeader from '../base/Header';\nimport DateTable from '../base/Table';\nimport { DatePanelProps } from './Date';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\n\nimport {\n  getWeeks,\n  getYears,\n  getMonths,\n  flagActive,\n  subtractMonth,\n  addMonth,\n  isSame,\n  getToday,\n  setDateTime,\n  OptionsType,\n} from '../utils';\n\nconst TODAY = getToday();\nconst LEFT = 'left';\nconst RIGHT = 'right';\n\nexport interface DateRangePanelProps extends Omit<DatePanelProps, 'value'> {\n  value: Array<Date>;\n}\n\nconst DateRangePanel = (props: DateRangePanelProps) => {\n  // 国际化文本初始化\n  const [local, t] = useLocaleReceiver('datePicker');\n  const monthAriaLabel = t(local.monthAriaLabel);\n\n  const { classPrefix } = useConfig();\n  const { value, mode, minDate, maxDate, firstDayOfWeek, disableDate, onChange } = props;\n\n  const data = getLeftAndRightDataFromValue(value);\n\n  const [leftYear, setLeftYear] = useState(data.leftYear);\n  const [leftMonth, setLeftMonth] = useState(data.leftMonth);\n  const [rightYear, setRightYear] = useState(data.rightYear);\n  const [rightMonth, setRightMonth] = useState(data.rightMonth);\n  const [leftType, setLeftType] = useState(mode);\n  const [rightType, setRightType] = useState(mode);\n  const [startValue, setStartValue] = useState(data.startValue);\n  const [endValue, setEndValue] = useState(data.endValue);\n  const [isFirstClick, setIsFirstClick] = useState(true);\n  const [firstClickValue, setFirstClickValue] = useState(TODAY);\n\n  useEffect(() => {\n    const panelData = getLeftAndRightDataFromValue(value);\n    const { leftYear, leftMonth, rightMonth, rightYear, startValue, endValue } = panelData;\n\n    setStartValue(startValue);\n    setEndValue(endValue);\n    setLeftYear(leftYear);\n    setLeftMonth(leftMonth);\n    setRightYear(rightYear);\n    setRightMonth(rightMonth);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  useEffect(() => {\n    setLeftType(mode);\n    setRightType(mode);\n  }, [mode]);\n\n  function getLeftAndRightDataFromValue(value: any) {\n    const [startValue = TODAY, endValue = TODAY] = value;\n    const leftYear = startValue.getFullYear();\n    const leftMonth = startValue.getMonth();\n    let rightMonth = endValue.getMonth();\n    let rightYear = endValue.getFullYear();\n\n    if (mode === 'date' && isSame(startValue, endValue, 'month')) {\n      const next = addMonth(endValue, 1);\n      rightMonth = addMonth(endValue, 1).getMonth();\n      rightYear = next.getFullYear();\n    }\n\n    if (mode === 'month' && isSame(startValue, endValue, 'year')) {\n      rightYear = leftYear + 1;\n    }\n\n    if (mode === 'year' && isSame(startValue, endValue, 'year')) {\n      rightYear = leftYear + 10;\n    }\n\n    return { leftYear, leftMonth, rightMonth, rightYear, startValue, endValue };\n  }\n\n  function clickHeader(flag: number, direction: string) {\n    const year = direction === LEFT ? leftYear : rightYear;\n    const month = direction === LEFT ? leftMonth : rightMonth;\n    const type = direction === LEFT ? leftType : rightType;\n\n    let monthCount: number;\n    let next: Date;\n\n    switch (type) {\n      case 'date':\n        monthCount = 1;\n        break;\n      case 'month':\n        monthCount = 12;\n        break;\n      case 'year':\n        monthCount = 120;\n    }\n\n    const current = new Date(year, month);\n\n    if (flag === 1) {\n      next = addMonth(current, monthCount);\n    } else if (flag === -1) {\n      next = subtractMonth(current, monthCount);\n    } else {\n      next = new Date();\n    }\n\n    direction === LEFT ? setLeftYear(next.getFullYear()) : setRightYear(next.getFullYear());\n    direction === LEFT ? setLeftMonth(next.getMonth()) : setRightMonth(next.getMonth());\n  }\n\n  function getClickHandler(direction: string) {\n    const type = direction === LEFT ? leftType : rightType;\n\n    if (type === 'date') return (date: Date) => clickDate(date);\n\n    if (type === 'month') return (date: Date) => clickMonth(date, direction);\n\n    if (type === 'year') return (date: Date) => clickYear(date, direction);\n  }\n\n  function clickDate(date: Date) {\n    if (isFirstClick) {\n      setStartValue(date);\n      setEndValue(date);\n      setIsFirstClick(false);\n      setFirstClickValue(date);\n    } else {\n      if (dayjs(firstClickValue).isBefore(dayjs(date), 'day')) {\n        setEndValue(date);\n      } else {\n        setEndValue(firstClickValue);\n        setStartValue(date);\n      }\n      onChange?.([setDateTime(startValue, 0, 0, 0), setDateTime(endValue, 23, 59, 59)]);\n      setIsFirstClick(true);\n    }\n  }\n\n  function clickYear(date: Date, direction: string) {\n    if (mode === 'year') {\n      if (isFirstClick) {\n        setStartValue(date);\n        setIsFirstClick(false);\n        setFirstClickValue(date);\n      } else {\n        onChange?.([startValue, endValue]);\n        setIsFirstClick(true);\n      }\n    } else {\n      direction === LEFT ? setLeftType('month') : setRightType('month');\n      direction === LEFT ? setLeftYear(date.getFullYear()) : setRightYear(date.getFullYear());\n    }\n  }\n\n  function clickMonth(date: Date, direction: string) {\n    if (mode === 'month') {\n      if (isFirstClick) {\n        setStartValue(date);\n        setIsFirstClick(false);\n        setFirstClickValue(date);\n      } else {\n        if (endValue < startValue) {\n          setEndValue(startValue);\n        }\n        onChange?.([startValue, endValue]);\n        setIsFirstClick(true);\n      }\n    } else {\n      direction === LEFT ? setLeftType('date') : setRightType('date');\n      direction === LEFT ? setLeftYear(date.getFullYear()) : setRightYear(date.getFullYear());\n      direction === LEFT ? setLeftMonth(date.getMonth()) : setRightMonth(date.getMonth());\n    }\n  }\n\n  function onMouseEnter(date: Date) {\n    if (isFirstClick) return;\n\n    if (firstClickValue.getTime() > date.getTime()) {\n      setStartValue(date);\n      setEndValue(firstClickValue);\n    } else {\n      setStartValue(firstClickValue);\n      setEndValue(date);\n    }\n  }\n\n  const getData = useCallback(\n    ({ year, month, type, start, end }) => {\n      let data: any[];\n\n      const options: OptionsType = {\n        disableDate,\n        minDate,\n        maxDate,\n        firstDayOfWeek,\n        monthText: monthAriaLabel,\n      };\n\n      switch (type) {\n        case 'date':\n          data = getWeeks({ year, month }, options);\n          break;\n        case 'month':\n          data = getMonths(year, options);\n          break;\n        case 'year':\n          data = getYears(year, options);\n          break;\n        default:\n          break;\n      }\n\n      return flagActive(data, { start, end, type });\n    },\n    [disableDate, minDate, maxDate, firstDayOfWeek, monthAriaLabel],\n  );\n\n  const leftData = useMemo(\n    () =>\n      getData({\n        year: leftYear,\n        month: leftMonth,\n        type: leftType,\n        start: startValue,\n        end: endValue,\n      }),\n    [leftYear, leftMonth, leftType, startValue, endValue, getData],\n  );\n\n  const rightData = useMemo(\n    () =>\n      getData({\n        year: rightYear,\n        month: rightMonth,\n        type: rightType,\n        start: startValue,\n        end: endValue,\n      }),\n    [rightYear, rightMonth, rightType, startValue, endValue, getData],\n  );\n\n  return (\n    <div className={`${classPrefix}-date-picker__panels`}>\n      <div className={`${classPrefix}-date-picker__panel`}>\n        <DateHeader\n          year={leftYear}\n          month={leftMonth}\n          type={leftType}\n          onBtnClick={(flag: number) => clickHeader(flag, LEFT)}\n          onTypeChange={setLeftType}\n        />\n\n        <DateTable\n          type={leftType}\n          firstDayOfWeek={firstDayOfWeek}\n          data={leftData}\n          onCellClick={getClickHandler(LEFT)}\n          onCellMouseEnter={onMouseEnter}\n        />\n      </div>\n      <div className={`${classPrefix}-date-picker__panel`}>\n        <DateHeader\n          year={rightYear}\n          month={rightMonth}\n          type={rightType}\n          onBtnClick={(flag: number) => clickHeader(flag, RIGHT)}\n          onTypeChange={setRightType}\n        />\n\n        <DateTable\n          type={rightType}\n          firstDayOfWeek={firstDayOfWeek}\n          data={rightData}\n          onCellClick={getClickHandler(RIGHT)}\n          onCellMouseEnter={onMouseEnter}\n        />\n      </div>\n    </div>\n  );\n};\n\nDateRangePanel.displayName = 'DateRangePanel';\nDateRangePanel.defaultProps = {\n  value: [TODAY, TODAY],\n  mode: 'date',\n};\n\nexport default DateRangePanel;\n"],"names":["TODAY","getToday","LEFT","RIGHT","DateRangePanel","props","useLocaleReceiver","local","t","monthAriaLabel","useConfig","classPrefix","value","mode","minDate","maxDate","firstDayOfWeek","disableDate","onChange","data","getLeftAndRightDataFromValue","useState","leftYear","setLeftYear","leftMonth","setLeftMonth","rightYear","setRightYear","rightMonth","setRightMonth","leftType","setLeftType","rightType","setRightType","startValue","setStartValue","endValue","setEndValue","isFirstClick","setIsFirstClick","firstClickValue","setFirstClickValue","useEffect","panelData","leftYear2","leftMonth2","rightMonth2","rightYear2","startValue2","endValue2","value2","getFullYear","getMonth","isSame","next","addMonth","clickHeader","flag","direction","year","month","type","monthCount","current","Date","subtractMonth","getClickHandler","date","clickDate","clickMonth","clickYear","dayjs","isBefore","setDateTime","onMouseEnter","getTime","getData","useCallback","start","end","data2","options","monthText","getWeeks","getMonths","getYears","flagActive","leftData","useMemo","rightData","React","createElement","className","DateHeader","onBtnClick","onTypeChange","DateTable","onCellClick","onCellMouseEnter","displayName","defaultProps"],"mappings":"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"}