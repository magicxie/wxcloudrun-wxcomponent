/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-449daca3.js');
var React = require('react');
var ReactDOM = require('react-dom');
var dialog_Dialog = require('./Dialog.js');
var _util_dom = require('../_util/dom.js');
require('../_chunks/dep-e03ca79d.js');
require('../_chunks/dep-fa36e79f.js');
require('../_chunks/dep-045b87c1.js');
require('../_chunks/dep-0705da20.js');
require('../_chunks/dep-0e3f1753.js');
require('../_chunks/dep-a7666a95.js');
require('../_chunks/dep-9125a75e.js');
require('../_chunks/dep-48870ae5.js');
require('tdesign-icons-react');
require('../locale/LocalReceiver.js');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('../button/index.js');
require('../button/Button.js');
require('classnames');
require('../_util/noop.js');
require('../_util/useConfig.js');
require('../_util/useRipple.js');
require('../_util/setStyle.js');
require('../loading/index.js');
require('../loading/loading.js');
require('../common/Portal.js');
require('../loading/gradient.js');
require('../loading/plugin.js');
require('raf');
require('../_util/easing.js');
require('./RenderDialog.js');
require('react-transition-group');
require('../_util/useSetState.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var createDialog = function createDialog(props) {
  var dialogRef = /*#__PURE__*/React__default["default"].createRef();

  var options = _objectSpread({}, props);

  var div = document.createElement("div");
  ReactDOM__default["default"].render( /* @__PURE__ */React__default["default"].createElement(dialog_Dialog["default"], _objectSpread(_objectSpread({}, options), {}, {
    visible: true,
    ref: dialogRef,
    isPlugin: true
  })), div);
  var container = _util_dom.getAttach(options.attach);

  if (container) {
    container.appendChild(div);
  } else {
    console.error("attach is not exist");
  }

  var dialogNode = {
    show: function show() {
      var _dialogRef$current;

      (_dialogRef$current = dialogRef.current) === null || _dialogRef$current === void 0 ? void 0 : _dialogRef$current.show();
    },
    hide: function hide() {
      var _dialogRef$current2;

      (_dialogRef$current2 = dialogRef.current) === null || _dialogRef$current2 === void 0 ? void 0 : _dialogRef$current2.hide();
    },
    update: function update(updateOptions) {
      var _dialogRef$current3;

      (_dialogRef$current3 = dialogRef.current) === null || _dialogRef$current3 === void 0 ? void 0 : _dialogRef$current3.update(updateOptions);
    },
    destroy: function destroy() {
      container.contains(div) && container.removeChild(div);
    }
  };
  return dialogNode;
};

var confirm = function confirm(props) {
  return createDialog(props);
};

var alert = function alert(props) {
  var options = _objectSpread({}, props);

  options.cancelBtn = null;
  return createDialog(options);
};

createDialog.alert = alert;
createDialog.confirm = confirm;
var dialog = createDialog;
var DialogPlugin = createDialog;

exports.DialogPlugin = DialogPlugin;
exports.dialog = dialog;
//# sourceMappingURL=plugin.js.map
