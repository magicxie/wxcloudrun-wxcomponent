/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-449daca3.js');
var slicedToArray = require('../_chunks/dep-fa36e79f.js');
var objectWithoutProperties = require('../_chunks/dep-e03ca79d.js');
var React = require('react');
var classNames = require('classnames');
var isFunction = require('../_chunks/dep-1bafebb1.js');
var tdesignIconsReact = require('tdesign-icons-react');
var _util_forwardRefWithStatics = require('../_util/forwardRefWithStatics.js');
var _util_useConfig = require('../_util/useConfig.js');
var input_InputGroup = require('./InputGroup.js');
var _util_useDefaultValue = require('../_util/useDefaultValue.js');
require('../_chunks/dep-045b87c1.js');
require('../_chunks/dep-0e3f1753.js');
require('../_chunks/dep-a7666a95.js');
require('../_chunks/dep-735b841a.js');
require('hoist-non-react-statics');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('../_util/useDefault.js');
require('../_util/noop.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["disabled", "status", "size", "className", "style", "prefixIcon", "suffixIcon", "clearable", "value", "onChange", "onClear", "onEnter", "onKeydown", "onCompositionStart", "onCompositionEnd", "autofocus", "readonly"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var renderIcon = function renderIcon(classPrefix, type, icon) {
  var result = null;
  if (icon) result = icon;
  if (typeof icon === "function") result = icon();

  if (result) {
    result = /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(classPrefix, "-input__").concat(type)
    }, result);
  }

  return result;
};

var Input = _util_forwardRefWithStatics["default"](function (props, ref) {
  var _classNames;

  var _useDefaultValue = _util_useDefaultValue["default"](props, ""),
      disabled = _useDefaultValue.disabled,
      status = _useDefaultValue.status,
      size = _useDefaultValue.size,
      className = _useDefaultValue.className,
      style = _useDefaultValue.style,
      prefixIcon = _useDefaultValue.prefixIcon,
      suffixIcon = _useDefaultValue.suffixIcon,
      clearable = _useDefaultValue.clearable,
      value = _useDefaultValue.value,
      onChange = _useDefaultValue.onChange,
      onClear = _useDefaultValue.onClear,
      onEnter = _useDefaultValue.onEnter,
      onKeydown = _useDefaultValue.onKeydown,
      onCompositionStart = _useDefaultValue.onCompositionStart,
      onCompositionEnd = _useDefaultValue.onCompositionEnd,
      autofocus = _useDefaultValue.autofocus,
      readonly = _useDefaultValue.readonly,
      restProps = objectWithoutProperties._objectWithoutProperties(_useDefaultValue, _excluded);

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var composingRef = React.useRef(false);

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      isHover = _useState2[0],
      toggleIsHover = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      isFocused = _useState4[0],
      toggleIsFocused = _useState4[1];

  var _useState5 = React.useState(""),
      _useState6 = slicedToArray._slicedToArray(_useState5, 2),
      composingRefValue = _useState6[0],
      setComposingValue = _useState6[1];

  var isShowClearIcon = clearable && value && !disabled && isHover;
  var componentType = "input";
  var prefixIconContent = renderIcon(classPrefix, "prefix", prefixIcon);
  var suffixIconNew = isShowClearIcon ? /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseCircleFilledIcon, {
    className: "".concat(classPrefix, "-input__suffix-clear"),
    onClick: handleClear,
    onMouseUp: function onMouseUp(e) {
      return e.preventDefault();
    },
    onMouseDown: function onMouseDown(e) {
      return e.preventDefault();
    }
  }) : suffixIcon;
  var suffixIconContent = renderIcon(classPrefix, "suffix", suffixIconNew);
  var inputPropsNames = Object.keys(restProps).filter(function (key) {
    return !/^on[A-Z]/.test(key);
  });
  var inputProps = inputPropsNames.reduce(function (inputProps2, key) {
    return Object.assign(inputProps2, defineProperty._defineProperty({}, key, props[key]));
  }, {});
  var eventPropsNames = Object.keys(restProps).filter(function (key) {
    return /^on[A-Z]/.test(key);
  });
  var eventProps = eventPropsNames.reduce(function (eventProps2, key) {
    Object.assign(eventProps2, defineProperty._defineProperty({}, key, function (e) {
      return props[key](e.currentTarget.value, {
        e: e
      });
    }));
    return eventProps2;
  }, {});
  var renderInput = /* @__PURE__ */React__default["default"].createElement("input", _objectSpread(_objectSpread(_objectSpread({
    readOnly: readonly,
    disabled: disabled,
    className: "".concat(classPrefix, "-").concat(componentType, "__inner")
  }, inputProps), {}, {
    value: composingRef.current ? composingRefValue : value
  }, eventProps), {}, {
    autoFocus: autofocus,
    onChange: handleChange,
    onKeyDown: handleKeyDown,
    onCompositionStart: handleCompositionStart,
    onCompositionEnd: handleCompositionEnd
  }));

  function handleChange(e) {
    var value2 = e.currentTarget.value;

    if (composingRef.current) {
      setComposingValue(value2);
    } else {
      onChange(value2, {
        e: e
      });
    }
  }

  function handleClear(e) {
    isFunction.isFunction_1(onChange) && onChange("", {
      e: e
    });
    isFunction.isFunction_1(onClear) && onClear({
      e: e
    });
  }

  function handleKeyDown(e) {
    var key = e.key,
        value2 = e.currentTarget.value;
    isFunction.isFunction_1(onEnter) && key === "Enter" && onEnter(value2, {
      e: e
    });
    isFunction.isFunction_1(onKeydown) && onKeydown(value2, {
      e: e
    });
  }

  function handleCompositionStart(event) {
    composingRef.current = true;
    isFunction.isFunction_1(onCompositionStart) && onCompositionStart(event);
  }

  function handleCompositionEnd(event) {
    if (composingRef.current) {
      composingRef.current = false;
      handleChange(event);
    }

    setComposingValue("");
    isFunction.isFunction_1(onCompositionEnd) && onCompositionEnd(event);
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    ref: ref,
    style: style,
    className: classNames__default["default"]("".concat(classPrefix, "-").concat(componentType), (_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-disabled"), disabled), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-focused"), isFocused), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-is-").concat(status), status), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-").concat(componentType, "--prefix"), prefixIcon), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-").concat(componentType, "--suffix"), suffixIconContent), defineProperty._defineProperty(_classNames, "".concat(classPrefix, "-").concat(componentType, "--focused"), isFocused), _classNames), className),
    onMouseEnter: function onMouseEnter() {
      return toggleIsHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return toggleIsHover(false);
    },
    onFocus: function onFocus() {
      return toggleIsFocused(true);
    },
    onBlur: function onBlur() {
      return toggleIsFocused(false);
    }
  }, prefixIconContent, renderInput, suffixIconContent);
}, {
  Group: input_InputGroup["default"]
});
Input.displayName = "Input";

exports["default"] = Input;
//# sourceMappingURL=Input.js.map
