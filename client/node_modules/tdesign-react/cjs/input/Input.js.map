{"version":3,"file":"Input.js","sources":["../../src/input/Input.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport classNames from 'classnames';\nimport isFunction from 'lodash/isFunction';\nimport { CloseCircleFilledIcon } from 'tdesign-icons-react';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useConfig from '../_util/useConfig';\nimport { TdInputProps, InputValue } from './type';\nimport { StyledProps, TNode } from '../common';\nimport InputGroup from './InputGroup';\nimport useDefaultValue from '../_util/useDefaultValue';\n\nexport interface InputProps extends TdInputProps, StyledProps {\n  onCompositionStart?: Function;\n  onCompositionEnd?: Function;\n}\n\nconst renderIcon = (classPrefix: string, type: 'prefix' | 'suffix', icon: TNode) => {\n  let result: React.ReactNode = null;\n\n  if (icon) result = icon;\n\n  if (typeof icon === 'function') result = icon();\n\n  if (result) {\n    result = <span className={`${classPrefix}-input__${type}`}>{result}</span>;\n  }\n\n  return result;\n};\n\n/**\n * 组件\n */\nconst Input = forwardRefWithStatics(\n  (props: InputProps, ref: React.Ref<HTMLInputElement>) => {\n    const {\n      disabled,\n      status,\n      size,\n      className,\n      style,\n      prefixIcon,\n      suffixIcon,\n      clearable,\n      value,\n      onChange,\n      onClear,\n      onEnter,\n      onKeydown,\n      onCompositionStart,\n      onCompositionEnd,\n      autofocus,\n      readonly,\n      ...restProps\n    } = useDefaultValue<InputValue, InputProps>(props, '');\n    const { classPrefix } = useConfig();\n    const composingRef = useRef(false);\n    const [isHover, toggleIsHover] = useState(false);\n    const [isFocused, toggleIsFocused] = useState(false);\n\n    const [composingRefValue, setComposingValue] = useState<string>('');\n    const isShowClearIcon = clearable && value && !disabled && isHover;\n    const componentType = 'input';\n    const prefixIconContent = renderIcon(classPrefix, 'prefix', prefixIcon);\n    const suffixIconNew = isShowClearIcon ? (\n      <CloseCircleFilledIcon\n        className={`${classPrefix}-input__suffix-clear`}\n        onClick={handleClear}\n        onMouseUp={(e) => e.preventDefault()}\n        onMouseDown={(e) => e.preventDefault()}\n      />\n    ) : (\n      suffixIcon\n    );\n    const suffixIconContent = renderIcon(classPrefix, 'suffix', suffixIconNew);\n\n    const inputPropsNames = Object.keys(restProps).filter((key) => !/^on[A-Z]/.test(key));\n    const inputProps = inputPropsNames.reduce(\n      (inputProps, key) => Object.assign(inputProps, { [key]: props[key] }),\n      {},\n    );\n    const eventPropsNames = Object.keys(restProps).filter((key) => /^on[A-Z]/.test(key));\n    const eventProps = eventPropsNames.reduce((eventProps, key) => {\n      Object.assign(eventProps, {\n        [key]: (e) => props[key](e.currentTarget.value, { e }),\n      });\n      return eventProps;\n    }, {});\n\n    const renderInput = (\n      <input\n        readOnly={readonly}\n        disabled={disabled}\n        className={`${classPrefix}-${componentType}__inner`}\n        {...inputProps}\n        value={composingRef.current ? composingRefValue : value}\n        {...eventProps}\n        autoFocus={autofocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onCompositionStart={handleCompositionStart}\n        onCompositionEnd={handleCompositionEnd}\n      />\n    );\n\n    function handleChange(e: React.ChangeEvent<HTMLInputElement> | React.CompositionEvent<HTMLInputElement>) {\n      const { value } = e.currentTarget;\n      if (composingRef.current) {\n        setComposingValue(value);\n      } else {\n        onChange(value, { e });\n      }\n    }\n    function handleClear(e: React.MouseEvent<SVGSVGElement>) {\n      isFunction(onChange) && onChange('', { e });\n      isFunction(onClear) && onClear({ e });\n    }\n    function handleKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        key,\n        currentTarget: { value },\n      } = e;\n      isFunction(onEnter) && key === 'Enter' && onEnter(value, { e });\n      isFunction(onKeydown) && onKeydown(value, { e });\n    }\n    function handleCompositionStart(event: React.CompositionEvent<HTMLInputElement>) {\n      composingRef.current = true;\n      isFunction(onCompositionStart) && onCompositionStart(event);\n    }\n    function handleCompositionEnd(event: React.CompositionEvent<HTMLInputElement>) {\n      if (composingRef.current) {\n        composingRef.current = false;\n        handleChange(event);\n      }\n      setComposingValue('');\n      isFunction(onCompositionEnd) && onCompositionEnd(event);\n    }\n\n    return (\n      <div\n        ref={ref}\n        style={style}\n        className={classNames(\n          `${classPrefix}-${componentType}`,\n          {\n            [`${classPrefix}-is-disabled`]: disabled,\n            [`${classPrefix}-is-focused`]: isFocused,\n            [`${classPrefix}-size-s`]: size === 'small',\n            [`${classPrefix}-size-l`]: size === 'large',\n            [`${classPrefix}-is-${status}`]: status,\n            [`${classPrefix}-${componentType}--prefix`]: prefixIcon,\n            [`${classPrefix}-${componentType}--suffix`]: suffixIconContent,\n            [`${classPrefix}-${componentType}--focused`]: isFocused,\n          },\n          className,\n        )}\n        onMouseEnter={() => toggleIsHover(true)}\n        onMouseLeave={() => toggleIsHover(false)}\n        onFocus={() => toggleIsFocused(true)}\n        onBlur={() => toggleIsFocused(false)}\n      >\n        {prefixIconContent}\n        {renderInput}\n        {suffixIconContent}\n      </div>\n    );\n  },\n  { Group: InputGroup },\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n"],"names":["renderIcon","classPrefix","type","icon","result","React","createElement","className","Input","forwardRefWithStatics","props","ref","useDefaultValue","disabled","status","size","style","prefixIcon","suffixIcon","clearable","value","onChange","onClear","onEnter","onKeydown","onCompositionStart","onCompositionEnd","autofocus","readonly","restProps","useConfig","composingRef","useRef","useState","isHover","toggleIsHover","isFocused","toggleIsFocused","composingRefValue","setComposingValue","isShowClearIcon","componentType","prefixIconContent","suffixIconNew","CloseCircleFilledIcon","onClick","handleClear","onMouseUp","e","preventDefault","onMouseDown","suffixIconContent","inputPropsNames","Object","keys","filter","key","test","inputProps","reduce","inputProps2","assign","eventPropsNames","eventProps","eventProps2","currentTarget","renderInput","readOnly","current","autoFocus","handleChange","onKeyDown","handleKeyDown","handleCompositionStart","handleCompositionEnd","value2","isFunction","event","classNames","onMouseEnter","onMouseLeave","onFocus","onBlur","Group","InputGroup","displayName"],"mappings":"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"}