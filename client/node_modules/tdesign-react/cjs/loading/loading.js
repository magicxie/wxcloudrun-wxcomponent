/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-449daca3.js');
var slicedToArray = require('../_chunks/dep-fa36e79f.js');
var React = require('react');
var classNames = require('classnames');
var _util_dom = require('../_util/dom.js');
var _util_useConfig = require('../_util/useConfig.js');
var common_Portal = require('../common/Portal.js');
var loading_gradient = require('./gradient.js');
require('../_chunks/dep-045b87c1.js');
require('raf');
require('../_chunks/dep-0705da20.js');
require('../_chunks/dep-0e3f1753.js');
require('../_chunks/dep-a7666a95.js');
require('../_chunks/dep-9125a75e.js');
require('../_chunks/dep-48870ae5.js');
require('../_util/easing.js');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('react-dom');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var Loading = function Loading(props) {
  var attach = props.attach,
      _props$indicator = props.indicator,
      indicator = _props$indicator === void 0 ? true : _props$indicator,
      text = props.text,
      _props$loading = props.loading,
      loading = _props$loading === void 0 ? true : _props$loading,
      _props$size = props.size,
      size = _props$size === void 0 ? "medium" : _props$size,
      delay = props.delay,
      fullscreen = props.fullscreen,
      _props$preventScrollT = props.preventScrollThrough,
      preventScrollThrough = _props$preventScrollT === void 0 ? true : _props$preventScrollT,
      _props$showOverlay = props.showOverlay,
      showOverlay = _props$showOverlay === void 0 ? true : _props$showOverlay,
      content = props.content,
      _props$children = props.children,
      children = _props$children === void 0 ? content : _props$children,
      _props$inheritColor = props.inheritColor,
      inheritColor = _props$inheritColor === void 0 ? false : _props$inheritColor,
      zIndex = props.zIndex,
      className = props.className;

  var _useState = React.useState(delay ? false : loading),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      showLoading = _useState2[0],
      setShowLoading = _useState2[1];

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-loading");
  var centerClass = "".concat(classPrefix, "-loading--center");
  var inheritColorClass = "".concat(classPrefix, "-loading--inherit-color");
  var fullClass = "".concat(classPrefix, "-loading--full");
  var fullscreenClass = "".concat(classPrefix, "-loading__fullscreen");
  var lockClass = "".concat(classPrefix, "-loading--lock");
  var overlayClass = "".concat(classPrefix, "-loading__overlay");
  var relativeClass = "".concat(classPrefix, "-loading__parent");
  var textClass = "".concat(classPrefix, "-loading__text");
  React.useEffect(function () {
    var timer;

    if (delay && loading) {
      timer = setTimeout(function () {
        setShowLoading(loading);
      }, delay);
    } else {
      setShowLoading(loading);
    }

    return function () {
      clearTimeout(timer);
    };
  }, [delay, loading]);
  var calcStyles = React.useMemo(function () {
    var styles = {};

    if (zIndex !== void 0) {
      styles.zIndex = zIndex;
    }

    if (!["small", "medium", "large"].includes(size)) {
      styles["font-size"] = size;
    }

    return styles;
  }, [size, zIndex]);
  var sizeMap = {
    large: "".concat(classPrefix, "-size-l"),
    small: "".concat(classPrefix, "-size-s"),
    medium: "".concat(classPrefix, "-size-m")
  };
  var baseClasses = classNames__default["default"](centerClass, sizeMap[size], defineProperty._defineProperty({}, inheritColorClass, inheritColor), className);

  if (preventScrollThrough && fullscreen) {
    if (loading) {
      _util_dom.addClass(document.body, lockClass);
    } else {
      _util_dom.removeClass(document.body, lockClass);
    }
  }

  var commonContent = function commonContent() {
    var renderIndicator = /* @__PURE__ */React__default["default"].createElement(loading_gradient["default"], null);

    if (indicator && typeof indicator !== "boolean") {
      renderIndicator = indicator;
    }

    return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, indicator ? renderIndicator : null, text ? /* @__PURE__ */React__default["default"].createElement("div", {
      className: textClass
    }, text) : null);
  };

  if (fullscreen) {
    return loading ? /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"](name, fullscreenClass, centerClass, overlayClass),
      style: calcStyles
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: baseClasses
    }, commonContent())) : null;
  }

  if (children) {
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: relativeClass
    }, children, showLoading ? /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"](name, baseClasses, fullClass, defineProperty._defineProperty({}, overlayClass, showOverlay)),
      style: calcStyles
    }, commonContent()) : null);
  }

  if (attach) {
    return /* @__PURE__ */React__default["default"].createElement(common_Portal["default"], {
      getContainer: attach
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"](name, baseClasses, fullClass, defineProperty._defineProperty({}, overlayClass, showOverlay)),
      style: calcStyles
    }, commonContent()));
  }

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](name, baseClasses),
    style: calcStyles
  }, commonContent());
};

exports["default"] = Loading;
//# sourceMappingURL=loading.js.map
