/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-449daca3.js');
var React = require('react');
var ReactDOM = require('react-dom');
var loading_loading = require('./loading.js');
require('../_chunks/dep-fa36e79f.js');
require('../_chunks/dep-045b87c1.js');
require('classnames');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-0705da20.js');
require('../_chunks/dep-0e3f1753.js');
require('../_chunks/dep-a7666a95.js');
require('../_chunks/dep-9125a75e.js');
require('../_chunks/dep-48870ae5.js');
require('../_util/easing.js');
require('../_util/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('../common/Portal.js');
require('./gradient.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function createContainer(attach) {
  if (typeof attach === "string") return document.querySelector(attach);
  if (typeof attach === "function") return attach();
  return document.body;
}

var LoadingPlugin = function LoadingPlugin(options) {
  if (options === false) return {
    hide: function hide() {
      return null;
    }
  };
  var props = typeof options === "boolean" ? {} : options;
  var attach = props.attach;
  var container = createContainer(attach);
  var div = document.createElement("div");
  div.setAttribute("style", "width: 100%; height: 100%; position: absolute; top: 0;");
  var defaultProps = {
    loading: true,
    attach: null,
    fullscreen: !attach,
    showOverlay: !!attach
  };
  ReactDOM__default["default"].render( /* @__PURE__ */React__default["default"].createElement(loading_loading["default"], _objectSpread(_objectSpread(_objectSpread({}, defaultProps), props), {}, {
    attach: null
  })), div);
  container.appendChild(div);
  return {
    hide: function hide() {
      ReactDOM__default["default"].unmountComponentAtNode(div);
      div.remove();
    }
  };
};
var loading = LoadingPlugin;

exports.LoadingPlugin = LoadingPlugin;
exports.loading = loading;
//# sourceMappingURL=plugin.js.map
