{"version":3,"file":"Message.js","sources":["../../src/message/Message.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\n\nimport {\n  MessageCloseAllMethod,\n  MessageErrorMethod,\n  MessageInfoMethod,\n  MessageInstance,\n  MessageLoadingMethod,\n  MessageMethod,\n  MessageOptions,\n  MessageQuestionMethod,\n  MessageSuccessMethod,\n  MessageWarningMethod,\n  MessageThemeList,\n} from './type';\nimport { AttachNodeReturnValue } from '../common';\nimport noop from '../_util/noop';\nimport { PlacementOffset } from './const';\nimport MessageComponent from './MessageComponent';\n\n// 定义全局的 message 列表，closeAll 函数需要使用\nlet MessageList: MessageInstance[] = [];\nlet keyIndex = 1;\n\n// 全局默认配置，zIndex 为 5000，默认关闭事件 3000\nconst globalConfig = {\n  zIndex: 5000,\n  duration: 3000,\n  top: 32,\n};\n\ninterface MessagePlugin {\n  (theme: MessageThemeList, message: string | MessageOptions, duration?: number): Promise<MessageInstance>;\n  info: MessageInfoMethod;\n  success: MessageSuccessMethod;\n  warning: MessageWarningMethod;\n  error: MessageErrorMethod;\n  question: MessageQuestionMethod;\n  loading: MessageLoadingMethod;\n  closeAll: MessageCloseAllMethod;\n  close: (message: Promise<MessageInstance>) => void;\n}\n\n/**\n * @author kenzyyang\n * @date 2021-05-11 20:36:52\n * @desc 创建容器，所有的 message 会填充到容器中\n */\nfunction createContainer({ attach, zIndex, placement = 'top' }: MessageOptions) {\n  // 默认注入到 body 中，如果用户有制定，以用户指定的为准\n  let mountedDom: AttachNodeReturnValue = document.body;\n\n  // attach 为字符串时认为是选择器\n  if (typeof attach === 'string') {\n    const result = document.querySelectorAll(attach);\n    if (result.length >= 1) {\n      // :todo 编译器提示 nodelist 为类数组类型，并没有实现迭代器，没办法使用数组解构，暂时加上 eslint-disable\n      // eslint-disable-next-line prefer-destructuring\n      mountedDom = result[0];\n    }\n  } else if (typeof attach === 'function') {\n    mountedDom = attach();\n  }\n\n  // :todo 暂时写死，需要 pmc 确定如何在非组件中拿到动态配置的样式前缀\n  const tdMessageListClass = 't-message__list';\n  const tdMessagePlacementClass = `t-message-placement--${placement}`;\n\n  // 选择器找到一个挂载 message 的容器，不存在则创建\n  const container = Array.from(mountedDom.querySelectorAll(`.${tdMessageListClass}.${tdMessagePlacementClass}`));\n  if (container.length < 1) {\n    const div = document.createElement('div');\n    div.className = classNames(tdMessageListClass, tdMessagePlacementClass);\n    div.style.zIndex = String(zIndex || globalConfig.zIndex);\n\n    Object.keys(PlacementOffset[placement]).forEach((key) => {\n      div.style[key] = PlacementOffset[placement][key];\n    });\n\n    if (placement.includes('top')) {\n      div.style.top = `${globalConfig.top}px`;\n    }\n    mountedDom.appendChild(div);\n    return div;\n  }\n  return container[0];\n}\n\n/**\n * @desc 函数式调用时的 message 渲染函数\n */\nfunction renderElement(theme, config: MessageOptions): Promise<MessageInstance> {\n  const container = createContainer(config) as HTMLElement;\n  let { duration = globalConfig.duration } = config;\n  const { content, offset, onDurationEnd = noop } = config;\n  const div = document.createElement('div');\n\n  keyIndex += 1;\n\n  const message = {\n    close: () => {\n      ReactDOM.unmountComponentAtNode(div);\n      div.remove();\n    },\n    key: keyIndex,\n  };\n\n  // 校验duration 合法性\n  if (duration < 0) {\n    duration = 3000;\n  }\n  if (duration !== 0) {\n    setTimeout(() => {\n      message.close();\n      onDurationEnd();\n    }, duration);\n  }\n\n  let style: React.CSSProperties = {};\n  if (Array.isArray(offset) && offset.length === 2) {\n    const [left, top] = offset;\n    style = {\n      left,\n      top,\n      position: 'relative',\n    };\n  }\n\n  return new Promise((resolve) => {\n    // 渲染组件\n    ReactDOM.render(\n      <MessageComponent theme={theme} style={style} key={keyIndex} {...config}>\n        {content}\n      </MessageComponent>,\n      div,\n    );\n\n    // 将当前渲染的 message 挂载到指定的容器中\n    container.appendChild(div);\n    // message 推入 message 列表\n    MessageList.push(message);\n    // 将 message 实例通过 resolve 返回给 promise 调用方\n    resolve(message);\n  });\n}\n\n// 判断是否是 messageOptions\nfunction isConfig(content: MessageOptions | React.ReactNode): content is MessageOptions {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!(content as MessageOptions).content;\n}\n\nconst messageMethod: MessageMethod = (theme: MessageThemeList, content, duration: number = globalConfig.duration) => {\n  let config = {} as MessageOptions;\n  if (isConfig(content)) {\n    config = {\n      duration,\n      ...content,\n    };\n  } else {\n    config = {\n      content,\n      duration,\n    };\n  }\n  config = {\n    ...config,\n    zIndex: config.zIndex || globalConfig.zIndex,\n  };\n  return renderElement(theme, config);\n};\n\nexport const MessagePlugin: MessagePlugin = (theme, message, duration) => messageMethod(theme, message, duration);\nMessagePlugin.info = (content, duration) => messageMethod('info', content, duration);\nMessagePlugin.error = (content, duration) => messageMethod('error', content, duration);\nMessagePlugin.warning = (content, duration) => messageMethod('warning', content, duration);\nMessagePlugin.success = (content, duration) => messageMethod('success', content, duration);\nMessagePlugin.question = (content, duration) => messageMethod('question', content, duration);\nMessagePlugin.loading = (content, duration) => messageMethod('loading', content, duration);\n\n/**\n * @date 2021-05-16 13:11:24\n * @desc Message 顶层内置函数，传入 message promise，关闭传入的 message.\n */\nMessagePlugin.close = (messageInstance) => {\n  messageInstance.then((instance) => instance.close());\n};\n\n/**\n * @date 2021-05-16 13:11:24\n * @desc 关闭所有的 message\n * :todo 需明确关闭范围，目前 message 中暂无 namespace 类似概念，暂时做全 message 关闭\n * 可预见到的扩展: 根据不同的 attach 做关闭,根据不同的类型做关闭，根据不同的 namespace 做关闭等等\n */\nMessagePlugin.closeAll = (): MessageCloseAllMethod => {\n  MessageList.forEach((message) => {\n    typeof message.close === 'function' && message.close();\n  });\n  MessageList = [];\n  return;\n};\n\nexport const message = MessagePlugin;\n\nexport default MessageComponent;\n"],"names":["MessageList","keyIndex","globalConfig","zIndex","duration","top","createContainer","attach","placement","mountedDom","document","body","result","querySelectorAll","length","tdMessageListClass","tdMessagePlacementClass","container","Array","from","div","createElement","className","classNames","style","String","Object","keys","PlacementOffset","forEach","key","includes","appendChild","renderElement","theme","config","content","offset","onDurationEnd","noop","message2","close","ReactDOM","unmountComponentAtNode","remove","setTimeout","isArray","left","position","Promise","resolve","render","React","MessageComponent","push","isConfig","prototype","toString","call","messageMethod","MessagePlugin","info","error","warning","success","question","loading","messageInstance","then","instance","closeAll","message"],"mappings":"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"}