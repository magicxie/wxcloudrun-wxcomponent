/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('../_chunks/dep-a7666a95.js');
var notification_NotificationList = require('./NotificationList.js');
require('../_chunks/dep-449daca3.js');
require('../_chunks/dep-8f3deb2a.js');
require('../_chunks/dep-045b87c1.js');
require('../_chunks/dep-fa36e79f.js');
require('react');
require('react-dom');
require('../_util/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('../_util/noop.js');
require('./Notification.js');
require('tdesign-icons-react');

var renderNotification = function renderNotification(theme, options) {
  if (_typeof._typeof(options) !== "object") return;

  var placement = function () {
    if (["top-left", "top-right", "bottom-left", "bottom-right"].indexOf(options.placement) >= 0) {
      return options.placement;
    }

    return "top-right";
  }();

  var attach = function () {
    if (options.attach && typeof options.attach === "string") {
      var element2 = document.querySelector(options.attach);
      if (element2 instanceof HTMLElement) return element2;
    }

    if (options.attach instanceof HTMLElement) return options.attach;
    var containerId = "tdesign-notification-".concat(placement);
    var container = document.querySelector("#".concat(containerId));

    if (container && container instanceof HTMLElement) {
      return container;
    }

    var element = document.createElement("div");
    element.setAttribute("id", containerId);
    document.body.appendChild(element);
    return element;
  }();

  var zIndex = options.zIndex || 6e3;
  return notification_NotificationList.fetchListInstance(placement, attach, zIndex).then(function (listInstance) {
    return listInstance.push(theme, options);
  });
};

var NotificationPlugin = function NotificationPlugin(theme, props) {
  return renderNotification(theme, props);
};

NotificationPlugin.info = function (options) {
  return renderNotification("info", options);
};

NotificationPlugin.success = function (options) {
  return renderNotification("success", options);
};

NotificationPlugin.warning = function (options) {
  return renderNotification("warning", options);
};

NotificationPlugin.error = function (options) {
  return renderNotification("error", options);
};

NotificationPlugin.close = function (promise) {
  return promise.then(function (instance) {
    return instance.close();
  });
};

NotificationPlugin.closeAll = function () {
  return notification_NotificationList.listMap.forEach(function (list) {
    return list.removeAll();
  });
};

var notification = NotificationPlugin;

exports.NotificationPlugin = NotificationPlugin;
exports.notification = notification;
//# sourceMappingURL=NotificationPlugin.js.map
