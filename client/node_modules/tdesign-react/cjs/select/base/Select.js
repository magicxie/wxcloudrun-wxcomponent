/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-449daca3.js');
var slicedToArray = require('../../_chunks/dep-fa36e79f.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var classNames = require('classnames');
var isFunction = require('../../_chunks/dep-1bafebb1.js');
var get = require('../../_chunks/dep-af921283.js');
var isString = require('../../_chunks/dep-0705da20.js');
var lodash = require('lodash');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var _util_useConfig = require('../../_util/useConfig.js');
var _util_composeRefs = require('../../_util/composeRefs.js');
var _util_useDefaultValue = require('../../_util/useDefaultValue.js');
var _util_forwardRefWithStatics = require('../../_util/forwardRefWithStatics.js');
var select_util_helper = require('../util/helper.js');
var _util_noop = require('../../_util/noop.js');
var common_FakeArrow = require('../../common/FakeArrow.js');
var loading_index = require('../../loading/index.js');
var input_index = require('../../input/index.js');
var popup_index = require('../../popup/index.js');
var tag_index = require('../../tag/index.js');
var select_base_Option = require('./Option.js');
var select_base_OptionGroup = require('./OptionGroup.js');
var select_base_PopupContent = require('./PopupContent.js');
require('../../_chunks/dep-045b87c1.js');
require('../../_chunks/dep-0e3f1753.js');
require('../../_chunks/dep-a7666a95.js');
require('../../_chunks/dep-735b841a.js');
require('../../_chunks/dep-4f605641.js');
require('../../_chunks/dep-9125a75e.js');
require('../../_chunks/dep-9c74d22d.js');
require('../../_chunks/dep-48870ae5.js');
require('../../_chunks/dep-20e76bfc.js');
require('../../_chunks/dep-6681bc7b.js');
require('../../_chunks/dep-7a0cfc4c.js');
require('../../config-provider/ConfigContext.js');
require('../../locale/zh_CN.js');
require('../../_chunks/dep-e03ca79d.js');
require('../../_util/useDefault.js');
require('hoist-non-react-statics');
require('../../_chunks/dep-8f3deb2a.js');
require('../../loading/loading.js');
require('../../_util/dom.js');
require('raf');
require('../../_util/easing.js');
require('../../common/Portal.js');
require('react-dom');
require('../../loading/gradient.js');
require('../../loading/plugin.js');
require('../../input/Input.js');
require('../../input/InputGroup.js');
require('../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../_util/usePrevious.js');
require('../../popup/Portal.js');
require('../../popup/hooks/useTriggerProps.js');
require('../../_util/useClickOutside.js');
require('../../popup/hooks/usePopupCssTransition.js');
require('../../tag/Tag.js');
require('../../tag/CheckTag.js');
require('../../_chunks/dep-f0639562.js');
require('../../_util/useRipple.js');
require('../../_util/setStyle.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var MAX_OVERLAY_WIDTH = 500;
var Select = _util_forwardRefWithStatics["default"](function (props, ref) {
  var _classNames3;

  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("select"),
      _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var emptyText = t(local.loadingText);

  var _useDefaultValue = _util_useDefaultValue["default"](props),
      _useDefaultValue$bord = _useDefaultValue.bordered,
      bordered = _useDefaultValue$bord === void 0 ? true : _useDefaultValue$bord,
      creatable = _useDefaultValue.creatable,
      filter = _useDefaultValue.filter,
      _useDefaultValue$load = _useDefaultValue.loadingText,
      loadingText = _useDefaultValue$load === void 0 ? emptyText : _useDefaultValue$load,
      _useDefaultValue$max = _useDefaultValue.max,
      max = _useDefaultValue$max === void 0 ? 0 : _useDefaultValue$max,
      popupProps = _useDefaultValue.popupProps,
      reserveKeyword = _useDefaultValue.reserveKeyword,
      value = _useDefaultValue.value,
      className = _useDefaultValue.className,
      style = _useDefaultValue.style,
      disabled = _useDefaultValue.disabled,
      size = _useDefaultValue.size,
      multiple = _useDefaultValue.multiple,
      placeholder = _useDefaultValue.placeholder,
      clearable = _useDefaultValue.clearable,
      prefixIcon = _useDefaultValue.prefixIcon,
      options = _useDefaultValue.options,
      filterable = _useDefaultValue.filterable,
      loading = _useDefaultValue.loading,
      _onFocus = _useDefaultValue.onFocus,
      _onBlur = _useDefaultValue.onBlur,
      _useDefaultValue$onCl = _useDefaultValue.onClear,
      onClear = _useDefaultValue$onCl === void 0 ? _util_noop["default"] : _useDefaultValue$onCl,
      onCreate = _useDefaultValue.onCreate,
      onRemove = _useDefaultValue.onRemove,
      onSearch = _useDefaultValue.onSearch,
      onChange = _useDefaultValue.onChange,
      empty = _useDefaultValue.empty,
      _useDefaultValue$valu = _useDefaultValue.valueType,
      valueType = _useDefaultValue$valu === void 0 ? "value" : _useDefaultValue$valu,
      keys = _useDefaultValue.keys,
      children = _useDefaultValue.children,
      collapsedItems = _useDefaultValue.collapsedItems,
      minCollapsedNum = _useDefaultValue.minCollapsedNum,
      valueDisplay = _useDefaultValue.valueDisplay,
      _onEnter = _useDefaultValue.onEnter,
      onVisibleChange = _useDefaultValue.onVisibleChange;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-select");

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      showPopup = _useState2[0],
      setShowPopup = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      isHover = _useState4[0],
      toggleHover = _useState4[1];

  var _useState5 = React.useState(void 0),
      _useState6 = slicedToArray._slicedToArray(_useState5, 2),
      inputVal = _useState6[0],
      setInputVal = _useState6[1];

  var _useState7 = React.useState([]),
      _useState8 = slicedToArray._slicedToArray(_useState7, 2),
      currentOptions = _useState8[0],
      setCurrentOptions = _useState8[1];

  var _useState9 = React.useState([]),
      _useState10 = slicedToArray._slicedToArray(_useState9, 2),
      tmpPropOptions = _useState10[0],
      setTmpPropOptions = _useState10[1];

  var _useState11 = React.useState({}),
      _useState12 = slicedToArray._slicedToArray(_useState11, 2),
      valueToOption = _useState12[0],
      setValueToOption = _useState12[1];

  var _useState13 = React.useState([]),
      _useState14 = slicedToArray._slicedToArray(_useState13, 2),
      selectedOptions = _useState14[0],
      setSelectedOptions = _useState14[1];

  var _useState15 = React.useState(0),
      _useState16 = slicedToArray._slicedToArray(_useState15, 2),
      width = _useState16[0],
      setWidth = _useState16[1];

  var selectRef = React.useRef(null);
  var overlayRef = React.useRef(null);
  var selectedLabel = React.useMemo(function () {
    return get.get_1(selectedOptions[0] || {}, (keys === null || keys === void 0 ? void 0 : keys.label) || "label") || "";
  }, [selectedOptions, keys]);
  React.useEffect(function () {
    if (showPopup && selectRef !== null && selectRef !== void 0 && selectRef.current) {
      var _overlayRef$current, _overlayRef$current$g;

      var domRect = selectRef.current.getBoundingClientRect();
      var overlayRect = overlayRef === null || overlayRef === void 0 ? void 0 : (_overlayRef$current = overlayRef.current) === null || _overlayRef$current === void 0 ? void 0 : (_overlayRef$current$g = _overlayRef$current.getBoundingClientRect) === null || _overlayRef$current$g === void 0 ? void 0 : _overlayRef$current$g.call(_overlayRef$current);
      var width2 = domRect.width > MAX_OVERLAY_WIDTH ? domRect.width : Math.min(MAX_OVERLAY_WIDTH, Math.max(domRect.width, overlayRect === null || overlayRect === void 0 ? void 0 : overlayRect.width));
      setWidth(width2);
    }
  }, [showPopup]);

  var handleShowPopup = function handleShowPopup(visible) {
    if (disabled) return;
    setShowPopup(visible);
    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(visible);

    if (!visible && !multiple && filterable) {
      setInputVal(selectedLabel);
    }
  };

  React.useEffect(function () {
    if (keys) {
      var transformedOptions = options.map(function (option) {
        return _objectSpread(_objectSpread({}, option), {}, {
          value: get.get_1(option, (keys === null || keys === void 0 ? void 0 : keys.value) || "value"),
          label: get.get_1(option, (keys === null || keys === void 0 ? void 0 : keys.label) || "label")
        });
      });
      setCurrentOptions(transformedOptions);
      setTmpPropOptions(transformedOptions);
    } else {
      setCurrentOptions(options);
      setTmpPropOptions(options);
    }

    setValueToOption(select_util_helper.getValueToOption(children, options, keys) || {});
  }, [options, keys, children]);
  React.useEffect(function () {
    setSelectedOptions(function (oldSelectedOptions) {
      var valueKey = (keys === null || keys === void 0 ? void 0 : keys.value) || "value";
      var labelKey = (keys === null || keys === void 0 ? void 0 : keys.label) || "label";

      if (Array.isArray(value)) {
        return value.map(function (item) {
          if (valueType === "value") {
            var _ref;

            return valueToOption[item] || oldSelectedOptions.find(function (option) {
              return get.get_1(option, valueKey) === item;
            }) || (_ref = {}, defineProperty._defineProperty(_ref, valueKey, item), defineProperty._defineProperty(_ref, labelKey, item), _ref);
          }

          return item;
        }).filter(Boolean);
      }

      if (value !== void 0 && value !== null) {
        if (valueType === "value") {
          var _ref2;

          return [valueToOption[value] || oldSelectedOptions.find(function (option) {
            return get.get_1(option, valueKey) === value;
          }) || (_ref2 = {}, defineProperty._defineProperty(_ref2, valueKey, value), defineProperty._defineProperty(_ref2, labelKey, value), _ref2)].filter(Boolean);
        }

        return [value];
      }

      return [];
    });
  }, [value, keys, valueType, valueToOption]);

  var removeTag = function removeTag(event, selectValue, tagData) {
    event.stopPropagation();
    var values = select_util_helper.getSelectValueArr(value, selectValue, true, valueType, keys);
    onChange(values);

    if (isFunction.isFunction_1(onRemove)) {
      onRemove({
        value: tagData.value,
        data: tagData,
        e: event
      });
    }
  };

  var handleChange = function handleChange(value2, _ref3) {
    var label = _ref3.label;

    if (filterable) {
      setInputVal(!multiple || reserveKeyword && multiple ? label : "");
    }

    if (creatable && isFunction.isFunction_1(onCreate)) {
      if (options.filter(function (option) {
        return option.value === value2;
      }).length === 0) {
        onCreate(value2);
      }
    }

    onChange(value2);
  };

  var handleFilter = function handleFilter(value2) {
    var filteredOptions;

    if (!value2) {
      setCurrentOptions(tmpPropOptions);
      return;
    }

    if (filter && isFunction.isFunction_1(filter)) {
      filteredOptions = Array.isArray(tmpPropOptions) && tmpPropOptions.filter(function (option) {
        return filter(value2, option);
      });
    } else {
      var filterRegExp = new RegExp(value2, "i");
      filteredOptions = Array.isArray(tmpPropOptions) && tmpPropOptions.filter(function (option) {
        return filterRegExp.test(option === null || option === void 0 ? void 0 : option.label);
      });
    }

    if (creatable) {
      filteredOptions = filteredOptions.concat([{
        label: value2,
        value: value2
      }]);
    }

    setCurrentOptions(filteredOptions);
  };

  var handleInputChange = function handleInputChange(value2) {
    setInputVal(value2);

    if (isFunction.isFunction_1(onSearch)) {
      onSearch(value2);
      return;
    }

    handleFilter(value2);
  };

  var defaultLabel = /* @__PURE__ */React__default["default"].createElement("span", {
    className: classNames__default["default"](className, defineProperty._defineProperty({}, "".concat(name, "__placeholder"), !value && !lodash.isNumber(value) || Array.isArray(value) && value.length < 1), defineProperty._defineProperty({}, "".concat(name, "__single"), selectedLabel))
  }, selectedLabel || placeholder || "-\u8BF7\u9009\u62E9-");

  var renderMultipleTags = function renderMultipleTags() {
    if (multiple && Array.isArray(value) && value.length > 0) {
      var tags;

      if (valueType === "value") {
        tags = select_util_helper.getMultipleTags(selectedOptions, keys);
      } else {
        tags = select_util_helper.getMultipleTags(value, keys);
      }

      if (tags.length > 0) return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, tags.slice(0, minCollapsedNum).map(function (item) {
        return /* @__PURE__ */React__default["default"].createElement(tag_index.Tag, {
          closable: !disabled,
          key: item.value,
          onClose: function onClose(_ref4) {
            var e = _ref4.e;
            return removeTag(e, item.value, item);
          },
          disabled: disabled,
          size: size
        }, item.label);
      }), collapsedItems, minCollapsedNum && tags.length - minCollapsedNum > 0 && !collapsedItems ? /* @__PURE__ */React__default["default"].createElement(tag_index.Tag, {
        size: size
      }, " ", "+".concat(tags.length - minCollapsedNum)) : null);
      return !filterable ? defaultLabel : null;
    }

    return !filterable ? defaultLabel : null;
  };

  var renderInput = function renderInput() {
    return /* @__PURE__ */React__default["default"].createElement(input_index.Input, {
      value: isString.isString_1(inputVal) ? inputVal : selectedLabel,
      placeholder: multiple && get.get_1(value, "length") > 0 ? null : selectedLabel || placeholder || "-\u8BF7\u9009\u62E9-",
      className: "".concat(name, "__input"),
      onChange: handleInputChange,
      size: size,
      onFocus: function onFocus(_, context) {
        return _onFocus === null || _onFocus === void 0 ? void 0 : _onFocus({
          value: value,
          e: context === null || context === void 0 ? void 0 : context.e
        });
      },
      onBlur: function onBlur(_, context) {
        return _onBlur === null || _onBlur === void 0 ? void 0 : _onBlur({
          value: value,
          e: context === null || context === void 0 ? void 0 : context.e
        });
      },
      onEnter: function onEnter(_, context) {
        return _onEnter === null || _onEnter === void 0 ? void 0 : _onEnter({
          inputValue: inputVal,
          value: value,
          e: context === null || context === void 0 ? void 0 : context.e
        });
      }
    });
  };

  var onInputClick = function onInputClick(e) {
    e.preventDefault();

    if (!disabled) {
      setShowPopup(!showPopup);
      setInputVal("");
    }
  };

  var onClearValue = function onClearValue(event) {
    event.stopPropagation();

    if (Array.isArray(value)) {
      onChange([]);
    } else {
      onChange("");
    }

    setInputVal(void 0);
    onClear({
      e: event
    });
  };

  var renderSuffixIcon = function renderSuffixIcon() {
    if (loading) {
      return /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
        className: classNames__default["default"](className, "".concat(name, "__right-icon"), "".concat(name, "__active-icon")),
        loading: true,
        size: "small"
      });
    }

    if (clearable && value && isHover) {
      return /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseCircleFilledIcon, {
        onClick: clearable ? onClearValue : void 0,
        className: classNames__default["default"](className, "".concat(name, "__right-icon"), "".concat(name, "__right-icon-clear"))
      });
    }

    return /* @__PURE__ */React__default["default"].createElement(common_FakeArrow["default"], {
      overlayClassName: "".concat(name, "__right-icon"),
      isActive: showPopup,
      disabled: disabled
    });
  };

  var popupContentProps = {
    onChange: handleChange,
    value: value,
    className: className,
    size: size,
    multiple: multiple,
    showPopup: showPopup,
    setShowPopup: setShowPopup,
    options: currentOptions,
    empty: empty,
    max: max,
    loadingText: loadingText,
    loading: loading,
    valueType: valueType,
    keys: keys
  };

  var renderContent = function renderContent() {
    return /* @__PURE__ */React__default["default"].createElement(select_base_PopupContent["default"], _objectSpread({}, popupContentProps), children);
  };

  var renderMultipleInput = function renderMultipleInput() {
    if (valueDisplay) {
      return valueDisplay({
        value: value,
        onClose: removeTag
      }) || defaultLabel;
    }

    return renderMultipleTags();
  };

  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(name, "__wrap"),
    style: _objectSpread({}, style),
    onMouseEnter: function onMouseEnter() {
      return toggleHover(true);
    },
    onMouseLeave: function onMouseLeave() {
      return toggleHover(false);
    }
  }, /* @__PURE__ */React__default["default"].createElement(popup_index.Popup, _objectSpread({
    trigger: "click",
    ref: overlayRef,
    content: renderContent(),
    placement: "bottom-left",
    visible: showPopup,
    overlayStyle: {
      width: width ? "".concat(width, "px") : "none"
    },
    onVisibleChange: handleShowPopup,
    overlayClassName: classNames__default["default"](className, "".concat(name, "__dropdown"), "".concat(classPrefix, "-popup"), "narrow-scrollbar"),
    className: "".concat(name, "__popup-reference"),
    expandAnimation: true,
    destroyOnClose: true
  }, popupProps), /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](className, name, (_classNames3 = {}, defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-is-disabled"), disabled), defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-is-active"), showPopup), defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-size-s"), size === "small"), defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-size-l"), size === "large"), defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-no-border"), !bordered), defineProperty._defineProperty(_classNames3, "".concat(classPrefix, "-has-prefix"), !!prefixIcon), _classNames3)),
    ref: _util_composeRefs["default"](selectRef, ref),
    style: {
      userSelect: "none"
    },
    onClick: onInputClick
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: "".concat(name, "__left-icon")
  }, prefixIcon), multiple ? renderMultipleInput() : null, filterable && renderInput(), !multiple && !filterable && defaultLabel, renderSuffixIcon())));
}, {
  displayName: "Select",
  Option: select_base_Option["default"],
  OptionGroup: select_base_OptionGroup["default"]
});

exports["default"] = Select;
//# sourceMappingURL=Select.js.map
