{"version":3,"file":"helper.js","sources":["../../../src/select/util/helper.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport { isPlainObject, get } from 'lodash';\nimport OptionGroup from '../base/OptionGroup';\nimport Option from '../base/Option';\n\nimport { SelectValue, TdOptionProps, SelectKeysType } from '../type';\n\ntype SelectLabeledValue = Required<Omit<TdOptionProps, 'disabled'>>;\n\ntype ValueToOption = {\n  [value: string | number]: TdOptionProps;\n};\n\nfunction setValueToOptionFormOptionDom(dom, valueToOption: ValueToOption, keys: SelectKeysType) {\n  const { value, label, children } = dom.props;\n  // eslint-disable-next-line no-param-reassign\n  valueToOption[value] = {\n    [keys?.value || 'value']: value,\n    [keys?.label || 'label']: label || children || value,\n  };\n}\n\n// 获取value => option，用于快速基于value找到对应的option\nexport const getValueToOption = (children, options: TdOptionProps[], keys: SelectKeysType): ValueToOption => {\n  const valueToOption = {};\n\n  // options优先级高于children\n  if (Array.isArray(options)) {\n    options.forEach((option) => {\n      valueToOption[get(option, keys?.value || 'value')] = option;\n    });\n    return valueToOption;\n  }\n\n  if (isPlainObject(children)) {\n    const { name } = children.type as { name: string };\n    if (name === Option.name) {\n      setValueToOptionFormOptionDom(children, valueToOption, keys);\n      return valueToOption;\n    }\n\n    if (name === OptionGroup.name) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.forEach((item) => {\n          setValueToOptionFormOptionDom(item, valueToOption, keys);\n        });\n        return valueToOption;\n      }\n    }\n  }\n\n  if (Array.isArray(children)) {\n    children.forEach((item: ReactElement) => {\n      const { name } = item.type as { name: string };\n      if (name === Option.name) {\n        setValueToOptionFormOptionDom(item, valueToOption, keys);\n      }\n\n      if (name === OptionGroup.name) {\n        const groupChildren = item.props.children;\n        if (Array.isArray(groupChildren)) {\n          groupChildren.forEach((groupItem) => {\n            setValueToOptionFormOptionDom(groupItem, valueToOption, keys);\n          });\n        }\n      }\n    });\n  }\n\n  return valueToOption;\n};\n\n// 获取单选的label\nexport const getLabel = (\n  children,\n  value: SelectValue<TdOptionProps>,\n  options: TdOptionProps[],\n  keys: SelectKeysType,\n) => {\n  let selectedLabel = '';\n  // 处理带 options 属性的情况\n  if (Array.isArray(options)) {\n    options.some((option) => {\n      if ([get(value, keys?.value || 'value'), value].includes(option.value)) {\n        selectedLabel = option.label;\n        return true;\n      }\n      return false;\n    });\n\n    return selectedLabel;\n  }\n\n  if (isPlainObject(children)) {\n    selectedLabel = children.props.label;\n\n    if (children.type.name === OptionGroup.name) {\n      const groupChildren = children.props.children;\n\n      if (Array.isArray(groupChildren)) {\n        groupChildren.some((item) => {\n          const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n          if (isPlainObject(item.props) && item.props.value === selectedValue) {\n            selectedLabel = item.props.label || item.props.children;\n            return true;\n          }\n          return false;\n        });\n      }\n    }\n  }\n\n  if (Array.isArray(children)) {\n    children.some((item: ReactElement) => {\n      // 处理分组\n      const { name } = item.type as { name: string };\n      if (name === OptionGroup.name) {\n        const groupChildren = item.props.children;\n        if (Array.isArray(groupChildren)) {\n          const isSelected = groupChildren.some((item) => {\n            const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n            if (isPlainObject(item.props) && item.props.value === selectedValue) {\n              selectedLabel = item.props.label || item.props.children;\n              return true;\n            }\n            return false;\n          });\n          return isSelected;\n        }\n      }\n      const selectedValue = isPlainObject(value) ? get(value, 'value') : value;\n      if (isPlainObject(item.props) && item.props.value === selectedValue) {\n        selectedLabel = item.props.label || item.props.children;\n        return true;\n      }\n      return false;\n    });\n  }\n\n  return selectedLabel;\n};\n\nexport const getMultipleTags = (values: SelectValue[], keys: SelectKeysType) => {\n  const tags = values.map((item) => ({\n    label: get(item, keys?.label || 'label') || item.toString(),\n    value: get(item, keys?.value || 'value') || item,\n  }));\n  return tags;\n};\n\nexport const getSelectValueArr = (\n  values: SelectValue | SelectValue[],\n  activeValue: SelectValue,\n  selected?: boolean,\n  valueType?: 'object' | 'value',\n  keys?: SelectKeysType,\n  objVal?: SelectValue,\n) => {\n  // eslint-disable-next-line no-param-reassign\n  values = Array.isArray(values) ? values : [];\n\n  if (Array.isArray(values)) {\n    let currentValues = [...values];\n    const isValueObj = valueType === 'object';\n\n    if (selected) {\n      currentValues = currentValues.filter((item: SelectLabeledValue) => {\n        if (isValueObj) {\n          if (isPlainObject(activeValue)) {\n            return get(item, keys?.value || 'value') !== get(activeValue, 'value');\n          }\n          return get(item, keys?.value || 'value') !== activeValue;\n        }\n        return item !== activeValue;\n      });\n    } else {\n      const item = isValueObj ? objVal : activeValue;\n\n      currentValues.push(item as SelectValue);\n    }\n    return currentValues;\n  }\n};\n"],"names":["setValueToOptionFormOptionDom","dom","valueToOption","keys","props","value","label","children","getValueToOption","options","Array","isArray","forEach","option","get","isPlainObject","name","type","Option","OptionGroup","groupChildren","item","groupItem","getLabel","selectedLabel","some","includes","selectedValue","isSelected","item2","selectedValue2","getMultipleTags","values","tags","map","toString","getSelectValueArr","activeValue","selected","valueType","objVal","currentValues","isValueObj","filter","push"],"mappings":"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"}