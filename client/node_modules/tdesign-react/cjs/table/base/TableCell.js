/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-449daca3.js');
var slicedToArray = require('../../_chunks/dep-fa36e79f.js');
var React = require('react');
var classNames = require('classnames');
var _util_useConfig = require('../../_util/useConfig.js');
var table_base_TableContext = require('./TableContext.js');
require('../../_chunks/dep-045b87c1.js');
require('../../config-provider/ConfigContext.js');
require('../../locale/zh_CN.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var TableCell = function TableCell(props) {
  var _classnames;

  var _props$style = props.style,
      style = _props$style === void 0 ? {} : _props$style,
      width = props.width,
      type = props.type,
      record = props.record,
      colKey = props.colKey,
      customRender = props.customRender,
      colIndex = props.colIndex,
      fixed = props.fixed,
      align = props.align,
      ellipsis = props.ellipsis,
      columns = props.columns,
      rowIndex = props.rowIndex,
      className = props.className,
      rowSpan = props.rowSpan,
      colSpan = props.colSpan,
      isFirstChildTdSetBorderWidth = props.isFirstChildTdSetBorderWidth;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var _useTableContext = table_base_TableContext.useTableContext(),
      flattenColumns = _useTableContext.flattenColumns;

  var _useState = React.useState(0),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      offset = _useState2[0],
      setOffset = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = slicedToArray._slicedToArray(_useState3, 2),
      isBoundary = _useState4[0],
      setIsBoundary = _useState4[1];

  var ref = React.useRef();
  React.useLayoutEffect(function () {
    if (ref.current) {
      var offset2 = 0;
      var clientWidth = ref.current.clientWidth;
      var fixedColumns = flattenColumns.filter(function (column) {
        return column.fixed === fixed;
      });
      var indexInFixedColumns = fixedColumns.findIndex(function (_ref) {
        var key = _ref.colKey;
        return key === colKey;
      });
      fixedColumns.forEach(function (_, cur) {
        if (fixed === "right" && cur > indexInFixedColumns || fixed === "left" && cur < indexInFixedColumns) {
          offset2 += clientWidth;
        }
      });
      setOffset(offset2);
      var isBoundary2 = fixed === "left" ? indexInFixedColumns === fixedColumns.length - 1 : indexInFixedColumns === 0;
      setIsBoundary(isBoundary2);
    }
  }, [ref, flattenColumns, colKey, fixed]);
  var cellNode = customRender({
    type: type,
    row: record,
    rowIndex: rowIndex,
    col: columns === null || columns === void 0 ? void 0 : columns[colIndex],
    colIndex: colIndex
  });

  var cellStyle = _objectSpread({}, style);

  if (fixed) {
    cellStyle.position = "sticky";
    cellStyle[fixed] = offset;
  }

  if (width && !fixed) {
    cellStyle.overflow = "hidden";
  }

  if (isFirstChildTdSetBorderWidth) {
    cellStyle.borderWidth = 1;
  }

  return /* @__PURE__ */React__default["default"].createElement("td", {
    ref: ref,
    style: cellStyle,
    className: classNames__default["default"]((_classnames = {}, defineProperty._defineProperty(_classnames, "".concat(classPrefix, "-table__cell--fixed-").concat(fixed), fixed), defineProperty._defineProperty(_classnames, "".concat(classPrefix, "-table__cell--fixed-").concat(fixed, "-").concat(fixed === "left" ? "last" : "first"), fixed && isBoundary), defineProperty._defineProperty(_classnames, "".concat(classPrefix, "-align-").concat(align), align), defineProperty._defineProperty(_classnames, "".concat(classPrefix, "-text-ellipsis"), ellipsis), defineProperty._defineProperty(_classnames, "".concat(className), !!className), _classnames)),
    rowSpan: rowSpan,
    colSpan: colSpan
  }, cellNode);
};

exports["default"] = TableCell;
//# sourceMappingURL=TableCell.js.map
