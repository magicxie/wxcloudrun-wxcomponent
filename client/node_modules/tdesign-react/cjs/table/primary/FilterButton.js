/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-449daca3.js');
var slicedToArray = require('../../_chunks/dep-fa36e79f.js');
var React = require('react');
var classNames = require('classnames');
var isFunction = require('../../_chunks/dep-1bafebb1.js');
var isString = require('../../_chunks/dep-0705da20.js');
var tdesignIconsReact = require('tdesign-icons-react');
var popup_index = require('../../popup/index.js');
var radio_index = require('../../radio/index.js');
var checkbox_index = require('../../checkbox/index.js');
var input_index = require('../../input/index.js');
var configProvider_ConfigContext = require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-045b87c1.js');
require('../../_chunks/dep-0e3f1753.js');
require('../../_chunks/dep-a7666a95.js');
require('../../_chunks/dep-735b841a.js');
require('../../_chunks/dep-9125a75e.js');
require('../../_chunks/dep-48870ae5.js');
require('../../popup/Popup.js');
require('react-transition-group');
require('react-popper');
require('../../_util/useDefault.js');
require('../../_util/noop.js');
require('../../_util/useConfig.js');
require('../../locale/zh_CN.js');
require('../../_util/composeRefs.js');
require('../../_util/usePrevious.js');
require('../../popup/Portal.js');
require('react-dom');
require('../../popup/hooks/useTriggerProps.js');
require('../../_util/useClickOutside.js');
require('../../popup/hooks/usePopupCssTransition.js');
require('../../_chunks/dep-f1b75399.js');
require('../../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../../common/Check.js');
require('../../_chunks/dep-e03ca79d.js');
require('../../_util/helper.js');
require('../../_chunks/dep-3ca698ba.js');
require('../../_chunks/dep-7a0cfc4c.js');
require('../../_chunks/dep-9c74d22d.js');
require('../../_chunks/dep-bc486aab.js');
require('../../_chunks/dep-c7adf4af.js');
require('../../_util/useCommonClassName.js');
require('../../_chunks/dep-8027cfc6.js');
require('../../_chunks/dep-f0639562.js');
require('../../input/Input.js');
require('../../input/InputGroup.js');
require('../../_util/useDefaultValue.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var renderIcon = function renderIcon(classPrefix, icon) {
  var result = null;
  if (icon) result = icon;
  if (typeof icon === "function") result = icon();

  if (result) {
    result = /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(classPrefix, "-table__filter-icon")
    }, result);
  } else {
    result = /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.FilterIcon, {
      className: "".concat(classPrefix, "-table__filter-icon")
    });
  }

  return result;
};

function getTitle(column, colIndex) {
  var result = null;

  if (isFunction.isFunction_1(column.title)) {
    result = column.title({
      col: column,
      colIndex: colIndex
    });
  } else if (isString.isString_1(column.title)) {
    result = column.title;
  }

  return result;
}

function FilterButton(props) {
  var onChange = props.onChange,
      filterIcon = props.filterIcon,
      innerfiltVal = props.innerfiltVal,
      columns = props.columns;

  var _useContext = React.useContext(configProvider_ConfigContext["default"]),
      classPrefix = _useContext.classPrefix;

  var _useState = React.useState(),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      filterVal = _useState2[0],
      setfilterVal = _useState2[1];

  var getFilterContent = function getFilterContent(filter, colKey, column) {
    var types = ["single", "multiple", "input"];

    if (filter.type && !types.includes(filter.type)) {
      console.error("column.type must be the following: ".concat(JSON.stringify(types)));
      return;
    }

    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-table__filter-pop-content-inner")
    }, /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, filter.type === "multiple" ? /* @__PURE__ */React__default["default"].createElement(checkbox_index.Checkbox.Group, {
      value: (filterVal === null || filterVal === void 0 ? void 0 : filterVal[colKey]) || [],
      defaultValue: [],
      onChange: function onChange(value) {
        onChangeFilter(value, colKey, column);
      }
    }, filter === null || filter === void 0 ? void 0 : filter.list.map(function (_ref) {
      var label = _ref.label,
          value = _ref.value;
      return /* @__PURE__ */React__default["default"].createElement(checkbox_index.Checkbox, {
        key: value,
        value: value
      }, label);
    })) : null, filter.type === "single" ? /* @__PURE__ */React__default["default"].createElement(radio_index.Radio.Group, {
      size: "large",
      value: (filterVal === null || filterVal === void 0 ? void 0 : filterVal[colKey]) || "",
      onChange: function onChange(value) {
        onChangeFilter(value, colKey, column);
      }
    }, filter === null || filter === void 0 ? void 0 : filter.list.map(function (_ref2) {
      var label = _ref2.label,
          value = _ref2.value;
      return /* @__PURE__ */React__default["default"].createElement(radio_index.Radio, {
        key: value,
        value: value
      }, label);
    })) : null, filter.type === "input" ? /* @__PURE__ */React__default["default"].createElement(input_index.Input, {
      placeholder: "\u8BF7\u8F93\u5165\u5185\u5BB9\uFF08\u65E0\u9ED8\u8BA4\u503C\uFF09",
      clearable: true,
      value: (filterVal === null || filterVal === void 0 ? void 0 : filterVal[colKey]) || "",
      onChange: function onChange(value) {
        onChangeFilter(value, colKey, column);
      }
    }) : null));
  };

  function onChangeFilter(value, colKey, column) {
    setfilterVal(_objectSpread(_objectSpread({}, filterVal), {}, defineProperty._defineProperty({}, colKey, value)));
    onChange(_objectSpread(_objectSpread({}, filterVal), {}, defineProperty._defineProperty({}, colKey, value)), column);
  }

  React.useEffect(function () {
    setfilterVal(innerfiltVal);
  }, [innerfiltVal]);
  return columns.map(function (column, index) {
    var filter = column.filter,
        colKey = column.colKey;

    if (!filter) {
      return column;
    }

    var lastTitle = getTitle(column, index);

    var titleNew = function titleNew() {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-table__cell--title")
      }, /* @__PURE__ */React__default["default"].createElement("div", null, lastTitle), /* @__PURE__ */React__default["default"].createElement("div", {
        className: classNames__default["default"](["".concat(classPrefix, "-table__cell--filter")])
      }, /* @__PURE__ */React__default["default"].createElement(popup_index.Popup, {
        trigger: "click",
        placement: "bottom",
        showArrow: true,
        overlayClassName: "".concat(classPrefix, "-table__filter-pop"),
        content: /* @__PURE__ */React__default["default"].createElement("div", {
          className: "".concat(classPrefix, "-table__filter-pop-content")
        }, getFilterContent(filter, colKey, column))
      }, renderIcon(classPrefix, filterIcon))));
    };

    return _objectSpread(_objectSpread({}, column), {}, {
      title: titleNew
    });
  });
}

exports["default"] = FilterButton;
//# sourceMappingURL=FilterButton.js.map
