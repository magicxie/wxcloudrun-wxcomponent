/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-449daca3.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var configProvider_ConfigContext = require('../../config-provider/ConfigContext.js');
require('../../locale/zh_CN.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ExpandButton = function ExpandButton(props) {
  var expanded = props.expanded,
      handleExpandChange = props.handleExpandChange,
      rowKeyValue = props.rowKeyValue,
      row = props.row,
      expandIcon = props.expandIcon,
      expandOnRowClick = props.expandOnRowClick;

  var _useContext = React.useContext(configProvider_ConfigContext["default"]),
      classPrefix = _useContext.classPrefix;

  var renderIcon = function renderIcon(icon) {
    var result = null;
    if (icon && typeof icon !== "boolean") result = icon;
    if (typeof icon === "function") result = icon();

    if (result) {
      result = /* @__PURE__ */React__default["default"].createElement("span", {
        className: "".concat(classPrefix, "-table-expand-icon")
      }, result);
    } else if (typeof icon === "boolean" && icon === false) {
      result = /* @__PURE__ */React__default["default"].createElement("span", {
        className: "".concat(classPrefix, "-table-expand-icon")
      });
    } else {
      result = /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.ChevronDownCircleIcon, {
        className: "".concat(classPrefix, "-table-expand-icon"),
        size: "16px"
      });
    }

    return result;
  };

  function getExpandIcon(expanded2) {
    var style = {
      transition: "all .2s",
      display: "flex",
      alignItems: "center"
    };

    if (!expanded2) {
      style.transform = "rotate(-180deg)";
    }

    return /* @__PURE__ */React__default["default"].createElement("span", {
      style: style
    }, renderIcon(expandIcon));
  }

  return /* @__PURE__ */React__default["default"].createElement("span", _objectSpread({
    className: "".concat(classPrefix, "-table__expand-box")
  }, !expandOnRowClick ? {
    onClick: function onClick() {
      return handleExpandChange(row, rowKeyValue);
    }
  } : {}), getExpandIcon(expanded));
};

exports["default"] = ExpandButton;
//# sourceMappingURL=expand-box.js.map
