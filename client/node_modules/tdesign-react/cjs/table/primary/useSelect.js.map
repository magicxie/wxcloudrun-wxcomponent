{"version":3,"file":"useSelect.js","sources":["../../../src/table/primary/useSelect.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport isFunction from 'lodash/isFunction';\nimport { ConfigContext } from '../../config-provider';\nimport { PrimaryTableCol, DataType } from '../type';\nimport { PrimaryTableProps } from './Table';\nimport { Checkbox } from '../../checkbox';\nimport { Radio } from '../../radio';\n\ntype SelectType = PrimaryTableCol['type'];\n\nconst TypeEnum: { [key in SelectType]: SelectType } = {\n  single: 'single',\n  multiple: 'multiple',\n};\nconst defaultWidth = 50;\n\n/**\n * 选中hook\n */\nfunction useSelect(props: PrimaryTableProps): [PrimaryTableCol[]] {\n  const { classPrefix } = useContext(ConfigContext);\n  const { columns, data, rowKey, defaultSelectedRowKeys, selectedRowKeys, onSelectChange } = props;\n  const isControlled = !!selectedRowKeys;\n  const [innerSelectedRowKeys, setInnerSelectedRowKeys] = useState(defaultSelectedRowKeys || []);\n  const selectColumn = columns.find((column: PrimaryTableCol) => !!TypeEnum[column.type]);\n\n  useEffect(() => {\n    if (isControlled) {\n      setInnerSelectedRowKeys(selectedRowKeys);\n    }\n  }, [selectedRowKeys, isControlled]);\n\n  if (!selectColumn) {\n    return [columns];\n  }\n  const disabledFn = getDisableFn({ selectColumn });\n  const titleCheckboxProps = getTitleCheckboxProps({ data, disabledFn, innerSelectedRowKeys, selectColumn, TypeEnum });\n\n  const transformedColumns = columns.map((column: PrimaryTableCol) => {\n    const { type, className, width } = column;\n    if (!TypeEnum[type]) {\n      return column;\n    }\n\n    let title: PrimaryTableCol['title'];\n    let cell: PrimaryTableCol['cell'];\n    const isMultiple = type === TypeEnum.multiple;\n    if (isMultiple) {\n      title = () => {\n        const { indeterminate, checked, disabled } = titleCheckboxProps;\n        return (\n          <Checkbox\n            indeterminate={indeterminate}\n            checked={checked}\n            disabled={disabled}\n            onChange={(checked) => onTitleCheckboxChange(checked)}\n          />\n        );\n      };\n      cell = (options) => {\n        const { row } = options;\n        const currentRowKeyValue = row[rowKey];\n        const checked = innerSelectedRowKeys.includes(currentRowKeyValue);\n        const disabled = disabledFn(options);\n\n        return (\n          <Checkbox\n            checked={checked}\n            disabled={disabled}\n            onChange={(checked) => onRowCheckboxChange(currentRowKeyValue, row, checked)}\n          />\n        );\n      };\n    } else {\n      cell = (options) => {\n        const { row } = options;\n        const currentRowKeyValue = row[rowKey];\n        const checked = innerSelectedRowKeys.includes(currentRowKeyValue);\n        const disabled = disabledFn(options);\n\n        return <Radio checked={checked} disabled={disabled} onChange={() => onRadioChange(currentRowKeyValue, row)} />;\n      };\n    }\n\n    return {\n      width: width || defaultWidth,\n      title,\n      cell,\n      style: { padding: '10px 0 10px 24px' },\n      className: classnames([`${classPrefix}-table__cell--selectable`, { [`${className}`]: !!className }]),\n      ...column,\n    };\n  });\n\n  function getTitleCheckboxProps({ data, disabledFn, innerSelectedRowKeys, selectColumn, TypeEnum }) {\n    if (selectColumn.type !== TypeEnum.multiple) {\n      return {\n        checked: false,\n        indeterminate: false,\n        disabled: false,\n      };\n    }\n\n    const { rowKeysExcludeDisabled, isDisabledAll } = getRowKeysExcludeDisabledAndIsDisabledAll({\n      data,\n      disabledFn,\n      innerSelectedRowKeys,\n    });\n    const innerSelectedRowKeysExcludeDisabled = innerSelectedRowKeys.filter((rowKey) =>\n      rowKeysExcludeDisabled.includes(rowKey),\n    );\n    const checked =\n      innerSelectedRowKeysExcludeDisabled.length &&\n      innerSelectedRowKeysExcludeDisabled.length === rowKeysExcludeDisabled.length;\n    const indeterminate =\n      innerSelectedRowKeysExcludeDisabled.length &&\n      innerSelectedRowKeysExcludeDisabled.length < rowKeysExcludeDisabled.length;\n\n    return {\n      checked,\n      indeterminate,\n      disabled: isDisabledAll,\n    };\n  }\n\n  function getDisableFn({ selectColumn }) {\n    const { disabled, checkProps } = selectColumn;\n    let disabledFn: PrimaryTableCol['disabled'] = () => false;\n\n    if (disabled && isFunction(disabled)) {\n      disabledFn = disabled;\n    } else if (checkProps) {\n      if (isFunction(checkProps)) {\n        disabledFn = (options) => checkProps(options)?.disabled;\n      } else if (checkProps.disabled) {\n        disabledFn = () => checkProps.disabled;\n      }\n    }\n    return disabledFn;\n  }\n\n  function getRowKeysExcludeDisabledAndIsDisabledAll({ data, disabledFn, innerSelectedRowKeys }) {\n    const dataSelectedDisabled = [];\n    const dataDisabled = [];\n    const rowKeysExcludeDisabled = [];\n    data.forEach((dataItem, index) => {\n      const isDisabled = disabledFn({ rowIndex: index, row: dataItem });\n      const isChecked = innerSelectedRowKeys.includes(dataItem[rowKey]);\n      if (!isDisabled) {\n        rowKeysExcludeDisabled.push(dataItem[rowKey]);\n      } else {\n        dataDisabled.push(dataItem);\n      }\n      if (isDisabled && isChecked) {\n        dataSelectedDisabled.push(dataItem);\n      }\n    });\n    const isDisabledAll = dataDisabled.length === data.length;\n    return {\n      rowKeysExcludeDisabled,\n      isDisabledAll,\n    };\n  }\n\n  function onTitleCheckboxChange(checked: boolean) {\n    const selectedRowData = [];\n    if (checked) {\n      data.forEach((dataItem, index) => {\n        const isDisabled = disabledFn({ rowIndex: index, row: dataItem });\n        const isChecked = innerSelectedRowKeys.includes(dataItem[rowKey]);\n        if (!isDisabled || isChecked) {\n          selectedRowData.push(dataItem);\n        }\n      });\n    } else {\n      data.forEach((dataItem, index) => {\n        const isDisabled = disabledFn({ rowIndex: index, row: dataItem });\n        const isChecked = innerSelectedRowKeys.includes(dataItem[rowKey]);\n        if (isDisabled && isChecked) {\n          selectedRowData.push(dataItem);\n        }\n      });\n    }\n    const selectedRowKeysNew = selectedRowData.map((record) => record[rowKey]);\n\n    if (!isControlled) {\n      setInnerSelectedRowKeys(selectedRowKeysNew);\n    }\n    isFunction(onSelectChange) && onSelectChange(selectedRowKeysNew, { selectedRowData });\n  }\n\n  function onRowCheckboxChange(currentRowKeyValue: string | number, row: DataType, checked: boolean) {\n    let selectedRowKeysNew = [];\n    if (checked) {\n      selectedRowKeysNew = [...innerSelectedRowKeys, currentRowKeyValue];\n    } else {\n      selectedRowKeysNew = innerSelectedRowKeys.filter((selectRowKey) => selectRowKey !== currentRowKeyValue);\n    }\n    const selectedRowData = data.filter((dataItem) => selectedRowKeysNew.includes(dataItem[rowKey]));\n    if (!isControlled) {\n      setInnerSelectedRowKeys(selectedRowKeysNew);\n    }\n    isFunction(onSelectChange) && onSelectChange(selectedRowKeysNew, { selectedRowData });\n  }\n\n  function onRadioChange(currentRowKeyValue: string | number, row: DataType) {\n    const selectedRowKeysNew = [currentRowKeyValue];\n    const selectedRowData = [row];\n    if (!isControlled) {\n      setInnerSelectedRowKeys(selectedRowKeysNew);\n    }\n    isFunction(onSelectChange) && onSelectChange(selectedRowKeysNew, { selectedRowData });\n  }\n\n  return [transformedColumns];\n}\n\nexport default useSelect;\n"],"names":["TypeEnum","single","multiple","defaultWidth","useSelect","props","useContext","ConfigContext","classPrefix","columns","data","rowKey","defaultSelectedRowKeys","selectedRowKeys","onSelectChange","isControlled","useState","innerSelectedRowKeys","setInnerSelectedRowKeys","selectColumn","find","column","type","useEffect","disabledFn","getDisableFn","titleCheckboxProps","getTitleCheckboxProps","transformedColumns","map","className","width","title","cell","isMultiple","indeterminate","checked","disabled","React","createElement","Checkbox","onChange","checked2","onTitleCheckboxChange","options","row","currentRowKeyValue","includes","onRowCheckboxChange","Radio","onRadioChange","style","padding","classnames","data2","disabledFn2","innerSelectedRowKeys2","selectColumn2","TypeEnum2","getRowKeysExcludeDisabledAndIsDisabledAll","rowKeysExcludeDisabled","isDisabledAll","innerSelectedRowKeysExcludeDisabled","filter","rowKey2","length","checkProps","isFunction","dataDisabled","forEach","dataItem","index","isDisabled","rowIndex","push","selectedRowData","isChecked","selectedRowKeysNew","record","selectRowKey"],"mappings":"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"}