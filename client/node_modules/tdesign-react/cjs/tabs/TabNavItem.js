/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var _util_useRipple = require('../_util/useRipple.js');
var _util_noop = require('../_util/noop.js');
var tabs_useTabClass = require('./useTabClass.js');
require('../_util/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('../_util/setStyle.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var TabNavItem = function TabNavItem(props) {
  var label = props.label,
      removable = props.removable,
      isActive = props.isActive,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? _util_noop["default"] : _props$onClick,
      theme = props.theme,
      placement = props.placement,
      _props$onRemove = props.onRemove,
      onRemove = _props$onRemove === void 0 ? _util_noop["default"] : _props$onRemove,
      value = props.value,
      _props$size = props.size,
      size = _props$size === void 0 ? "medium" : _props$size,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      index = props.index,
      _props$onTabRemove = props.onTabRemove,
      onTabRemove = _props$onTabRemove === void 0 ? _util_noop["default"] : _props$onTabRemove;
  var isCard = theme === "card";

  var _useTabClass = tabs_useTabClass.useTabClass(),
      tdTabsClassGenerator = _useTabClass.tdTabsClassGenerator,
      tdClassGenerator = _useTabClass.tdClassGenerator,
      tdSizeClassGenerator = _useTabClass.tdSizeClassGenerator;

  var rippleRef = React.useRef();
  _util_useRipple["default"](rippleRef);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    onClick: disabled ? _util_noop["default"] : onClick,
    className: classNames__default["default"](tdTabsClassGenerator("nav-item"), isCard ? tdTabsClassGenerator("nav--card") : "", tdSizeClassGenerator(size), isActive ? tdClassGenerator("is-active") : "", tdClassGenerator("is-".concat(placement)), disabled ? tdClassGenerator("is-disabled") : "")
  }, isCard ? /* @__PURE__ */React__default["default"].createElement("span", {
    className: classNames__default["default"](tdTabsClassGenerator("nav-item-text-wrapper"))
  }, label) : /* @__PURE__ */React__default["default"].createElement("div", {
    ref: rippleRef,
    className: classNames__default["default"](tdTabsClassGenerator("nav-item-wrapper"))
  }, /* @__PURE__ */React__default["default"].createElement("span", {
    className: classNames__default["default"](tdTabsClassGenerator("nav-item-text-wrapper"))
  }, label)), removable ? /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseIcon, {
    className: classNames__default["default"]("remove-btn"),
    onClick: function onClick(e) {
      if (disabled) {
        return;
      }

      e.stopPropagation();
      onRemove({
        value: value,
        e: e
      });
      onTabRemove({
        value: value,
        e: e,
        index: index
      });
    }
  }) : null);
};

exports["default"] = TabNavItem;
//# sourceMappingURL=TabNavItem.js.map
