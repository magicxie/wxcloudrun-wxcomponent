/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var classNames = require('classnames');
var isEmpty = require('../_chunks/dep-72f8673c.js');
var tdesignIconsReact = require('tdesign-icons-react');
var _util_useConfig = require('../_util/useConfig.js');
var common_FakeArrow = require('../common/FakeArrow.js');
var loading_index = require('../loading/index.js');
require('../_chunks/dep-c82d4aac.js');
require('../_chunks/dep-0e3f1753.js');
require('../_chunks/dep-a7666a95.js');
require('../_chunks/dep-72511bfe.js');
require('../_chunks/dep-48870ae5.js');
require('../_chunks/dep-07d4a79b.js');
require('../_chunks/dep-fb89215e.js');
require('../_chunks/dep-69abf228.js');
require('../_chunks/dep-20e76bfc.js');
require('../_chunks/dep-1bafebb1.js');
require('../_chunks/dep-735b841a.js');
require('../_chunks/dep-c5449fbe.js');
require('../_chunks/dep-9125a75e.js');
require('../_chunks/dep-f445e9bb.js');
require('../config-provider/ConfigContext.js');
require('../locale/zh_CN.js');
require('../_chunks/dep-449daca3.js');
require('../loading/loading.js');
require('../_chunks/dep-fa36e79f.js');
require('../_chunks/dep-045b87c1.js');
require('../_util/dom.js');
require('raf');
require('../_chunks/dep-0705da20.js');
require('../_util/easing.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../loading/plugin.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function TreeSelectSuffix(props) {
  var visible = props.visible,
      isHover = props.isHover,
      handleClear = props.handleClear,
      showLoading = props.showLoading,
      clearable = props.clearable,
      multiple = props.multiple,
      value = props.value,
      disabled = props.disabled,
      size = props.size;

  var _useConfig = _util_useConfig["default"](),
      classPrefix = _useConfig.classPrefix;

  var showArrow = React.useMemo(function () {
    return !clearable || !isHover || disabled || !multiple && !value && value !== 0 || multiple && Array.isArray(value) && isEmpty.isEmpty_1(value);
  }, [clearable, isHover, disabled, multiple, value]);
  var showClose = React.useMemo(function () {
    return clearable && isHover && !disabled && (!multiple && (!!value || value === 0) || multiple && !isEmpty.isEmpty_1(value));
  }, [clearable, isHover, disabled, multiple, value]);
  return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, showArrow && !showLoading && /* @__PURE__ */React__default["default"].createElement(common_FakeArrow["default"], {
    overlayClassName: "".concat(classPrefix, "-select__right-icon"),
    isActive: visible,
    disabled: disabled
  }), showClose && !showLoading && /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CloseCircleFilledIcon, {
    className: "".concat(classPrefix, "-select__right-icon ").concat(classPrefix, "-select__right-icon-clear"),
    size: size,
    onClick: handleClear
  }), showLoading && /* @__PURE__ */React__default["default"].createElement(loading_index.Loading, {
    loading: true,
    className: classNames__default["default"]("".concat(classPrefix, "-select__right-icon"), "".concat(classPrefix, "-select__active-icon")),
    size: "small"
  }));
}

exports["default"] = TreeSelectSuffix;
//# sourceMappingURL=TreeSelectSuffix.js.map
