{"version":3,"file":"TreeSelectTags.js","sources":["../../src/tree-select/TreeSelectTags.tsx"],"sourcesContent":["import React from 'react';\nimport { TdTreeSelectProps, TreeSelectValue } from './type';\nimport { TreeOptionData } from '../common';\nimport Tag from '../tag';\n\nexport interface TreeSelectTagsProps extends TdTreeSelectProps {\n  tagList: Array<TreeSelectValue>;\n}\n\nexport default function TreeSelectTags(props: TreeSelectTagsProps) {\n  const { tagList, minCollapsedNum, collapsedItems, disabled, size, value, data, onRemove, onChange } = props;\n\n  if (!tagList.length) return null;\n\n  function removeTag(index: number, data: TreeOptionData, e: React.MouseEvent<SVGElement, MouseEvent>) {\n    e.stopPropagation();\n    if (disabled || !Array.isArray(value)) return;\n\n    onRemove?.({ value: value[index], data, e });\n    onChange?.(value.filter((_, i) => i !== index) as Array<TreeSelectValue>, null);\n  }\n\n  let tags = tagList.map((label, index) => (\n    <Tag\n      key={index}\n      size={size}\n      closable={!disabled}\n      disabled={disabled}\n      onClose={({ e }) => removeTag(index, data, e)}\n    >\n      {label}\n    </Tag>\n  ));\n\n  if (minCollapsedNum) {\n    tags = tags.slice(0, minCollapsedNum);\n\n    const nums = tagList.length - minCollapsedNum;\n    nums &&\n      tags.push(\n        <Tag key={`collapsed-${nums}`} size={size} disabled={disabled}>\n          {collapsedItems || `+${nums}`}\n        </Tag>,\n      );\n  }\n\n  return <>{tags}</>;\n}\n"],"names":["TreeSelectTags","props","tagList","minCollapsedNum","collapsedItems","disabled","size","value","data","onRemove","onChange","length","removeTag","index","data2","e","stopPropagation","Array","isArray","filter","_","i","tags","map","label","React","createElement","Tag","key","closable","onClose","slice","nums","push","Fragment"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,MAAQC,OAAR,GAAsGD,KAAtG,CAAQC,OAAR;AAAA,MAAiBC,eAAjB,GAAsGF,KAAtG,CAAiBE,eAAjB;AAAA,MAAkCC,cAAlC,GAAsGH,KAAtG,CAAkCG,cAAlC;AAAA,MAAkDC,QAAlD,GAAsGJ,KAAtG,CAAkDI,QAAlD;AAAA,MAA4DC,IAA5D,GAAsGL,KAAtG,CAA4DK,IAA5D;AAAA,MAAkEC,KAAlE,GAAsGN,KAAtG,CAAkEM,KAAlE;AAAA,MAAyEC,IAAzE,GAAsGP,KAAtG,CAAyEO,IAAzE;AAAA,MAA+EC,QAA/E,GAAsGR,KAAtG,CAA+EQ,QAA/E;AAAA,MAAyFC,QAAzF,GAAsGT,KAAtG,CAAyFS,QAAzF;AACA,MAAI,CAACR,OAAO,CAACS,MAAb,EACE,OAAO,IAAP;;AACF,WAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,CAAjC,EAAoC;AAClCA,IAAAA,CAAC,CAACC,eAAF;AACA,QAAIX,QAAQ,IAAI,CAACY,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAjB,EACE;AACFE,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAG;AAAEF,MAAAA,KAAK,EAAEA,KAAK,CAACM,KAAD,CAAd;AAAuBL,MAAAA,IAAI,EAAEM,KAA7B;AAAoCC,MAAAA,CAAC,EAADA;AAApC,KAAH,CAAR;AACAL,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGH,KAAK,CAACY,MAAN,CAAa,UAACC,CAAD,EAAIC,CAAJ;AAAA,aAAUA,CAAC,KAAKR,KAAhB;AAAA,KAAb,CAAH,EAAwC,IAAxC,CAAR;AACD;;AACD,MAAIS,IAAI,GAAGpB,OAAO,CAACqB,GAAR,CAAY,UAACC,KAAD,EAAQX,KAAR;AAAA,0BAAkCY,yBAAK,CAACC,aAAN,CAAoBC,aAApB,EAAyB;AAChFC,MAAAA,GAAG,EAAEf,KAD2E;AAEhFP,MAAAA,IAAI,EAAJA,IAFgF;AAGhFuB,MAAAA,QAAQ,EAAE,CAACxB,QAHqE;AAIhFA,MAAAA,QAAQ,EAARA,QAJgF;AAKhFyB,MAAAA,OAAO,EAAE;AAAA,YAAGf,CAAH,QAAGA,CAAH;AAAA,eAAWH,SAAS,CAACC,KAAD,EAAQL,IAAR,EAAcO,CAAd,CAApB;AAAA;AALuE,KAAzB,EAMtDS,KANsD,CAAlC;AAAA,GAAZ,CAAX;;AAOA,MAAIrB,eAAJ,EAAqB;AACnBmB,IAAAA,IAAI,GAAGA,IAAI,CAACS,KAAL,CAAW,CAAX,EAAc5B,eAAd,CAAP;AACA,QAAM6B,IAAI,GAAG9B,OAAO,CAACS,MAAR,GAAiBR,eAA9B;AACA6B,IAAAA,IAAI,IAAIV,IAAI,CAACW,IAAL,iBAA0BR,yBAAK,CAACC,aAAN,CAAoBC,aAApB,EAAyB;AACzDC,MAAAA,GAAG,sBAAeI,IAAf,CADsD;AAEzD1B,MAAAA,IAAI,EAAJA,IAFyD;AAGzDD,MAAAA,QAAQ,EAARA;AAHyD,KAAzB,EAI/BD,cAAc,eAAQ4B,IAAR,CAJiB,CAA1B,CAAR;AAKD;;AACD,wBAAuBP,yBAAK,CAACC,aAAN,CAAoBD,yBAAK,CAACS,QAA1B,EAAoC,IAApC,EAA0CZ,IAA1C,CAAvB;AACD;;;;"}