{"version":3,"file":"useStore.js","sources":["../../node_modules/lodash/cloneDeep.js","../../src/tree/useStore.ts"],"sourcesContent":["var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","import { useRef } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n// import isEqual from 'lodash/isEqual';\nimport useUpdateEffect from '../_util/useUpdateEffect';\n// import { TreeOptionData } from '../common';\nimport TreeStore from '../_common/js/tree/tree-store';\n// import TreeNode from '../_common/js/tree/tree-node';\nimport { usePersistFn } from '../_util/usePersistFn';\nimport { TdTreeProps } from './type';\nimport { TypeEventState } from './interface';\n\nexport function useStore(props: TdTreeProps, refresh: () => void): TreeStore {\n  const storeRef = useRef<TreeStore>();\n\n  const {\n    data,\n    keys,\n    expandAll,\n    expandParent,\n    expanded,\n    expandLevel,\n    expandMutex,\n    activable,\n    activeMultiple,\n    actived,\n    disabled,\n    checkable,\n    value,\n    checkStrictly,\n    load,\n    lazy,\n    valueMode,\n    filter,\n    // onDataChange,\n    onLoad,\n  } = props;\n\n  // 传入 TreeStore 中调用的，但是每次都需要使用最新的值，所以使用 usePersistFn\n  const handleUpdate = usePersistFn(() => {\n    refresh();\n  });\n\n  // const handleReflow = usePersistFn(() => {\n  //   if (!onDataChange) {\n  //     return;\n  //   }\n\n  //   const nodes = storeRef.current.getNodes();\n\n  //   const rootNodes = nodes.filter((v) => !v.parent);\n\n  //   const getChild = (list: TreeNode[] | boolean) => {\n  //     if (Array.isArray(list) && list.length > 0) {\n  //       return list.map((v) => {\n  //         const nodeData: TreeOptionData = v.data;\n  //         if (Array.isArray(v.children) && v.children.length > 0) {\n  //           nodeData.children = getChild(v.children);\n  //         }\n  //         return nodeData;\n  //       });\n  //     }\n  //   };\n\n  //   const newData = getChild(rootNodes);\n\n  //   if (!isEqual(newData, data)) {\n  //     onDataChange?.(newData);\n  //   }\n  // });\n\n  const getExpandedArr = (arr: TdTreeProps['expanded'], store: TreeStore) => {\n    const expandedMap = new Map();\n    arr.forEach((val) => {\n      expandedMap.set(val, true);\n      if (expandParent) {\n        const node = store.getNode(val);\n        node.getParents().forEach((tn) => {\n          expandedMap.set(tn.value, true);\n        });\n      }\n    });\n    return Array.from(expandedMap.keys());\n  };\n\n  const createStore = () => {\n    const store = new TreeStore({\n      keys,\n      activable,\n      activeMultiple,\n      checkable,\n      checkStrictly,\n      expandAll,\n      expandLevel,\n      expandMutex,\n      expandParent,\n      disabled,\n      load,\n      lazy,\n      valueMode,\n      filter,\n      onLoad: (info: TypeEventState) => {\n        const { node } = info;\n        onLoad?.({\n          node: node.getModel(),\n        });\n      },\n      onUpdate: handleUpdate,\n      // onReflow: handleReflow,\n    });\n\n    // 初始化 store 的节点排列 + 状态\n    let list = cloneDeep(data);\n    if (!Array.isArray(list)) {\n      list = [];\n    }\n\n    store.append(list);\n\n    // 刷新节点，必须在配置选中之前执行\n    // 这样选中态联动判断才能找到父节点\n    store.refreshNodes();\n\n    // 初始化选中状态\n    if (Array.isArray(value)) {\n      store.setChecked(value);\n    }\n\n    // 初始化展开状态\n    if (Array.isArray(expanded)) {\n      const expandedArr = getExpandedArr(expanded, store);\n      store.setExpanded(expandedArr);\n    }\n\n    // 初始化激活状态\n    if (Array.isArray(actived)) {\n      store.setActived(actived);\n    }\n\n    // refresh();\n\n    store.refreshNodes();\n    return store;\n  };\n\n  if (!storeRef.current) {\n    storeRef.current = createStore();\n  }\n\n  /* ======== 由 props 引发的 store 更新 ======= */\n  const store = storeRef.current;\n\n  useUpdateEffect(() => {\n    if (data && Array.isArray(data)) {\n      store.removeAll();\n      store.append(data);\n    }\n  }, [data, store]);\n\n  useUpdateEffect(() => {\n    store.setConfig({\n      keys,\n      expandAll,\n      expandLevel,\n      expandMutex,\n      expandParent,\n      activable,\n      activeMultiple,\n      disabled,\n      checkable,\n      checkStrictly,\n      load,\n      lazy,\n      valueMode,\n    });\n\n    store.refreshState();\n  }, [\n    activable,\n    activeMultiple,\n    checkStrictly,\n    checkable,\n    disabled,\n    expandAll,\n    expandLevel,\n    expandMutex,\n    expandParent,\n    keys,\n    lazy,\n    load,\n    store,\n    valueMode,\n  ]);\n\n  useUpdateEffect(() => {\n    if (Array.isArray(value)) {\n      store.replaceChecked(value);\n    }\n  }, [store, value]);\n\n  useUpdateEffect(() => {\n    if (Array.isArray(expanded)) {\n      const expandedArr = getExpandedArr(expanded, store);\n      store.replaceExpanded(expandedArr);\n    }\n  }, [expanded, store]);\n\n  useUpdateEffect(() => {\n    if (Array.isArray(actived)) {\n      store.replaceActived(actived);\n    }\n  }, [actived, store]);\n\n  useUpdateEffect(() => {\n    store.setConfig({\n      filter,\n    });\n    store.updateAll();\n  }, [filter, store]);\n\n  return storeRef.current;\n}\n"],"names":["baseClone","require$$0","CLONE_DEEP_FLAG","CLONE_SYMBOLS_FLAG","cloneDeep","value","cloneDeep_1","useStore","props","refresh","storeRef","useRef","data","keys","expandAll","expandParent","expanded","expandLevel","expandMutex","activable","activeMultiple","actived","disabled","checkable","checkStrictly","load","lazy","valueMode","filter","onLoad","handleUpdate","usePersistFn","getExpandedArr","arr","store2","expandedMap","Map","forEach","val","set","node","getNode","getParents","tn","Array","from","createStore","TreeStore","info","getModel","onUpdate","list","isArray","append","refreshNodes","setChecked","expandedArr","setExpanded","setActived","current","store","useUpdateEffect","removeAll","setConfig","refreshState","replaceChecked","replaceExpanded","replaceActived","updateAll"],"mappings":"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"}