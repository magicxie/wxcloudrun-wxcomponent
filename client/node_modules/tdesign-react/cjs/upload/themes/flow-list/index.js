/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../../_chunks/dep-449daca3.js');
var slicedToArray = require('../../../_chunks/dep-fa36e79f.js');
var React = require('react');
var classNames = require('classnames');
var _util_useConfig = require('../../../_util/useConfig.js');
var button_index = require('../../../button/index.js');
var upload_themes_flowList_imgList = require('./img-list.js');
var upload_themes_flowList_fileList = require('./file-list.js');
var upload_booleanRender = require('../../boolean-render.js');
require('../../../_chunks/dep-045b87c1.js');
require('../../../config-provider/ConfigContext.js');
require('../../../locale/zh_CN.js');
require('../../../button/Button.js');
require('../../../_chunks/dep-e03ca79d.js');
require('../../../_util/noop.js');
require('../../../_util/useRipple.js');
require('../../../_util/setStyle.js');
require('../../../loading/index.js');
require('../../../loading/loading.js');
require('../../../_util/dom.js');
require('raf');
require('../../../_chunks/dep-0705da20.js');
require('../../../_chunks/dep-0e3f1753.js');
require('../../../_chunks/dep-a7666a95.js');
require('../../../_chunks/dep-9125a75e.js');
require('../../../_chunks/dep-48870ae5.js');
require('../../../_util/easing.js');
require('../../../common/Portal.js');
require('react-dom');
require('../../../loading/gradient.js');
require('../../../loading/plugin.js');
require('tdesign-icons-react');
require('../../util.js');
require('../../../_chunks/dep-8f3deb2a.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var Index = function Index(props) {
  var _classNames;

  var listFiles = props.files,
      _props$toUploadFiles = props.toUploadFiles,
      toUploadFiles = _props$toUploadFiles === void 0 ? [] : _props$toUploadFiles,
      _props$showUploadProg = props.showUploadProgress,
      showUploadProgress = _props$showUploadProg === void 0 ? false : _props$showUploadProg,
      placeholder = props.placeholder,
      display = props.display,
      onImgPreview = props.onImgPreview,
      remove = props.remove,
      upload = props.upload,
      cancel = props.cancel,
      onChange = props.onChange,
      onDragenter = props.onDragenter,
      onDragleave = props.onDragleave,
      _props$children = props.children,
      children = _props$children === void 0 ? null : _props$children;
  var target = React__default["default"].useRef();

  var _useConfig = _util_useConfig["default"](),
      prefix = _useConfig.classPrefix;

  var UPLOAD_NAME = "".concat(prefix, "-upload");

  var _useState = React.useState(false),
      _useState2 = slicedToArray._slicedToArray(_useState, 2),
      dragActive = _useState2[0],
      setDragActive = _useState2[1];

  var showInitial = !listFiles.length;
  var failedList = toUploadFiles.filter(function (file) {
    return file.status === "fail";
  });
  var isUploading = toUploadFiles.filter(function (file) {
    return file.status === "progress";
  }).length > 0;
  var allowUpload = toUploadFiles.length > 0 && !isUploading;
  var uploadText = failedList.length ? "\u91CD\u65B0\u4E0A\u4F20" : "\u5F00\u59CB\u4E0A\u4F20";
  if (isUploading) uploadText = "\u4E0A\u4F20\u4E2D...";

  var handleDrop = function handleDrop(event) {
    event.preventDefault();
    onChange === null || onChange === void 0 ? void 0 : onChange(event.dataTransfer.files);
    onDragleave === null || onDragleave === void 0 ? void 0 : onDragleave(event);
    setDragActive(false);
  };

  var handleDragenter = function handleDragenter(event) {
    event.preventDefault();
    onDragenter === null || onDragenter === void 0 ? void 0 : onDragenter(event);
    setDragActive(true);
  };

  var handleDragleave = function handleDragleave(event) {
    if (event.target !== target.current) return;
    event.preventDefault();
    onDragleave === null || onDragleave === void 0 ? void 0 : onDragleave(event);
    setDragActive(false);
  };

  var handleDragover = function handleDragover(event) {
    event.preventDefault();
  };

  var renderDragger = function renderDragger() {
    return /* @__PURE__ */React__default["default"].createElement("div", {
      ref: target,
      className: "".concat(UPLOAD_NAME, "__flow-empty"),
      onDrop: handleDrop,
      onDragEnter: handleDragenter,
      onDragOver: handleDragover,
      onDragLeave: handleDragleave
    }, dragActive ? "\u91CA\u653E\u9F20\u6807" : "\u70B9\u51FB\u4E0A\u65B9\u201C\u9009\u62E9\u6587\u4EF6\u201D\u6216\u5C06\u6587\u4EF6\u62D6\u62FD\u5230\u6B64\u533A\u57DF");
  };

  var wrapperClassNames = classNames__default["default"]((_classNames = {}, defineProperty._defineProperty(_classNames, "".concat(UPLOAD_NAME, "__flow"), true), defineProperty._defineProperty(_classNames, "".concat(UPLOAD_NAME, "__flow-").concat(display), true), _classNames));
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: wrapperClassNames
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(UPLOAD_NAME, "__flow-op")
  }, children, /* @__PURE__ */React__default["default"].createElement("small", {
    className: "".concat(UPLOAD_NAME, "__small ").concat(UPLOAD_NAME, "__flow-placeholder")
  }, placeholder)), /* @__PURE__ */React__default["default"].createElement(upload_booleanRender["default"], {
    boolExpression: display === "file-flow"
  }, /* @__PURE__ */React__default["default"].createElement(upload_themes_flowList_fileList["default"], {
    listFiles: listFiles,
    showInitial: showInitial,
    renderDragger: renderDragger,
    showUploadProgress: showUploadProgress,
    remove: remove
  })), /* @__PURE__ */React__default["default"].createElement(upload_booleanRender["default"], {
    boolExpression: display === "image-flow"
  }, /* @__PURE__ */React__default["default"].createElement(upload_themes_flowList_imgList["default"], {
    listFiles: listFiles,
    showInitial: showInitial,
    renderDragger: renderDragger,
    onImgPreview: onImgPreview,
    remove: remove
  })), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(UPLOAD_NAME, "__flow-bottom")
  }, /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    theme: "default",
    onClick: cancel
  }, "\u53D6\u6D88"), /* @__PURE__ */React__default["default"].createElement(button_index.Button, {
    disabled: !allowUpload,
    theme: "primary",
    onClick: function onClick(e) {
      return upload(toUploadFiles, e);
    }
  }, uploadText)));
};

exports["default"] = Index;
//# sourceMappingURL=index.js.map
