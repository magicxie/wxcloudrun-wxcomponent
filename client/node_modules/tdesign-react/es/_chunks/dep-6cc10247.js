/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from './dep-9332bbea.js';
import React, { useState, useRef, useEffect, forwardRef } from 'react';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import Check, { CheckContext } from '../common/Check.js';
import { _ as _slicedToArray } from './dep-93971e86.js';
import classNames from 'classnames';
import useConfig from '../_util/useConfig.js';
import useDefault from '../_util/useDefault.js';
import useCommonClassName from '../_util/useCommonClassName.js';

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var RadioGroup = function RadioGroup(props) {
  var _classNames;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var disabled = props.disabled,
      children = props.children,
      value = props.value,
      defaultValue = props.defaultValue,
      onChange = props.onChange,
      _props$size = props.size,
      size = _props$size === void 0 ? "medium" : _props$size,
      _props$variant = props.variant,
      variant = _props$variant === void 0 ? "outline" : _props$variant,
      _props$options = props.options,
      options = _props$options === void 0 ? [] : _props$options;

  var _useDefault = useDefault(value, defaultValue, onChange),
      _useDefault2 = _slicedToArray(_useDefault, 2),
      internalValue = _useDefault2[0],
      setInternalValue = _useDefault2[1];

  var _useState = useState({}),
      _useState2 = _slicedToArray(_useState, 2),
      barStyle = _useState2[0],
      setBarStyle = _useState2[1];

  var groupRef = useRef(null);

  var _useCommonClassName = useCommonClassName(),
      sizeMap = _useCommonClassName.SIZE;

  var context = {
    inject: function inject(checkProps) {
      if (typeof checkProps.checked !== "undefined") {
        return checkProps;
      }

      var checkValue = checkProps.value;
      return _objectSpread$1(_objectSpread$1({}, checkProps), {}, {
        checked: internalValue === checkProps.value,
        disabled: checkProps.disabled || disabled,
        onChange: function onChange(checked, _ref) {
          var e = _ref.e;

          if (typeof checkProps.onChange === "function") {
            checkProps.onChange(checked, {
              e: e
            });
          }

          setInternalValue(checkValue, {
            e: e
          });
        }
      });
    }
  };

  function calcBarStyle() {
    if (!variant.includes("filled")) return;
    var checkedRadioCls = ".".concat(classPrefix, "-radio-button.").concat(classPrefix, "-is-checked");
    var checkedRadio = groupRef.current.querySelector(checkedRadioCls);
    if (!checkedRadio) return;
    var offsetWidth = checkedRadio.offsetWidth,
        offsetLeft = checkedRadio.offsetLeft;
    setBarStyle({
      width: "".concat(offsetWidth, "px"),
      left: "".concat(offsetLeft, "px")
    });
  }

  useEffect(function () {
    calcBarStyle();
  }, [internalValue]);

  var renderBlock = function renderBlock() {
    if (!variant.includes("filled")) return null;
    return /* @__PURE__ */React.createElement("div", {
      style: barStyle,
      className: "".concat(classPrefix, "-radio-group__bg-block")
    });
  };

  var renderOptions = function renderOptions() {
    return options.map(function (item) {
      if (typeof item === "string" || typeof item === "number") {
        return /* @__PURE__ */React.createElement(_Radio, {
          value: item,
          key: item
        }, item);
      }

      return /* @__PURE__ */React.createElement(_Radio, {
        value: item.value,
        key: item.value,
        disabled: item.disabled
      }, item.label);
    });
  };

  return /* @__PURE__ */React.createElement(CheckContext.Provider, {
    value: context
  }, /* @__PURE__ */React.createElement("div", {
    ref: groupRef,
    className: classNames("".concat(classPrefix, "-radio-group"), sizeMap[size], (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-radio-group__outline"), variant === "outline"), _defineProperty(_classNames, "".concat(classPrefix, "-radio-group--filled"), variant.includes("filled")), _defineProperty(_classNames, "".concat(classPrefix, "-radio-group--primary-filled"), variant === "primary-filled"), _classNames))
  }, children || renderOptions(), renderBlock()));
};

RadioGroup.displayName = "RadioGroup";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Radio = forwardRefWithStatics(function (props, ref) {
  return /* @__PURE__ */React.createElement(Check, _objectSpread({
    ref: ref,
    type: "radio"
  }, props));
}, {
  Group: RadioGroup,
  Button: /*#__PURE__*/forwardRef(function (props, ref) {
    return /* @__PURE__ */React.createElement(Check, _objectSpread({
      ref: ref,
      type: "radio-button"
    }, props));
  })
});
Radio.displayName = "Radio";
var _Radio = Radio;

export { RadioGroup as R, _Radio as _ };
//# sourceMappingURL=dep-6cc10247.js.map
