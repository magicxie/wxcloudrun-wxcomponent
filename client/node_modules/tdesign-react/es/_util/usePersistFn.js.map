{"version":3,"file":"usePersistFn.js","sources":["../../src/_util/usePersistFn.ts"],"sourcesContent":["import { useRef } from 'react';\n\nexport type Noop = (...args: any[]) => any;\n\n/**\n *  在某些场景中，你可能会需要用 useCallback 记住一个回调，\n *  但由于内部函数必须经常重新创建，记忆效果不是很好，导致子组件重复 render。\n *  对于超级复杂的子组件，重新渲染会对性能造成影响。\n *  通过 usePersistFn，可以保证函数地址永远不会变化。\n * @param fn\n */\nexport function usePersistFn<T extends Noop>(fn: T) {\n  const fnRef = useRef<T>(fn);\n  fnRef.current = fn;\n\n  const persistFn = useRef<T>();\n  if (!persistFn.current) {\n    persistFn.current = function (...args) {\n      return fnRef.current.apply(this, args);\n    } as T;\n  }\n\n  return persistFn.current;\n}\n"],"names":["usePersistFn","fn","fnRef","useRef","current","persistFn","args","apply"],"mappings":";;;;;;;;AACO,SAASA,YAAT,CAAsBC,EAAtB,EAA0B;AAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACF,EAAD,CAApB;AACAC,EAAAA,KAAK,CAACE,OAAN,GAAgBH,EAAhB;AACA,MAAMI,SAAS,GAAGF,MAAM,EAAxB;;AACA,MAAI,CAACE,SAAS,CAACD,OAAf,EAAwB;AACtBC,IAAAA,SAAS,CAACD,OAAV,GAAoB,YAAkB;AAAA,wCAANE,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACpC,aAAOJ,KAAK,CAACE,OAAN,CAAcG,KAAd,CAAoB,IAApB,EAA0BD,IAA1B,CAAP;AACD,KAFD;AAGD;;AACD,SAAOD,SAAS,CAACD,OAAjB;AACD;;;;"}