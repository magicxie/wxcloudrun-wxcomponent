/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9332bbea.js';
import { _ as _slicedToArray } from '../_chunks/dep-93971e86.js';
import React, { useState, useRef, useEffect, useCallback } from 'react';
import classNames from 'classnames';
import { i as isEmpty_1 } from '../_chunks/dep-a8d92bd9.js';
import { i as isFunction_1 } from '../_chunks/dep-25536592.js';
import useConfig from '../_util/useConfig.js';
import noop from '../_util/noop.js';
import { getScrollContainer } from '../_util/dom.js';
import '../affix/index.js';
import { AnchorContext } from './AnchorContext.js';
import { getScroll, getOffsetTop, scrollTo } from './_util/dom.js';
import AnchorItem from './AnchorItem.js';
import AnchorTarget from './AnchorTarget.js';
import Affix from '../affix/Affix.js';
import '../_chunks/dep-beac373a.js';
import '../_chunks/dep-ab1e2688.js';
import '../_chunks/dep-39f90ded.js';
import '../_chunks/dep-aa2bff1b.js';
import '../_chunks/dep-156c830d.js';
import '../_chunks/dep-14692160.js';
import '../_chunks/dep-312619d6.js';
import '../_chunks/dep-55e3e3e3.js';
import '../_chunks/dep-7daf07a9.js';
import '../_chunks/dep-e2a0e7b2.js';
import '../_chunks/dep-5ace74d6.js';
import '../_chunks/dep-8309e373.js';
import '../_chunks/dep-a764e3bd.js';
import '../_chunks/dep-d098d908.js';
import '../_chunks/dep-f5f7d3f4.js';
import '../_chunks/dep-897ce04d.js';
import '../_chunks/dep-2eff142e.js';
import '../_chunks/dep-b8263a1c.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import 'raf';
import '../_chunks/dep-3853103d.js';
import '../_util/easing.js';
import './style/css.js';
import '../affix/type.js';
import 'tdesign-icons-react';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../_util/useDefault.js';
import '../_util/composeRefs.js';
import '../_util/usePrevious.js';
import '../popup/Portal.js';
import 'react-dom';
import '../popup/hooks/useTriggerProps.js';
import '../_util/useClickOutside.js';
import '../popup/hooks/usePopupCssTransition.js';
import '../popup/type.js';
import '../message/index.js';
import '../message/Message.js';
import '../message/const.js';
import '../message/MessageComponent.js';
import '../message/MessageClose.js';
import '../message/useMessageClass.js';
import '../message/MessageIcon.js';
import '../loading/index.js';
import '../loading/loading.js';
import '../common/Portal.js';
import '../loading/gradient.js';
import '../loading/type.js';
import '../loading/plugin.js';
import '../message/type.js';
import './_util/clipboard.js';
import 'clipboard';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ANCHOR_SHARP_REGEXP = /#(\S+)$/;

var Anchor = function Anchor(props) {
  var _classNames;

  var affixProps = props.affixProps,
      _props$bounds = props.bounds,
      bounds = _props$bounds === void 0 ? 5 : _props$bounds,
      _props$targetOffset = props.targetOffset,
      targetOffset = _props$targetOffset === void 0 ? 0 : _props$targetOffset,
      _props$container = props.container,
      container = _props$container === void 0 ? "" : _props$container,
      _props$size = props.size,
      size = _props$size === void 0 ? "medium" : _props$size,
      children = props.children,
      cursor = props.cursor,
      _props$onClick = props.onClick,
      onClick = _props$onClick === void 0 ? noop : _props$onClick,
      _props$onChange = props.onChange,
      onChange = _props$onChange === void 0 ? noop : _props$onChange;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState(""),
      _useState2 = _slicedToArray(_useState, 2),
      activeItem = _useState2[0],
      setActiveItem = _useState2[1];

  var _useState3 = useState({
    top: "0px",
    height: "0px",
    opacity: 0
  }),
      _useState4 = _slicedToArray(_useState3, 2),
      cursorStyle = _useState4[0],
      setCursorStyle = _useState4[1];

  var anchorEl = useRef(null);
  var intervalRef = useRef({
    items: [],
    scrollContainer: window,
    handleScrollLock: false
  });

  var registerItem = function registerItem(href) {
    var items = intervalRef.current.items;
    if (ANCHOR_SHARP_REGEXP.test(href) && items.indexOf(href) < 0) items.push(href);
  };

  var unregisterItem = function unregisterItem(href) {
    var items = intervalRef.current.items;
    intervalRef.current.items = items.filter(function (item) {
      return href !== item;
    });
  };

  var getAnchorTarget = function getAnchorTarget(href) {
    return document.querySelector(href);
  };

  var handleScrollTo = function handleScrollTo(link) {
    var anchor = getAnchorTarget(link);
    if (!anchor) return;
    if (isFunction_1(onChange)) onChange(link, activeItem);
    setActiveItem(link);
    intervalRef.current.handleScrollLock = true;
    var scrollContainer = intervalRef.current.scrollContainer;
    var scrollTop = getScroll(scrollContainer);
    var offsetTop = getOffsetTop(anchor, scrollContainer);
    var top = scrollTop + offsetTop - targetOffset;
    scrollTo(top, {
      container: scrollContainer
    }).then(function () {
      intervalRef.current.handleScrollLock = false;
    });
  };

  var handleClick = function handleClick(item, e) {
    onClick(_objectSpread({
      e: e
    }, item));
    handleScrollTo(item.href);
  };

  useEffect(function () {
    var pointEl = anchorEl.current.querySelector(".".concat(classPrefix, "-is-active>a"));

    if (!pointEl) {
      setCursorStyle(null);
    } else {
      var top = pointEl.offsetTop,
          height = pointEl.offsetHeight;
      setCursorStyle({
        top: "".concat(top, "px"),
        height: "".concat(height, "px"),
        opacity: 1
      });
    }
  }, [activeItem, classPrefix]);
  var handleScroll = useCallback(function () {
    var _intervalRef$current = intervalRef.current,
        scrollContainer = _intervalRef$current.scrollContainer,
        handleScrollLock = _intervalRef$current.handleScrollLock;
    if (handleScrollLock) return;
    var items = intervalRef.current.items;
    var filters = [];
    var active = "";
    items.forEach(function (href) {
      var anchor = getAnchorTarget(href);
      if (!anchor) return;
      var top = getOffsetTop(anchor, scrollContainer);

      if (top <= bounds + targetOffset) {
        filters.push({
          href: href,
          top: top
        });
      }
    });

    if (filters.length) {
      var latest = filters.reduce(function (prev, cur) {
        return prev.top > cur.top ? prev : cur;
      });
      active = latest.href;
    }

    if (active !== activeItem) {
      if (isFunction_1(onChange)) onChange(active, activeItem);
      setActiveItem(active);
    }
  }, [activeItem, bounds, onChange, targetOffset]);
  useEffect(function () {
    intervalRef.current.scrollContainer = getScrollContainer(container);
    var scrollContainer = intervalRef.current.scrollContainer;
    handleScroll();
    scrollContainer.addEventListener("scroll", handleScroll);
    return function () {
      scrollContainer.removeEventListener("scroll", handleScroll);
    };
  }, [container, handleScroll]);
  var anchorClass = classNames("".concat(classPrefix, "-anchor"), (_classNames = {}, _defineProperty(_classNames, "".concat(classPrefix, "-size-s"), size === "small"), _defineProperty(_classNames, "".concat(classPrefix, "-size-m"), size === "medium"), _defineProperty(_classNames, "".concat(classPrefix, "-size-l"), size === "large"), _classNames));

  var CursorCmp = function CursorCmp() {
    if (isFunction_1(cursor)) return cursor();
    if (isEmpty_1(cursor)) return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-anchor__line-cursor")
    });
    return cursor;
  };

  var Cmp = /* @__PURE__ */React.createElement(AnchorContext.Provider, {
    value: {
      onClick: handleClick,
      activeItem: activeItem,
      registerItem: registerItem,
      unregisterItem: unregisterItem
    }
  }, /* @__PURE__ */React.createElement("div", {
    className: anchorClass,
    ref: anchorEl
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-anchor__line")
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-anchor__line-cursor-wrapper"),
    style: cursorStyle
  }, CursorCmp())), children));
  return isEmpty_1(affixProps) ? Cmp : /* @__PURE__ */React.createElement(Affix, _objectSpread({}, affixProps), Cmp);
};

Anchor.AnchorItem = AnchorItem;
Anchor.AnchorTarget = AnchorTarget;
Anchor.displayName = "Anchor";

export { Anchor as default };
//# sourceMappingURL=Anchor.js.map
