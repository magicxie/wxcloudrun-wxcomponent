/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import React, { forwardRef, useRef, useMemo } from 'react';
import classNames from 'classnames';
import { ChevronRightIcon } from 'tdesign-icons-react';
import useConfig from '../../_util/useConfig.js';
import useCommonClassName from '../../_util/useCommonClassName.js';
import useRipple from '../../_util/useRipple.js';
import { getLabelIsEllipsis, getCascaderItemClass, getCascaderItemIconClass } from '../utils/item.js';
import { getFullPathLabel } from '../utils/helper.js';
import { Loading } from '../../loading/index.js';
import Tooltip from '../../tooltip/Tooltip.js';
import { C as Checkbox } from '../../_chunks/dep-d44ac8a4.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_util/setStyle.js';
import '../../_chunks/dep-124f91c5.js';
import '../../_chunks/dep-beac373a.js';
import '../../_chunks/dep-156c830d.js';
import '../../loading/loading.js';
import '../../_chunks/dep-93971e86.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-3853103d.js';
import '../../_chunks/dep-ab1e2688.js';
import '../../_chunks/dep-aa2bff1b.js';
import '../../_chunks/dep-897ce04d.js';
import '../../_chunks/dep-2eff142e.js';
import '../../_chunks/dep-312619d6.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import './style/css.js';
import '../../loading/type.js';
import '../../loading/plugin.js';
import '../../_chunks/dep-27d690ce.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../_util/useDefault.js';
import '../../_util/noop.js';
import '../../_util/composeRefs.js';
import '../../_util/usePrevious.js';
import '../../popup/Portal.js';
import '../../popup/hooks/useTriggerProps.js';
import '../../_util/useClickOutside.js';
import '../../popup/hooks/usePopupCssTransition.js';
import '../../popup/type.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-93bd2d05.js';
import '../../_chunks/dep-44c00646.js';
import '../../_chunks/dep-95c9ff5b.js';
import '../../_chunks/dep-304ab091.js';
import '../../_chunks/dep-ea69dcf8.js';
import '../../_chunks/dep-d2535fd6.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var RenderLabelInner = function RenderLabelInner(name, node, cascaderContext) {
  var filterActive = cascaderContext.filterActive,
      inputVal = cascaderContext.inputVal;
  var labelText = filterActive ? getFullPathLabel(node) : node.label;

  if (filterActive) {
    var texts = labelText.split(inputVal);
    var doms = [];

    for (var index = 0; index < texts.length; index++) {
      doms.push( /* @__PURE__ */React.createElement("span", {
        key: index
      }, texts[index]));
      if (index === texts.length - 1) break;
      doms.push( /* @__PURE__ */React.createElement("span", {
        key: "".concat(index, "filter"),
        className: "".concat(name, "-label--filter")
      }, inputVal));
    }

    return doms;
  }

  return labelText;
};

var RenderLabelContent = function RenderLabelContent(node, cascaderContext) {
  var _useConfig = useConfig(),
      prefix = _useConfig.classPrefix;

  var name = "".concat(prefix, "-cascader__item");
  var label = RenderLabelInner(name, node, cascaderContext);
  var isEllipsis = getLabelIsEllipsis(node, cascaderContext.size);

  if (isEllipsis) {
    return /* @__PURE__ */React.createElement("span", {
      className: "".concat(name, "-label"),
      role: "label"
    }, label, /* @__PURE__ */React.createElement("div", {
      className: "".concat(name, "-label--ellipsis")
    }, /* @__PURE__ */React.createElement(Tooltip, {
      content: node.label,
      placement: "top-left"
    })));
  }

  return /* @__PURE__ */React.createElement("span", {
    className: "".concat(name, "__label")
  }, label);
};

var RenderCheckBox = function RenderCheckBox(node, cascaderContext, handleChange) {
  var _useConfig2 = useConfig(),
      prefix = _useConfig2.classPrefix;

  var name = "".concat(prefix, "-cascader__item");
  var checkProps = cascaderContext.checkProps,
      value = cascaderContext.value,
      max = cascaderContext.max;
  var label = RenderLabelInner(name, node, cascaderContext);
  return /* @__PURE__ */React.createElement(Checkbox, _objectSpread(_objectSpread({}, checkProps), {}, {
    checked: node.checked,
    indeterminate: node.indeterminate,
    disabled: node.isDisabled() || value.length >= max && max !== 0,
    name: node.value,
    onChange: handleChange
  }), label);
};

var Item = /*#__PURE__*/forwardRef(function (props, ref) {
  var node = props.node,
      multiple = props.cascaderContext.multiple,
      onClick = props.onClick,
      onChange = props.onChange,
      onMouseEnter = props.onMouseEnter,
      cascaderContext = props.cascaderContext;

  var _useConfig3 = useConfig(),
      prefix = _useConfig3.classPrefix;

  var itemRef = useRef();
  useRipple(ref || itemRef);
  var CLASSNAMES = useCommonClassName();
  var itemClass = useMemo(function () {
    return classNames(getCascaderItemClass(prefix, node, CLASSNAMES, cascaderContext));
  }, [prefix, node, CLASSNAMES, cascaderContext]);
  var iconClass = useMemo(function () {
    return classNames(getCascaderItemIconClass(prefix, node, CLASSNAMES, cascaderContext));
  }, [prefix, node, CLASSNAMES, cascaderContext]);

  var handleClick = function handleClick(e) {
    e.stopPropagation();
    var ctx = {
      e: e,
      node: node
    };
    onClick(ctx);
  };

  var handleChange = function handleChange(e) {
    var ctx = {
      e: e,
      node: node
    };
    onChange(ctx);
  };

  var handleMouseenter = function handleMouseenter(e) {
    e.stopPropagation();
    var ctx = {
      e: e,
      node: node
    };
    onMouseEnter(ctx);
  };

  return /* @__PURE__ */React.createElement("li", {
    ref: ref || itemRef,
    className: itemClass,
    onClick: handleClick,
    onMouseEnter: handleMouseenter
  }, multiple ? RenderCheckBox(node, cascaderContext, handleChange) : RenderLabelContent(node, cascaderContext), node.children && (node.loading ? /* @__PURE__ */React.createElement(Loading, {
    className: iconClass,
    loading: true,
    size: "small"
  }) : /* @__PURE__ */React.createElement(ChevronRightIcon, {
    className: iconClass
  })));
});

export { Item as default };
//# sourceMappingURL=Item.js.map
