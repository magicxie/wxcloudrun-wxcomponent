{"version":3,"file":"Item.js","sources":["../../../src/cascader/components/Item.tsx"],"sourcesContent":["import React, { useRef, forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { ChevronRightIcon } from 'tdesign-icons-react';\n\n// hook\nimport useConfig from '../../_util/useConfig';\nimport useCommonClassName from '../../_util/useCommonClassName';\nimport useRipple from '../../_util/useRipple';\n\n// common logic\nimport { getCascaderItemClass, getCascaderItemIconClass, getLabelIsEllipsis } from '../utils/item';\nimport { getFullPathLabel } from '../utils/helper';\n\n// component\nimport TLoading from '../../loading';\nimport Tooltip from '../../tooltip/Tooltip';\nimport Checkbox from '../../checkbox/Checkbox';\n\n// type\nimport { ContextType, CascaderItemProps, CascaderContextType } from '../interface';\nimport TreeNode from '../../_common/js/tree/tree-node';\nimport { TreeNodeValue } from '../../_common/js/tree/types';\nimport { CheckboxProps } from '../../checkbox';\n\nconst RenderLabelInner = (name: string, node: TreeNode, cascaderContext: CascaderContextType) => {\n  const { filterActive, inputVal } = cascaderContext;\n  const labelText = filterActive ? getFullPathLabel(node) : node.label;\n  if (filterActive) {\n    const texts = labelText.split(inputVal);\n    const doms = [];\n    for (let index = 0; index < texts.length; index++) {\n      doms.push(<span key={index}>{texts[index]}</span>);\n      if (index === texts.length - 1) break;\n      doms.push(\n        <span key={`${index}filter`} className={`${name}-label--filter`}>\n          {inputVal}\n        </span>,\n      );\n    }\n    return doms;\n  }\n  return labelText;\n};\n\nconst RenderLabelContent = (node: TreeNode, cascaderContext: CascaderContextType) => {\n  const { classPrefix: prefix } = useConfig();\n  const name = `${prefix}-cascader__item`;\n\n  const label = RenderLabelInner(name, node, cascaderContext);\n  const isEllipsis = getLabelIsEllipsis(node, cascaderContext.size);\n\n  if (isEllipsis) {\n    return (\n      <span className={`${name}-label`} role=\"label\">\n        {label}\n        <div className={`${name}-label--ellipsis`}>\n          <Tooltip content={node.label} placement=\"top-left\" />\n        </div>\n      </span>\n    );\n  }\n  return <span className={`${name}__label`}>{label}</span>;\n};\n\nconst RenderCheckBox = (node: TreeNode, cascaderContext: CascaderContextType, handleChange) => {\n  const { classPrefix: prefix } = useConfig();\n  const name = `${prefix}-cascader__item`;\n\n  const { checkProps, value, max } = cascaderContext;\n  const label = RenderLabelInner(name, node, cascaderContext);\n  return (\n    <Checkbox\n      {...checkProps}\n      checked={node.checked}\n      indeterminate={node.indeterminate}\n      disabled={node.isDisabled() || ((value as TreeNodeValue[]).length >= max && max !== 0)}\n      name={node.value}\n      onChange={handleChange}\n    >\n      {label}\n    </Checkbox>\n  );\n};\n\nconst Item = forwardRef((props: CascaderItemProps, ref: React.RefObject<HTMLLIElement>) => {\n  const {\n    node,\n    cascaderContext: { multiple },\n    onClick,\n    onChange,\n    onMouseEnter,\n    cascaderContext,\n  } = props;\n  const { classPrefix: prefix } = useConfig();\n\n  const itemRef = useRef();\n  useRipple(ref || itemRef);\n\n  /**\n   * class\n   */\n  const CLASSNAMES = useCommonClassName();\n\n  const itemClass = useMemo(\n    () => classNames(getCascaderItemClass(prefix, node, CLASSNAMES, cascaderContext)),\n    [prefix, node, CLASSNAMES, cascaderContext],\n  );\n\n  const iconClass = useMemo(\n    () => classNames(getCascaderItemIconClass(prefix, node, CLASSNAMES, cascaderContext)),\n    [prefix, node, CLASSNAMES, cascaderContext],\n  );\n\n  const handleClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    const ctx: ContextType = {\n      e,\n      node,\n    };\n    onClick(ctx);\n  };\n\n  const handleChange: CheckboxProps['onChange'] = (e) => {\n    const ctx = {\n      e,\n      node,\n    };\n    onChange(ctx);\n  };\n\n  const handleMouseenter = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    const ctx: ContextType = {\n      e,\n      node,\n    };\n    onMouseEnter(ctx);\n  };\n\n  return (\n    <li ref={ref || itemRef} className={itemClass} onClick={handleClick} onMouseEnter={handleMouseenter}>\n      {multiple ? RenderCheckBox(node, cascaderContext, handleChange) : RenderLabelContent(node, cascaderContext)}\n      {node.children &&\n        (node.loading ? (\n          <TLoading className={iconClass} loading={true} size=\"small\" />\n        ) : (\n          <ChevronRightIcon className={iconClass} />\n        ))}\n    </li>\n  );\n});\n\nexport default Item;\n"],"names":["RenderLabelInner","name","node","cascaderContext","filterActive","inputVal","labelText","getFullPathLabel","label","texts","split","doms","index","length","push","React","createElement","key","className","RenderLabelContent","useConfig","prefix","classPrefix","isEllipsis","getLabelIsEllipsis","size","role","Tooltip","content","placement","RenderCheckBox","handleChange","checkProps","value","max","Checkbox","checked","indeterminate","disabled","isDisabled","onChange","Item","forwardRef","props","ref","multiple","onClick","onMouseEnter","itemRef","useRef","useRipple","CLASSNAMES","useCommonClassName","itemClass","useMemo","classNames","getCascaderItemClass","iconClass","getCascaderItemIconClass","handleClick","e","stopPropagation","ctx","handleMouseenter","children","loading","TLoading","ChevronRightIcon"],"mappings":"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"}