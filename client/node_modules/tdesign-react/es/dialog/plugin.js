/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9332bbea.js';
import React from 'react';
import ReactDOM from 'react-dom';
import _Dialog from './Dialog.js';
import { getAttach } from '../_util/dom.js';
import '../_chunks/dep-27d690ce.js';
import '../_chunks/dep-93971e86.js';
import '../_chunks/dep-beac373a.js';
import '../_chunks/dep-3853103d.js';
import '../_chunks/dep-ab1e2688.js';
import '../_chunks/dep-aa2bff1b.js';
import '../_chunks/dep-156c830d.js';
import '../_chunks/dep-897ce04d.js';
import '../_chunks/dep-2eff142e.js';
import '../_chunks/dep-312619d6.js';
import 'tdesign-icons-react';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../button/index.js';
import '../button/Button.js';
import 'classnames';
import '../_util/noop.js';
import '../_util/useConfig.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../loading/index.js';
import '../loading/loading.js';
import '../common/Portal.js';
import '../loading/gradient.js';
import './style/css.js';
import '../loading/type.js';
import '../loading/plugin.js';
import 'raf';
import '../_util/easing.js';
import '../button/type.js';
import './RenderDialog.js';
import 'react-transition-group';
import '../_util/useSetState.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var createDialog = function createDialog(props) {
  var dialogRef = /*#__PURE__*/React.createRef();

  var options = _objectSpread({}, props);

  var div = document.createElement("div");
  ReactDOM.render( /* @__PURE__ */React.createElement(_Dialog, _objectSpread(_objectSpread({}, options), {}, {
    visible: true,
    ref: dialogRef,
    isPlugin: true
  })), div);
  var container = getAttach(options.attach);

  if (container) {
    container.appendChild(div);
  } else {
    console.error("attach is not exist");
  }

  var dialogNode = {
    show: function show() {
      var _dialogRef$current;

      (_dialogRef$current = dialogRef.current) === null || _dialogRef$current === void 0 ? void 0 : _dialogRef$current.show();
    },
    hide: function hide() {
      var _dialogRef$current2;

      (_dialogRef$current2 = dialogRef.current) === null || _dialogRef$current2 === void 0 ? void 0 : _dialogRef$current2.hide();
    },
    update: function update(updateOptions) {
      var _dialogRef$current3;

      (_dialogRef$current3 = dialogRef.current) === null || _dialogRef$current3 === void 0 ? void 0 : _dialogRef$current3.update(updateOptions);
    },
    destroy: function destroy() {
      container.contains(div) && container.removeChild(div);
    }
  };
  return dialogNode;
};

var confirm = function confirm(props) {
  return createDialog(props);
};

var alert = function alert(props) {
  var options = _objectSpread({}, props);

  options.cancelBtn = null;
  return createDialog(options);
};

createDialog.alert = alert;
createDialog.confirm = confirm;
var dialog = createDialog;
var DialogPlugin = createDialog;

export { DialogPlugin, dialog };
//# sourceMappingURL=plugin.js.map
