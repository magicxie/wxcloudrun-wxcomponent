/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-124f91c5.js';
import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import { _ as _slicedToArray } from '../../_chunks/dep-93971e86.js';
import { noop } from 'lodash';
import { useState } from 'react';
import checkSubMenuChildExpanded from '../_util/checkSubMenuChildExpanded.js';
import '../../_chunks/dep-beac373a.js';
import '../_util/type.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function useMenuContext(_ref) {
  var defaultValue = _ref.defaultValue,
      defaultExpanded = _ref.defaultExpanded,
      expandMutex = _ref.expandMutex,
      children = _ref.children,
      _ref$onExpand = _ref.onExpand,
      onExpand = _ref$onExpand === void 0 ? noop : _ref$onExpand,
      _ref$onChange = _ref.onChange,
      onChange = _ref$onChange === void 0 ? noop : _ref$onChange,
      value = _ref.value,
      expanded = _ref.expanded,
      collapsed = _ref.collapsed,
      expandType = _ref.expandType,
      theme = _ref.theme,
      mode = _ref.mode;

  var _useState = useState({
    active: defaultValue,
    expanded: defaultExpanded
  }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var setStateValue = function setStateValue(menuState) {
    return setState(_objectSpread(_objectSpread({}, state), menuState));
  };

  var handleExpandChange = function handleExpandChange(value2, expanded2) {
    var nextExpand = [];
    var index = expanded2.indexOf(value2);

    if (index > -1) {
      if (expandMutex) {
        nextExpand = expanded2.slice(0, index);
      } else {
        nextExpand = expanded2.filter(function (item) {
          return item !== value2;
        });
      }
    } else if (expandMutex) {
      nextExpand = checkSubMenuChildExpanded(children, expanded2, value2);
    } else {
      nextExpand = [].concat(_toConsumableArray(expanded2), [value2]);
    }

    onExpand(nextExpand);
    setState({
      expanded: nextExpand
    });
  };

  return {
    value: {
      onExpand: handleExpandChange,
      onChange: onChange,
      active: value || state.active,
      expanded: expanded || state.expanded,
      collapsed: collapsed || state.collapsed,
      setState: setStateValue,
      expandMutex: expandMutex,
      expandType: collapsed ? "popup" : expandType,
      mode: mode,
      theme: theme
    }
  };
}

export { useMenuContext as default };
//# sourceMappingURL=useMenuContext.js.map
