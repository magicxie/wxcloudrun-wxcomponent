/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import { _ as _slicedToArray } from '../../_chunks/dep-93971e86.js';
import { useState } from 'react';
import '../../_chunks/dep-beac373a.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var usePopupCssTransition = function usePopupCssTransition(_ref) {
  var contentRef = _ref.contentRef,
      classPrefix = _ref.classPrefix,
      expandAnimation = _ref.expandAnimation;

  var _useState = useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      presetMaxHeight = _useState2[0],
      setPresetMaxHeight = _useState2[1];

  var contentEle = contentRef === null || contentRef === void 0 ? void 0 : contentRef.current;
  var popupAnimationClassPrefix = "".concat(classPrefix, "-popup--animation");

  var handleEntering = function handleEntering() {
    setPresetMaxHeight(parseInt(getComputedStyle(contentEle).maxHeight, 10) || Infinity);

    if (contentEle) {
      contentEle.style.overflow = "hidden";
      contentEle.style.maxHeight = "0";
    }
  };

  var handleEntered = function handleEntered() {
    if (contentEle) {
      var scrollHeight = contentEle.scrollHeight;
      var minHeight = presetMaxHeight !== Infinity ? presetMaxHeight : scrollHeight;
      contentEle.style.maxHeight = "".concat(minHeight, "px");
      contentEle.style.overflow = "";
    }
  };

  var handleExiting = function handleExiting() {
    if (contentEle) {
      contentEle.style.maxHeight = "0";
      contentEle.style.overflow = "hidden";
    }
  };

  var lifeCircleEvent = expandAnimation ? {
    onEntering: handleEntering,
    onEntered: handleEntered,
    onExiting: handleExiting
  } : {};
  return {
    props: _objectSpread(_objectSpread({
      timeout: 200,
      nodeRef: contentRef
    }, lifeCircleEvent), {}, {
      classNames: {
        appear: "".concat(popupAnimationClassPrefix, "-enter ").concat(popupAnimationClassPrefix, "-enter-active"),
        appearActive: "".concat(popupAnimationClassPrefix, "-enter-active"),
        appearDone: "".concat(popupAnimationClassPrefix, "-enter-active ").concat(popupAnimationClassPrefix, "-enter-to"),
        enter: "".concat(popupAnimationClassPrefix, "-enter ").concat(popupAnimationClassPrefix, "-enter-active"),
        enterActive: "".concat(popupAnimationClassPrefix, "-enter-active"),
        enterDone: "".concat(popupAnimationClassPrefix, "-enter-active ").concat(popupAnimationClassPrefix, "-enter-to"),
        exit: "".concat(popupAnimationClassPrefix, "-leave ").concat(popupAnimationClassPrefix, "-leave-active"),
        exitActive: "".concat(popupAnimationClassPrefix, "-leave-active"),
        exitDone: "".concat(popupAnimationClassPrefix, "-leave-active ").concat(popupAnimationClassPrefix, "-leave-to")
      }
    })
  };
};

export { usePopupCssTransition as default };
//# sourceMappingURL=usePopupCssTransition.js.map
