/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import React, { forwardRef } from 'react';
import { i as isFunction_1 } from '../../_chunks/dep-25536592.js';
import { g as get_1 } from '../../_chunks/dep-ae2e9ece.js';
import useConfig from '../../_util/useConfig.js';
import TableRow from './TableRow.js';
import '../../_chunks/dep-ab1e2688.js';
import '../../_chunks/dep-aa2bff1b.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-a764e3bd.js';
import '../../_chunks/dep-d098d908.js';
import '../../_chunks/dep-a0400c35.js';
import '../../_chunks/dep-897ce04d.js';
import '../../_chunks/dep-2eff142e.js';
import '../../_chunks/dep-95c9ff5b.js';
import '../../_chunks/dep-312619d6.js';
import '../../_chunks/dep-5ace74d6.js';
import '../../_chunks/dep-8309e373.js';
import '../../_chunks/dep-0de37580.js';
import '../../_chunks/dep-44c00646.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-27d690ce.js';
import './TableContext.js';
import './TableCell.js';
import '../../_chunks/dep-93971e86.js';
import '../../_chunks/dep-beac373a.js';
import 'classnames';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var rowEventsMap = {
  onClick: "onRowClick",
  onDoubleClick: "onRowDbClick",
  onMouseOver: "onRowHover",
  onMouseDown: "onRowMousedown",
  onMouseEnter: "onRowMouseenter",
  onMouseLeave: "onRowMouseleave",
  onMouseUp: "onRowMouseup"
};
var TableBody = /*#__PURE__*/forwardRef(function (props, ref) {
  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _props$data = props.data,
      data = _props$data === void 0 ? [] : _props$data,
      rowKey = props.rowKey,
      rowClassName = props.rowClassName,
      expandedRow = props.expandedRow,
      expandOnRowClick = props.expandOnRowClick,
      handleExpandChange = props.handleExpandChange,
      renderExpandRow = props.renderExpandRow,
      rowspanAndColspan = props.rowspanAndColspan;
  var rowSkipTdSpanColIndexsMap = {};
  var isRowspanAndColspanFn = isFunction_1(rowspanAndColspan);
  var rowEvents = getRowEvents();
  var rows = data.map(function (row, index) {
    var rowKeyValue = get_1(row, rowKey) || index;
    return /* @__PURE__ */React.createElement(React.Fragment, {
      key: rowKeyValue
    }, /* @__PURE__ */React.createElement(TableRow, _objectSpread(_objectSpread({
      record: row,
      rowIndex: index,
      rowKey: rowKey,
      rowClassName: rowClassName,
      expandedRow: expandedRow,
      expandOnRowClick: expandOnRowClick,
      handleExpandChange: handleExpandChange
    }, isRowspanAndColspanFn ? {
      isRowspanAndColspanFn: isRowspanAndColspanFn,
      rowspanAndColspan: rowspanAndColspan,
      rowSkipTdSpanColIndexsMap: rowSkipTdSpanColIndexsMap,
      dataLength: data.length
    } : {}), {}, {
      rowEvents: rowEvents
    })), expandedRow ? renderExpandRow(row, index, rowKeyValue) : null);
  });

  function getRowEvents() {
    var rowEventProps = {};
    Object.keys(rowEventsMap).forEach(function (eventName) {
      var apiEventName = rowEventsMap[eventName];
      var apiEvent = props[apiEventName];

      if (apiEvent) {
        rowEventProps[eventName] = apiEvent;
      }
    });
    return rowEventProps;
  }

  return /* @__PURE__ */React.createElement("tbody", {
    ref: ref,
    className: "".concat(classPrefix, "-table__body")
  }, rows);
});

export { TableBody as default };
//# sourceMappingURL=TableBody.js.map
