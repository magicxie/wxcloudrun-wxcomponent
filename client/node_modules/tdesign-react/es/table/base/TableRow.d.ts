/// <reference types="react" />
import { DataType, TdBaseTableProps, TdPrimaryTableProps } from '../type';
import { RowSkipTdSpanColIndexsMap, RowEvents } from './TableBody';
import { ExpandInnerProps } from './Table';
interface MergeCellsProps {
    rowspanAndColspan?: TdBaseTableProps['rowspanAndColspan'];
    isRowspanAndColspanFn?: boolean;
    rowSkipTdSpanColIndexsMap?: RowSkipTdSpanColIndexsMap;
    dataLength?: number;
}
interface ExpandProps extends ExpandInnerProps {
    expandedRow?: TdPrimaryTableProps['expandedRow'];
    expandOnRowClick?: TdPrimaryTableProps['expandOnRowClick'];
}
interface RowProps<D extends DataType> extends MergeCellsProps, ExpandProps {
    record: D;
    rowClassName?: TdBaseTableProps['rowClassName'];
    rowIndex?: number;
    rowEvents?: RowEvents;
    rowKey: TdBaseTableProps['rowKey'];
}
declare const TableRow: <D extends import("../type").TableRowData>(props: RowProps<D>) => JSX.Element;
export default TableRow;
