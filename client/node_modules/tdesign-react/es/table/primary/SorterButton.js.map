{"version":3,"file":"SorterButton.js","sources":["../../../src/table/primary/SorterButton.tsx"],"sourcesContent":["import React, { FC, useState, useContext, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { ChevronDownIcon } from 'tdesign-icons-react';\nimport { SortInfo, PrimaryTableCol, SortType } from '../type';\nimport { Styles } from '../../common';\nimport Tooltip from '../../tooltip';\nimport { ConfigContext } from '../../config-provider';\n\nexport const SortTypeEnum: { [key in SortType]: SortType } = {\n  desc: 'desc',\n  asc: 'asc',\n  all: 'all',\n};\ninterface SorterButtonProps {\n  column: PrimaryTableCol;\n  onChange: Function;\n  singleSort: SortInfo;\n}\n\n// 用于点击排序图标时tooltip的顺序显示标准\nconst sortTypeOrder = [SortTypeEnum.desc, SortTypeEnum.asc, SortTypeEnum.all];\nconst tooltips = {\n  desc: '点击降序',\n  asc: '点击升序',\n  all: '点击取消排序', // 单个/多个排序，取消时，均使用all\n};\n\nconst SorterButton: FC<SorterButtonProps> = (props) => {\n  const { column: currentColumn, singleSort: currentSort, onChange } = props;\n  const { sortType = SortTypeEnum.all } = currentColumn;\n  const { classPrefix } = useContext(ConfigContext);\n  const [currentSortType, setCurrentSortType] = useState<SortType>(SortTypeEnum.all);\n  const isAllSortType = sortType === SortTypeEnum.all;\n  const nextSortType = getNextSortType(currentSortType);\n\n  /**\n   * 设置tooltip文案提示对应的key\n   */\n  function getNextSortType(currentSortType: SortType): SortType {\n    if (isAllSortType) {\n      const currentIndex = sortTypeOrder.indexOf(currentSortType);\n      const nextIndex = currentIndex === sortTypeOrder.length - 1 ? 0 : currentIndex + 1;\n      return sortTypeOrder[nextIndex];\n    }\n    return currentSortType === SortTypeEnum.all ? sortType : SortTypeEnum.all;\n  }\n\n  /**\n   * 设置单个排序图标元素，默认为TIconChevronDown\n   */\n  function renderIcon(direction: string, className: string) {\n    let style: Styles = {};\n    if (direction === SortTypeEnum.asc) {\n      style = {\n        transform: 'rotate(-180deg)',\n        top: '-1px',\n        ...style,\n      };\n    } else {\n      style.bottom = '-1px';\n    }\n    const sortClassName = classNames([\n      `${classPrefix}-table__sort-icon`,\n      className,\n      `${classPrefix}-table__sort-${direction}`,\n    ]);\n\n    return (\n      <div key={direction} style={style} className={sortClassName}>\n        <ChevronDownIcon size=\"16px\" />\n      </div>\n    );\n  }\n\n  /**\n   * 设置多个排序图标元素\n   */\n  function renderSortIcons() {\n    const allowSortTypes = [];\n    if (isAllSortType) {\n      allowSortTypes.push(SortTypeEnum.asc, SortTypeEnum.desc);\n    } else {\n      allowSortTypes.push(sortType);\n    }\n    const sortIcons = allowSortTypes.map((direction: string) => {\n      const className =\n        direction === currentSortType ? `${classPrefix}-table__sort-icon--active` : `${classPrefix}-icon-sort-default`;\n      return renderIcon(direction, className);\n    });\n    return sortIcons.length > 1 ? <div style={{ lineHeight: 0 }}>{sortIcons}</div> : sortIcons;\n  }\n\n  /**\n   * 点击排序图标\n   */\n  function handleSort() {\n    const currentSortTypeNew = nextSortType;\n    setCurrentSortType(currentSortTypeNew);\n    onChange(currentSort, currentSortTypeNew, currentColumn);\n  }\n\n  useEffect(() => {\n    let currentSortType = SortTypeEnum.all;\n    if (currentSort) {\n      currentSortType = currentSort.descending ? SortTypeEnum.desc : SortTypeEnum.asc;\n    }\n    setCurrentSortType(currentSortType);\n  }, [currentSort]);\n\n  return (\n    <div\n      className={classNames([\n        `${classPrefix}-table__cell--sort-trigger`,\n        { [`${classPrefix}-table__double-icons`]: true },\n      ])}\n      onClick={handleSort}\n    >\n      <Tooltip content={tooltips[nextSortType]} showArrow={false}>\n        {renderSortIcons()}\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default SorterButton;\n"],"names":["SortTypeEnum","desc","asc","all","sortTypeOrder","tooltips","SorterButton","props","currentColumn","column","currentSort","singleSort","onChange","sortType","useContext","ConfigContext","classPrefix","useState","currentSortType","setCurrentSortType","isAllSortType","nextSortType","getNextSortType","currentSortType2","currentIndex","indexOf","nextIndex","length","renderIcon","direction","className","style","transform","top","bottom","sortClassName","classNames","React","createElement","key","ChevronDownIcon","size","renderSortIcons","allowSortTypes","push","sortIcons","map","lineHeight","handleSort","currentSortTypeNew","useEffect","descending","onClick","Tooltip","content","showArrow"],"mappings":"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"}