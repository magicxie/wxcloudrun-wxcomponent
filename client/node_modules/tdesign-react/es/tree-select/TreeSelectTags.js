/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import React from 'react';
import { Tag } from '../tag/index.js';
import '../tag/Tag.js';
import '../_chunks/dep-9332bbea.js';
import '../_chunks/dep-27d690ce.js';
import 'classnames';
import 'tdesign-icons-react';
import '../_util/noop.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../_util/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../tag/CheckTag.js';
import '../_chunks/dep-93971e86.js';
import '../_chunks/dep-beac373a.js';
import '../_util/useDefault.js';
import './style/css.js';
import '../tag/type.js';

function TreeSelectTags(props) {
  var tagList = props.tagList,
      minCollapsedNum = props.minCollapsedNum,
      collapsedItems = props.collapsedItems,
      disabled = props.disabled,
      size = props.size,
      value = props.value,
      data = props.data,
      onRemove = props.onRemove,
      onChange = props.onChange;
  if (!tagList.length) return null;

  function removeTag(index, data2, e) {
    e.stopPropagation();
    if (disabled || !Array.isArray(value)) return;
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      value: value[index],
      data: data2,
      e: e
    });
    onChange === null || onChange === void 0 ? void 0 : onChange(value.filter(function (_, i) {
      return i !== index;
    }), null);
  }

  var tags = tagList.map(function (label, index) {
    return /* @__PURE__ */React.createElement(Tag, {
      key: index,
      size: size,
      closable: !disabled,
      disabled: disabled,
      onClose: function onClose(_ref) {
        var e = _ref.e;
        return removeTag(index, data, e);
      }
    }, label);
  });

  if (minCollapsedNum) {
    tags = tags.slice(0, minCollapsedNum);
    var nums = tagList.length - minCollapsedNum;
    nums && tags.push( /* @__PURE__ */React.createElement(Tag, {
      key: "collapsed-".concat(nums),
      size: size,
      disabled: disabled
    }, collapsedItems || "+".concat(nums)));
  }

  return /* @__PURE__ */React.createElement(React.Fragment, null, tags);
}

export { TreeSelectTags as default };
//# sourceMappingURL=TreeSelectTags.js.map
