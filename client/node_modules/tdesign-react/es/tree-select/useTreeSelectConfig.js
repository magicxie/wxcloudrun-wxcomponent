/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9332bbea.js';
import { useMemo } from 'react';
import classNames from 'classnames';
import useConfig from '../_util/useConfig.js';
import useCommonClassName from '../_util/useCommonClassName.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';

var defaultPopupProps = {
  trigger: "click",
  placement: "bottom-left",
  overlayClassName: "",
  overlayStyle: function overlayStyle(trigger) {
    return {
      width: "".concat(trigger.offsetWidth, "px")
    };
  }
};
function useTreeSelectConfig(props) {
  var _useConfig = useConfig(),
      prefix = _useConfig.classPrefix;

  var CLASSNAMES = useCommonClassName();
  var disabled = props.disabled,
      prefixIcon = props.prefixIcon,
      size = props.size,
      visible = props.visible,
      popupProps = props.popupProps;
  return useMemo(function () {
    var _classNames;

    var selectClassName = classNames("".concat(prefix, "-select"), (_classNames = {}, _defineProperty(_classNames, CLASSNAMES.STATUS.disabled, disabled), _defineProperty(_classNames, CLASSNAMES.STATUS.active, visible), _defineProperty(_classNames, CLASSNAMES.SIZE[size], size), _defineProperty(_classNames, "".concat(prefix, "-has-prefix"), prefixIcon), _classNames));
    var popupObject = Object.assign(defaultPopupProps, popupProps);
    var popupClassName = classNames(popupObject.overlayClassName, "".concat(prefix, "-select__dropdown"), "narrow-scrollbar");
    return {
      selectClassName: selectClassName,
      popupClassName: popupClassName,
      popupObject: popupObject
    };
  }, [prefix, size, prefixIcon, disabled, visible, popupProps]);
}

export { useTreeSelectConfig as default };
//# sourceMappingURL=useTreeSelectConfig.js.map
