{"version":3,"file":"dep-fcfd7649.js","sources":["../../node_modules/lodash/_baseAssignValue.js","../../node_modules/lodash/_assignValue.js","../../node_modules/lodash/_flatRest.js"],"sourcesContent":["var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n"],"names":["defineProperty","require$$0","baseAssignValue","object","key","value","_baseAssignValue","eq","require$$1","objectProto","Object","prototype","hasOwnProperty","assignValue","objValue","call","undefined","_assignValue","flatten","overRest","setToString","require$$2","flatRest","func","_flatRest"],"mappings":";;;;;;;;;;;AAAA,IAAIA,cAAc,GAAGC,eAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAAyBC,MAAzB,EAAiCC,GAAjC,EAAsCC,KAAtC,EAA6C;AAC3C,MAAID,GAAG,IAAI,WAAP,IAAsBJ,cAA1B,EAA0C;AACxCA,IAAAA,cAAc,CAACG,MAAD,EAASC,GAAT,EAAc;AAC1B,sBAAgB,IADU;AAE1B,oBAAc,IAFY;AAG1B,eAASC,KAHiB;AAI1B,kBAAY;AAJc,KAAd,CAAd;AAMD,GAPD,MAOO;AACLF,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAcC,KAAd;AACD;AACF;;IAEDC,gBAAc,GAAGJ;;ACxBjB,IAAIA,eAAe,GAAGD,gBAAtB;AAAA,IACIM,EAAE,GAAGC,IADT;AAGA;;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,SAAzB;AAEA;;AACA,IAAIC,cAAc,GAAGH,WAAW,CAACG,cAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBV,MAArB,EAA6BC,GAA7B,EAAkCC,KAAlC,EAAyC;AACvC,MAAIS,QAAQ,GAAGX,MAAM,CAACC,GAAD,CAArB;;AACA,MAAI,EAAEQ,cAAc,CAACG,IAAf,CAAoBZ,MAApB,EAA4BC,GAA5B,KAAoCG,EAAE,CAACO,QAAD,EAAWT,KAAX,CAAxC,KACCA,KAAK,KAAKW,SAAV,IAAuB,EAAEZ,GAAG,IAAID,MAAT,CAD5B,EAC+C;AAC7CD,IAAAA,eAAe,CAACC,MAAD,EAASC,GAAT,EAAcC,KAAd,CAAf;AACD;AACF;;IAEDY,YAAc,GAAGJ;;AC3BjB,IAAIK,OAAO,GAAGjB,SAAd;AAAA,IACIkB,QAAQ,GAAGX,SADf;AAAA,IAEIY,WAAW,GAAGC,YAFlB;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOH,WAAW,CAACD,QAAQ,CAACI,IAAD,EAAOP,SAAP,EAAkBE,OAAlB,CAAT,EAAqCK,IAAI,GAAG,EAA5C,CAAlB;AACD;;IAEDC,SAAc,GAAGF;;;;"}