/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-93971e86.js';
import React, { useState, useEffect, useMemo } from 'react';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import useConfig from '../../_util/useConfig.js';
import noop from '../../_util/noop.js';
import DatePickerHeader from '../base/Header.js';
import DatePickerTable from '../base/Table.js';
import { getToday, subtractMonth, addMonth, getYears, getMonths, getWeeks, flagActive } from '../utils.js';
import '../../_chunks/dep-beac373a.js';
import '../../_chunks/dep-9332bbea.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../_chunks/dep-27d690ce.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import 'tdesign-icons-react';
import '../../button/index.js';
import '../../button/Button.js';
import 'classnames';
import '../../_util/useRipple.js';
import '../../_util/setStyle.js';
import '../../loading/index.js';
import '../../loading/loading.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-3853103d.js';
import '../../_chunks/dep-ab1e2688.js';
import '../../_chunks/dep-aa2bff1b.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-897ce04d.js';
import '../../_chunks/dep-2eff142e.js';
import '../../_chunks/dep-312619d6.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../loading/style/index.js';
import '../../loading/type.js';
import '../../loading/plugin.js';
import '../../button/style/index.js';
import '../../button/type.js';
import '../base/Cell.js';
import '../../_chunks/dep-ab9c749e.js';
import '../../_chunks/dep-ea69dcf8.js';
import '../../_chunks/dep-6bae5139.js';
import '../../_chunks/dep-0de37580.js';
import '../../_chunks/dep-b8263a1c.js';
import '../../_chunks/dep-25536592.js';
import '../../_chunks/dep-a764e3bd.js';
import '../../_chunks/dep-d098d908.js';
import '../../_chunks/dep-8309e373.js';
import '../../_chunks/dep-14692160.js';
import '../../_chunks/dep-f88db21e.js';
import '../../_chunks/dep-028895a6.js';
import '../../_chunks/dep-cac5f189.js';
import '../../_chunks/dep-95c9ff5b.js';

var TODAY = getToday();

var DatePanel = function DatePanel(props) {
  var _useLocaleReceiver = useLocaleReceiver("datePicker"),
      _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
      local = _useLocaleReceiver2[0],
      t = _useLocaleReceiver2[1];

  var monthAriaLabel = t(local.monthAriaLabel);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var value = props.value,
      mode = props.mode,
      minDate = props.minDate,
      maxDate = props.maxDate,
      firstDayOfWeek = props.firstDayOfWeek,
      disableDate = props.disableDate,
      onChange = props.onChange;

  var _useState = useState(value.getFullYear()),
      _useState2 = _slicedToArray(_useState, 2),
      year = _useState2[0],
      setYear = _useState2[1];

  var _useState3 = useState(value.getMonth()),
      _useState4 = _slicedToArray(_useState3, 2),
      month = _useState4[0],
      setMonth = _useState4[1];

  var _useState5 = useState(mode),
      _useState6 = _slicedToArray(_useState5, 2),
      type = _useState6[0],
      setType = _useState6[1];

  useEffect(function () {
    setType(mode);
  }, [mode]);
  useEffect(function () {
    setYear(value.getFullYear());
    setMonth(value.getMonth());
  }, [value]);

  function clickHeader(flag) {
    var monthCount = 0;
    var next = null;

    switch (type) {
      case "date":
        monthCount = 1;
        break;

      case "month":
        monthCount = 12;
        break;

      case "year":
        monthCount = 120;
    }

    var current = new Date(year, month);

    switch (flag) {
      case 1:
        next = addMonth(current, monthCount);
        break;

      case -1:
        next = subtractMonth(current, monthCount);
        break;

      case 0:
        next = new Date();
        break;
    }

    setYear(next.getFullYear());
    setMonth(next.getMonth());
  }

  var tableData = useMemo(function () {
    var data;
    var options = {
      disableDate: disableDate,
      minDate: minDate,
      maxDate: maxDate,
      firstDayOfWeek: firstDayOfWeek,
      monthText: monthAriaLabel
    };

    switch (type) {
      case "date":
        data = getWeeks({
          year: year,
          month: month
        }, options);
        break;

      case "month":
        data = getMonths(year, options);
        break;

      case "year":
        data = getYears(year, options);
        break;

      default:
        break;
    }

    var start = type === "date" || type === mode ? value : new Date(year, month);
    return flagActive(data, {
      start: start,
      type: type
    });
  }, [year, month, type, value, mode, disableDate, minDate, maxDate, firstDayOfWeek, monthAriaLabel]);

  function getClickHandler(date) {
    if (type === "date") {
      onChange === null || onChange === void 0 ? void 0 : onChange(date);
    } else if (type === "month") {
      if (mode === "month") {
        onChange === null || onChange === void 0 ? void 0 : onChange(date);
      } else {
        setType("date");
        setYear(date.getFullYear());
        setMonth(date.getMonth());
      }
    } else if (type === "year") {
      if (mode === "year") {
        onChange === null || onChange === void 0 ? void 0 : onChange(date);
      } else {
        setType("month");
        setYear(date.getFullYear());
      }
    }
  }

  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-date-picker__panel")
  }, /* @__PURE__ */React.createElement(DatePickerHeader, {
    year: year,
    month: month,
    type: type,
    onBtnClick: clickHeader,
    onTypeChange: setType
  }), /* @__PURE__ */React.createElement(DatePickerTable, {
    type: type,
    firstDayOfWeek: firstDayOfWeek,
    data: tableData,
    onCellClick: getClickHandler,
    onCellMouseEnter: noop
  }));
};

DatePanel.displayName = "DatePanel";
DatePanel.defaultProps = {
  value: TODAY,
  mode: "date"
};

export { DatePanel as default };
//# sourceMappingURL=Date.js.map
