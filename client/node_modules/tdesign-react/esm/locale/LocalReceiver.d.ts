import { Locale } from './type';
import type { Config } from '../config-provider';
export interface Placement {
    [propName: string]: string | number;
}
export declare function useLocaleReceiver<T extends keyof Config['locale']>(componentName: T, defaultLocale?: Locale[T] | Function): [{
    pagination: {
        itemsPerPage: string;
        jumpTo: string;
        page: string;
        prev: string;
        next: string;
        total: string;
    };
    cascader: {
        empty: string;
        loadingText: string;
    };
    calendar: {
        fillWithZero: boolean;
        yearSelection: string;
        monthSelection: string;
        yearRadio: string;
        monthRadio: string;
        hideWeekend: string;
        showWeekend: string;
        today: string;
        thisMonth: string;
        week: string;
        cellMonth: string;
    };
    transfer: {
        title: string;
        empty: string;
        placeholder: string;
    };
    timePicker: {
        nowtime: string;
        confirm: string;
        anteMeridiem: string;
        postMeridiem: string;
        placeholder: string;
    };
    dialog: {
        confirm: string;
        cancel: string;
    };
    drawer: {
        confirm: string;
        cancel: string;
    };
    popconfirm: {
        confirm: string;
        cancel: string;
    };
    table: {
        empty: string;
        expandIcon: any;
        sortIcon: any;
    };
    select: {
        empty: string;
        loadingText: string;
        clearIcon: any;
    };
    tree: {
        empty: string;
        folderIcon: any;
    };
    treeSelect: {
        empty: string;
        loadingText: string;
    };
    datePicker: {
        placeholder: {
            date: string;
            month: string;
            year: string;
        };
        weekdays: string[];
        months: string[];
        firstDayOfWeek: number;
        rangeSeparator: string;
        direction: string;
        format: string;
        dayAriaLabel: string;
        weekAbbreviation: string;
        yearAriaLabel: string;
        monthAriaLabel: string;
        confirm: string;
        selectTime: string;
        selectDate: string;
        nextYear: string;
        preYear: string;
        nextMonth: string;
        preMonth: string;
        preDecade: string;
        nextDecade: string;
        now: string;
    };
    steps: {};
    upload: {
        sizeLimitMessage: string;
    };
}[T], Function];
