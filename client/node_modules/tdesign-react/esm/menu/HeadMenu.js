/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9332bbea.js';
import classNames from 'classnames';
import React, { useMemo } from 'react';
import { i as isObject_1 } from '../_chunks/dep-a764e3bd.js';
import { Tabs } from '../tabs/index.js';
import useConfig from '../_util/useConfig.js';
import useMenuContext from './hooks/useMenuContext.js';
import { MenuContext } from './MenuContext.js';
import checkSubMenuActive from './_util/checkSubMenuActive.js';
import '../_chunks/dep-156c830d.js';
import '../_chunks/dep-ab1e2688.js';
import '../tabs/Tabs.js';
import '../_chunks/dep-93971e86.js';
import '../_chunks/dep-beac373a.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../tabs/TabNav.js';
import 'tdesign-icons-react';
import '../_util/noop.js';
import '../tabs/useTabClass.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../tabs/TabNavItem.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../tabs/TabBar.js';
import '../tabs/TabPanel.js';
import '../tabs/style/index.js';
import '../tabs/type.js';
import '../_chunks/dep-124f91c5.js';
import 'lodash';
import './_util/checkSubMenuChildExpanded.js';
import './_util/type.js';
import './_util/checkMenuType.js';
import './_util/checkSubMenuChildrenActive.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TabPanel = Tabs.TabPanel;

var HeadMenu = function HeadMenu(props) {
  var children = props.children,
      className = props.className,
      _props$theme = props.theme,
      theme = _props$theme === void 0 ? "light" : _props$theme,
      style = props.style,
      logo = props.logo,
      operations = props.operations;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useMenuContext = useMenuContext(_objectSpread(_objectSpread({}, props), {}, {
    children: children,
    mode: "title"
  })),
      value = _useMenuContext.value;

  var childs = useMemo(function () {
    if (value.expandType === "popup") return null;
    var activeMenu = checkSubMenuActive(children, value.active);
    if (!activeMenu) return null;
    var child = activeMenu.props.children;
    if (Array.isArray(child)) return child;
    if (isObject_1(child)) return [child];
    return activeMenu.props.children;
  }, [children, value.expandType, value.active]);
  var currentChildsValues = (childs === null || childs === void 0 ? void 0 : childs.length) > 0 ? childs.map(function (item) {
    return item.props.value;
  }) : [];
  return /* @__PURE__ */React.createElement(MenuContext.Provider, {
    value: value
  }, /* @__PURE__ */React.createElement("div", {
    className: classNames(className, "".concat(classPrefix, "-head-menu"), "".concat(classPrefix, "-menu--").concat(theme)),
    style: _objectSpread({}, style)
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-head-menu__inner")
  }, logo && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-menu__logo")
  }, logo), /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-menu")
  }, children), operations && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-menu__operations")
  }, operations)), (childs === null || childs === void 0 ? void 0 : childs.length) > 0 && /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-head-menu__submenu ").concat(classPrefix, "-submenu")
  }, /* @__PURE__ */React.createElement(Tabs, {
    value: currentChildsValues.includes(value.active) ? value.active : currentChildsValues[0],
    onChange: value.onChange
  }, childs.map(function (_ref) {
    var props2 = _ref.props;
    return /* @__PURE__ */React.createElement(TabPanel, {
      value: props2.value,
      key: props2.value,
      label: props2.children
    });
  })))));
};

export { HeadMenu as default };
//# sourceMappingURL=HeadMenu.js.map
