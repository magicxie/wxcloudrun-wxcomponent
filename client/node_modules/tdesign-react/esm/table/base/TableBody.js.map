{"version":3,"file":"TableBody.js","sources":["../../../src/table/base/TableBody.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport isFunction from 'lodash/isFunction';\nimport get from 'lodash/get';\nimport { TdPrimaryTableProps } from '../type';\nimport useConfig from '../../_util/useConfig';\nimport TableRow from './TableRow';\nimport { ExpandInnerProps } from './Table';\n\nexport interface RowSkipTdSpanColIndexsMap {\n  [key: number]: number[];\n}\n\ntype RowEventName =\n  | 'onClick'\n  | 'onDoubleClick'\n  | 'onMouseOver'\n  | 'onMouseDown'\n  | 'onMouseEnter'\n  | 'onMouseLeave'\n  | 'onMouseUp';\ntype APIRowEventName =\n  | 'onRowClick'\n  | 'onRowDbClick'\n  | 'onRowHover'\n  | 'onRowMousedown'\n  | 'onRowMouseenter'\n  | 'onRowMouseleave'\n  | 'onRowMouseup';\nexport type RowEvents = Record<RowEventName, React.MouseEventHandler<HTMLElement>> | { [key: string]: Function };\n\nconst rowEventsMap: Record<RowEventName, APIRowEventName> = {\n  onClick: 'onRowClick',\n  onDoubleClick: 'onRowDbClick',\n  onMouseOver: 'onRowHover',\n  onMouseDown: 'onRowMousedown',\n  onMouseEnter: 'onRowMouseenter',\n  onMouseLeave: 'onRowMouseleave',\n  onMouseUp: 'onRowMouseup',\n};\n\nconst TableBody = forwardRef(\n  (props: TdPrimaryTableProps & ExpandInnerProps, ref: React.Ref<HTMLTableSectionElement>): any => {\n    const { classPrefix } = useConfig();\n    const {\n      data = [],\n      rowKey,\n      rowClassName,\n      expandedRow,\n      expandOnRowClick,\n      handleExpandChange,\n      renderExpandRow,\n      rowspanAndColspan,\n    } = props;\n    const rowSkipTdSpanColIndexsMap: RowSkipTdSpanColIndexsMap = {}; // 引用，不可重置。eg: { 0: [1, 3] } 表示第1行，第2、4列两个cell不渲染\n    const isRowspanAndColspanFn = isFunction(rowspanAndColspan);\n\n    const rowEvents = getRowEvents();\n\n    // ==================== render ====================\n    const rows = data.map((row, index) => {\n      const rowKeyValue = get(row, rowKey) || index;\n\n      return (\n        <React.Fragment key={rowKeyValue}>\n          <TableRow\n            record={row}\n            rowIndex={index}\n            rowKey={rowKey}\n            rowClassName={rowClassName}\n            expandedRow={expandedRow}\n            expandOnRowClick={expandOnRowClick}\n            handleExpandChange={handleExpandChange}\n            {...(isRowspanAndColspanFn\n              ? {\n                  isRowspanAndColspanFn,\n                  rowspanAndColspan,\n                  rowSkipTdSpanColIndexsMap,\n                  dataLength: data.length,\n                }\n              : {})}\n            rowEvents={rowEvents}\n          />\n          {expandedRow ? renderExpandRow(row, index, rowKeyValue) : null}\n        </React.Fragment>\n      );\n    });\n\n    function getRowEvents(): RowEvents {\n      const rowEventProps = {};\n      Object.keys(rowEventsMap).forEach((eventName) => {\n        const apiEventName = rowEventsMap[eventName];\n        const apiEvent = props[apiEventName];\n        if (apiEvent) {\n          rowEventProps[eventName] = apiEvent;\n        }\n      });\n      return rowEventProps;\n    }\n\n    return (\n      <tbody ref={ref} className={`${classPrefix}-table__body`}>\n        {rows}\n      </tbody>\n    );\n  },\n);\n\nexport default TableBody;\n"],"names":["rowEventsMap","onClick","onDoubleClick","onMouseOver","onMouseDown","onMouseEnter","onMouseLeave","onMouseUp","TableBody","forwardRef","props","ref","useConfig","classPrefix","data","rowKey","rowClassName","expandedRow","expandOnRowClick","handleExpandChange","renderExpandRow","rowspanAndColspan","rowSkipTdSpanColIndexsMap","isRowspanAndColspanFn","isFunction","rowEvents","getRowEvents","rows","map","row","index","rowKeyValue","get","React","createElement","Fragment","key","TableRow","record","rowIndex","dataLength","length","rowEventProps","Object","keys","forEach","eventName","apiEventName","apiEvent","className"],"mappings":"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"}