{"version":3,"file":"expand-box.js","sources":["../../../src/table/primary/expand-box.tsx"],"sourcesContent":["import React, { FC, useContext } from 'react';\nimport { ChevronDownCircleIcon } from 'tdesign-icons-react';\nimport { ConfigContext } from '../../config-provider';\nimport { Styles, TNode } from '../../common';\n\ninterface Props {\n  expanded?: boolean;\n  handleExpandChange?: Function;\n  rowKeyValue?: any;\n  row?: Record<string, any>;\n  expandIcon?: TNode;\n  expandOnRowClick?: boolean;\n}\n\nconst ExpandButton: FC<Props> = (props) => {\n  const { expanded, handleExpandChange, rowKeyValue, row, expandIcon, expandOnRowClick } = props;\n  const { classPrefix } = useContext(ConfigContext);\n\n  const renderIcon = (icon: TNode) => {\n    let result: React.ReactNode = null;\n    if (icon && typeof icon !== 'boolean') result = icon;\n    if (typeof icon === 'function') result = icon();\n\n    if (result) {\n      result = <span className={`${classPrefix}-table-expand-icon`}>{result}</span>;\n    } else if (typeof icon === 'boolean' && icon === false) {\n      result = <span className={`${classPrefix}-table-expand-icon`}></span>;\n    } else {\n      result = <ChevronDownCircleIcon className={`${classPrefix}-table-expand-icon`} size=\"16px\" />;\n    }\n    return result;\n  };\n\n  function getExpandIcon(expanded: boolean) {\n    const style: Styles = {\n      transition: 'all .2s',\n      display: 'flex',\n      alignItems: 'center',\n    };\n    if (!expanded) {\n      style.transform = 'rotate(-180deg)';\n    }\n    return <span style={style}>{renderIcon(expandIcon)}</span>;\n  }\n\n  return (\n    <span\n      className={`${classPrefix}-table__expand-box`}\n      {...(!expandOnRowClick ? { onClick: () => handleExpandChange(row, rowKeyValue) } : {})}\n    >\n      {getExpandIcon(expanded)}\n    </span>\n  );\n};\nexport default ExpandButton;\n"],"names":["ExpandButton","props","expanded","handleExpandChange","rowKeyValue","row","expandIcon","expandOnRowClick","useContext","ConfigContext","classPrefix","renderIcon","icon","result","React","createElement","className","ChevronDownCircleIcon","size","getExpandIcon","expanded2","style","transition","display","alignItems","transform","onClick"],"mappings":";;;;;;;;;;;;;;;;;;;IAGMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,MAAQC,QAAR,GAAyFD,KAAzF,CAAQC,QAAR;AAAA,MAAkBC,kBAAlB,GAAyFF,KAAzF,CAAkBE,kBAAlB;AAAA,MAAsCC,WAAtC,GAAyFH,KAAzF,CAAsCG,WAAtC;AAAA,MAAmDC,GAAnD,GAAyFJ,KAAzF,CAAmDI,GAAnD;AAAA,MAAwDC,UAAxD,GAAyFL,KAAzF,CAAwDK,UAAxD;AAAA,MAAoEC,gBAApE,GAAyFN,KAAzF,CAAoEM,gBAApE;;AACA,oBAAwBC,UAAU,CAACC,aAAD,CAAlC;AAAA,MAAQC,WAAR,eAAQA,WAAR;;AACA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,QAAIC,MAAM,GAAG,IAAb;AACA,QAAID,IAAI,IAAI,OAAOA,IAAP,KAAgB,SAA5B,EACEC,MAAM,GAAGD,IAAT;AACF,QAAI,OAAOA,IAAP,KAAgB,UAApB,EACEC,MAAM,GAAGD,IAAI,EAAb;;AACF,QAAIC,MAAJ,EAAY;AACVA,MAAAA,MAAM,kBAAmBC,KAAK,CAACC,aAAN,CAAoB,MAApB,EAA4B;AACnDC,QAAAA,SAAS,YAAKN,WAAL;AAD0C,OAA5B,EAEtBG,MAFsB,CAAzB;AAGD,KAJD,MAIO,IAAI,OAAOD,IAAP,KAAgB,SAAhB,IAA6BA,IAAI,KAAK,KAA1C,EAAiD;AACtDC,MAAAA,MAAM,kBAAmBC,KAAK,CAACC,aAAN,CAAoB,MAApB,EAA4B;AACnDC,QAAAA,SAAS,YAAKN,WAAL;AAD0C,OAA5B,CAAzB;AAGD,KAJM,MAIA;AACLG,MAAAA,MAAM,kBAAmBC,KAAK,CAACC,aAAN,CAAoBE,qBAApB,EAA2C;AAClED,QAAAA,SAAS,YAAKN,WAAL,uBADyD;AAElEQ,QAAAA,IAAI,EAAE;AAF4D,OAA3C,CAAzB;AAID;;AACD,WAAOL,MAAP;AACD,GArBD;;AAsBA,WAASM,aAAT,CAAuBC,SAAvB,EAAkC;AAChC,QAAMC,KAAK,GAAG;AACZC,MAAAA,UAAU,EAAE,SADA;AAEZC,MAAAA,OAAO,EAAE,MAFG;AAGZC,MAAAA,UAAU,EAAE;AAHA,KAAd;;AAKA,QAAI,CAACJ,SAAL,EAAgB;AACdC,MAAAA,KAAK,CAACI,SAAN,GAAkB,iBAAlB;AACD;;AACD,0BAAuBX,KAAK,CAACC,aAAN,CAAoB,MAApB,EAA4B;AACjDM,MAAAA,KAAK,EAALA;AADiD,KAA5B,EAEpBV,UAAU,CAACL,UAAD,CAFU,CAAvB;AAGD;;AACD,wBAAuBQ,KAAK,CAACC,aAAN,CAAoB,MAApB;AACrBC,IAAAA,SAAS,YAAKN,WAAL;AADY,KAElB,CAACH,gBAAD,GAAoB;AAAEmB,IAAAA,OAAO,EAAE;AAAA,aAAMvB,kBAAkB,CAACE,GAAD,EAAMD,WAAN,CAAxB;AAAA;AAAX,GAApB,GAA8E,EAF5D,GAGpBe,aAAa,CAACjB,QAAD,CAHO,CAAvB;AAID;;;;"}