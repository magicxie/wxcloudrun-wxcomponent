/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-9332bbea.js';
import { _ as _toConsumableArray } from '../_chunks/dep-124f91c5.js';
import { _ as _slicedToArray } from '../_chunks/dep-93971e86.js';
import React, { useState, useMemo, useEffect } from 'react';
import { d as difference_1 } from '../_chunks/dep-6615471e.js';
import classNames from 'classnames';
import { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-react';
import useConfig from '../_util/useConfig.js';
import { Button } from '../button/index.js';
import TransferList from './TransferList.js';
import { getDefaultValue, getJSX } from './utils.js';
import '../_chunks/dep-beac373a.js';
import '../_chunks/dep-ab1e2688.js';
import '../_chunks/dep-444d31ef.js';
import '../_chunks/dep-a0400c35.js';
import '../_chunks/dep-897ce04d.js';
import '../_chunks/dep-2eff142e.js';
import '../_chunks/dep-156c830d.js';
import '../_chunks/dep-95c9ff5b.js';
import '../_chunks/dep-aa2bff1b.js';
import '../_chunks/dep-312619d6.js';
import '../_chunks/dep-5ace74d6.js';
import '../_chunks/dep-25536592.js';
import '../_chunks/dep-a764e3bd.js';
import '../_chunks/dep-d098d908.js';
import '../_chunks/dep-8309e373.js';
import '../_chunks/dep-0de37580.js';
import '../_chunks/dep-44c00646.js';
import '../_chunks/dep-55e3e3e3.js';
import '../_chunks/dep-1997c424.js';
import '../_chunks/dep-14bd2526.js';
import '../_chunks/dep-f5f7d3f4.js';
import '../_chunks/dep-b12a3761.js';
import '../_chunks/dep-b8263a1c.js';
import '../_chunks/dep-14692160.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../button/Button.js';
import '../_chunks/dep-27d690ce.js';
import '../_util/noop.js';
import '../_util/useRipple.js';
import '../_util/setStyle.js';
import '../loading/index.js';
import '../loading/loading.js';
import '../_util/dom.js';
import 'raf';
import '../_chunks/dep-3853103d.js';
import '../_util/easing.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../loading/style/index.js';
import '../loading/type.js';
import '../loading/plugin.js';
import '../button/style/index.js';
import '../button/type.js';
import '../_chunks/dep-a8d92bd9.js';
import '../_chunks/dep-39f90ded.js';
import '../_chunks/dep-7daf07a9.js';
import '../_chunks/dep-e2a0e7b2.js';
import '../checkbox/index.js';
import '../_chunks/dep-d44ac8a4.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../common/Check.js';
import '../_util/helper.js';
import '../_chunks/dep-93bd2d05.js';
import '../_chunks/dep-304ab091.js';
import '../_chunks/dep-ea69dcf8.js';
import '../_util/useDefault.js';
import '../_chunks/dep-d2535fd6.js';
import '../checkbox/style/index.js';
import '../checkbox/type.js';
import '../input/index.js';
import '../input/Input.js';
import '../input/InputGroup.js';
import '../_util/useDefaultValue.js';
import '../input/style/index.js';
import '../input/type.js';
import '../pagination/index.js';
import '../pagination/Pagination.js';
import '../select/index.js';
import '../select/base/Select.js';
import '../_chunks/dep-ae2e9ece.js';
import 'lodash';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../_util/composeRefs.js';
import '../select/util/helper.js';
import '../select/base/OptionGroup.js';
import '../select/base/Option.js';
import '../common/FakeArrow.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../_util/usePrevious.js';
import '../popup/Portal.js';
import '../popup/hooks/useTriggerProps.js';
import '../_util/useClickOutside.js';
import '../popup/hooks/usePopupCssTransition.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../tag/index.js';
import '../tag/Tag.js';
import '../tag/CheckTag.js';
import '../tag/style/index.js';
import '../tag/type.js';
import '../select/base/PopupContent.js';
import '../select/style/index.js';
import '../select/type.js';
import '../input-number/index.js';
import '../input-number/InputNumber.js';
import '../_util/useCommonClassName.js';
import '../_util/useUpdateEffect.js';
import '../input-number/StepHandler.js';
import '../input-number/utils/numberUtils.js';
import '../input-number/style/index.js';
import '../input-number/type.js';
import '../pagination/validators.js';
import '../pagination/style/index.js';
import '../pagination/type.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var Transfer = function Transfer(props) {
  var _classnames;

  var _props$data = props.data,
      data = _props$data === void 0 ? [] : _props$data,
      _props$search = props.search,
      search = _props$search === void 0 ? false : _props$search,
      checked = props.checked,
      _props$defaultChecked = props.defaultChecked,
      defaultChecked = _props$defaultChecked === void 0 ? [] : _props$defaultChecked,
      onCheckedChange = props.onCheckedChange,
      value = props.value,
      _props$defaultValue = props.defaultValue,
      defaultValue = _props$defaultValue === void 0 ? [] : _props$defaultValue,
      onChange = props.onChange,
      empty = props.empty,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      pagination = props.pagination,
      title = props.title,
      operation = props.operation,
      footer = props.footer,
      transferItem = props.transferItem,
      content = props.content;

  var _useState = useState(function () {
    return {
      source: data.filter(function (item) {
        return !defaultValue.includes(item.value);
      }),
      target: data.filter(function (item) {
        return defaultValue.includes(item.value);
      })
    };
  }),
      _useState2 = _slicedToArray(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var _useState3 = useState(function () {
    return {
      source: state.source.filter(function (item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function (item) {
        return item.value;
      }),
      target: state.target.filter(function (item) {
        return !item.disabled && defaultChecked.includes(item.value);
      }).map(function (item) {
        return item.value;
      })
    };
  }),
      _useState4 = _slicedToArray(_useState3, 2),
      checkeds = _useState4[0],
      setCheckeds = _useState4[1];

  var _useState5 = useState({
    source: "",
    target: ""
  }),
      _useState6 = _slicedToArray(_useState5, 2),
      searchState = _useState6[0],
      setSearchState = _useState6[1];

  var isTargetControled = ("value" in props);
  var isCheckedControled = ("checked" in props);

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var transferClassName = "".concat(classPrefix, "-transfer");

  var _useMemo = useMemo(function () {
    var source = state.source,
        target = state.target;
    var searchSource = searchState.source,
        searchTarget = searchState.target;
    return [source.filter(function (item) {
      return !searchSource || item.label.indexOf(searchState.source) > -1;
    }), target.filter(function (item) {
      return !searchTarget || item.label.indexOf(searchState.target) > -1;
    })];
  }, [searchState, state]),
      _useMemo2 = _slicedToArray(_useMemo, 2),
      sourceData = _useMemo2[0],
      targetData = _useMemo2[1];

  var _getDefaultValue$map = getDefaultValue(empty, "\u6682\u65E0\u6570\u636E").map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map2 = _slicedToArray(_getDefaultValue$map, 2),
      SourceEmptyCmp = _getDefaultValue$map2[0],
      TargetEmptyCmp = _getDefaultValue$map2[1];

  var _getDefaultValue = getDefaultValue(disabled, false),
      _getDefaultValue2 = _slicedToArray(_getDefaultValue, 2),
      sourceDisable = _getDefaultValue2[0],
      targetDisable = _getDefaultValue2[1];

  var _getDefaultValue3 = getDefaultValue(pagination),
      _getDefaultValue4 = _slicedToArray(_getDefaultValue3, 2),
      sourcePagonation = _getDefaultValue4[0],
      targetPagonation = _getDefaultValue4[1];

  var _getDefaultValue$map3 = getDefaultValue(title).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map4 = _slicedToArray(_getDefaultValue$map3, 2),
      sourceTitle = _getDefaultValue$map4[0],
      targetTitle = _getDefaultValue$map4[1];

  var _getDefaultValue$map5 = getDefaultValue(operation, [function () {
    return /* @__PURE__ */React.createElement(ChevronRightIcon, null);
  }, function () {
    return /* @__PURE__ */React.createElement(ChevronLeftIcon, null);
  }]).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map6 = _slicedToArray(_getDefaultValue$map5, 2),
      leftOperation = _getDefaultValue$map6[0],
      rightOperation = _getDefaultValue$map6[1];

  var _getDefaultValue$map7 = getDefaultValue(footer).map(function (item) {
    return getJSX(item);
  }),
      _getDefaultValue$map8 = _slicedToArray(_getDefaultValue$map7, 2),
      sourceFooter = _getDefaultValue$map8[0],
      targetFooter = _getDefaultValue$map8[1];

  var _getDefaultValue5 = getDefaultValue(transferItem),
      _getDefaultValue6 = _slicedToArray(_getDefaultValue5, 2),
      sourceTransferItem = _getDefaultValue6[0],
      targetTransferItem = _getDefaultValue6[1];

  var _getDefaultValue7 = getDefaultValue(content),
      _getDefaultValue8 = _slicedToArray(_getDefaultValue7, 2),
      sourceContent = _getDefaultValue8[0],
      targetContent = _getDefaultValue8[1];

  var transfromSource = function transfromSource() {
    var source = state.source,
        target = state.target;
    var sourceCheckeds = source.filter(function (item) {
      return checkeds.source.includes(item.value);
    });
    var newSoure = difference_1(source, sourceCheckeds);
    var newTarget = [].concat(_toConsumableArray(target), _toConsumableArray(sourceCheckeds));

    if (isTargetControled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTarget.map(function (t) {
        return t.value;
      }), {
        type: "source",
        movedValue: sourceCheckeds.map(function (s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread(_objectSpread({}, state), {}, {
        source: newSoure,
        target: _toConsumableArray(newTarget)
      }));
      setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, {
        source: []
      }));
    }
  };

  var transfromTarget = function transfromTarget() {
    var source = state.source,
        target = state.target;
    var targetCheckeds = target.filter(function (item) {
      return checkeds.target.includes(item.value);
    });
    var newTarget = difference_1(target, targetCheckeds);

    if (isTargetControled) {
      onChange === null || onChange === void 0 ? void 0 : onChange(newTarget.map(function (t) {
        return t.value;
      }), {
        type: "target",
        movedValue: targetCheckeds.map(function (s) {
          return s.value;
        })
      });
    } else {
      setState(_objectSpread(_objectSpread({}, state), {}, {
        source: [].concat(_toConsumableArray(source), _toConsumableArray(targetCheckeds)),
        target: newTarget
      }));
      setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, {
        target: []
      }));
    }
  };

  var OperationsCmp = function OperationsCmp() {
    var isSourceDisabled = sourceDisable || !checkeds.source.length;
    var isTargetDisabled = targetDisable || !checkeds.target.length;
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(transferClassName, "__operations")
    }, /* @__PURE__ */React.createElement(Button, {
      key: isSourceDisabled ? "right-outline" : "right-base",
      variant: isSourceDisabled ? "outline" : "base",
      disabled: isSourceDisabled,
      onClick: transfromSource
    }, leftOperation), /* @__PURE__ */React.createElement(Button, {
      key: isSourceDisabled ? "left-outline" : "left-base",
      variant: isTargetDisabled ? "outline" : "base",
      disabled: isTargetDisabled,
      onClick: transfromTarget
    }, rightOperation));
  };

  var handleCheckChange = function handleCheckChange(value2, type) {
    var sourceChecked = checkeds.source,
        targetChecked = checkeds.target;
    var inverseMap = {
      source: "target",
      target: "source"
    };
    isCheckedControled ? onCheckedChange === null || onCheckedChange === void 0 ? void 0 : onCheckedChange({
      type: type,
      checked: value2.concat(checkeds[inverseMap[type]]),
      sourceChecked: sourceChecked,
      targetChecked: targetChecked
    }) : setCheckeds(_objectSpread(_objectSpread({}, checkeds), {}, _defineProperty({}, type, value2)));
  };

  useEffect(function () {
    if (isTargetControled && Array.isArray(value)) {
      var newTarget = data.filter(function (item) {
        return value.includes(item.value);
      });
      var newSource = difference_1(data, newTarget);
      setState({
        source: _toConsumableArray(newSource),
        target: _toConsumableArray(newTarget)
      });
      setCheckeds({
        source: [],
        target: []
      });
    }
  }, [value, data, isTargetControled]);
  useEffect(function () {
    var source = state.source,
        target = state.target;

    if (isCheckedControled && Array.isArray(checked)) {
      var newSourceChecked = source.filter(function (item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function (item) {
        return item.value;
      });
      var newTargetChecked = target.filter(function (item) {
        return !item.disabled && checked.includes(item.value);
      }).map(function (item) {
        return item.value;
      });
      setCheckeds({
        source: newSourceChecked,
        target: newTargetChecked
      });
    }
  }, [checked, state, isCheckedControled]);
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(transferClassName, (_classnames = {}, _defineProperty(_classnames, "".concat(transferClassName, "__search"), search), _defineProperty(_classnames, "".concat(transferClassName, "__pagination"), pagination), _defineProperty(_classnames, "".concat(transferClassName, "__footer"), footer), _classnames))
  }, /* @__PURE__ */React.createElement(TransferList, {
    className: "".concat(transferClassName, "__list-source"),
    data: sourceData,
    search: search,
    checked: checkeds.source,
    empty: SourceEmptyCmp,
    disabled: sourceDisable,
    pagination: sourcePagonation,
    title: sourceTitle,
    footer: sourceFooter,
    transferItem: sourceTransferItem,
    content: sourceContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "source");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {
        source: val
      }));
    }
  }), OperationsCmp(), /* @__PURE__ */React.createElement(TransferList, {
    className: "".concat(transferClassName, "__list-target"),
    data: targetData,
    search: search,
    checked: checkeds.target,
    empty: TargetEmptyCmp,
    disabled: targetDisable,
    pagination: targetPagonation,
    title: targetTitle,
    footer: targetFooter,
    transferItem: targetTransferItem,
    content: targetContent,
    onCheckbox: function onCheckbox(value2) {
      return handleCheckChange(value2, "target");
    },
    onSearch: function onSearch(val) {
      return setSearchState(_objectSpread(_objectSpread({}, searchState), {}, {
        target: val
      }));
    }
  }));
};

Transfer.displayName = "Transfer";

export { Transfer as default };
//# sourceMappingURL=Transfer.js.map
