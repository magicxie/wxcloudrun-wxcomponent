{"version":3,"file":"Transfer.js","sources":["../../src/transfer/Transfer.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport difference from 'lodash/difference';\nimport classnames from 'classnames';\n\nimport { ChevronRightIcon, ChevronLeftIcon } from 'tdesign-icons-react';\nimport { TdTransferProps, DataOption, TransferValue, TransferListType } from './type';\nimport useConfig from '../_util/useConfig';\nimport Button from '../button';\nimport TransferList from './TransferList';\nimport { getDefaultValue, getJSX } from './utils';\nimport { TNode, StyledProps } from '../common';\n\nexport interface TransferProps extends TdTransferProps, StyledProps {\n  content?: Array<TNode>;\n}\n\ninterface StateInterface {\n  source: DataOption[];\n  target: DataOption[];\n}\n\ninterface CheckedInterface {\n  source: Array<TransferValue>;\n  target: Array<TransferValue>;\n}\n\nconst Transfer: React.FunctionComponent<TransferProps> = (props) => {\n  const {\n    data = [],\n    search = false,\n    checked,\n    defaultChecked = [],\n    onCheckedChange,\n    value,\n    defaultValue = [],\n    onChange,\n    empty,\n    disabled = false,\n    pagination,\n    title,\n    operation,\n    footer,\n    transferItem,\n    content,\n  } = props;\n  const [state, setState] = useState<StateInterface>(() => ({\n    source: data.filter((item) => !defaultValue.includes(item.value)),\n    target: data.filter((item) => defaultValue.includes(item.value)),\n  }));\n  const [checkeds, setCheckeds] = useState<CheckedInterface>(() => ({\n    source: state.source\n      .filter((item) => !item.disabled && defaultChecked.includes(item.value))\n      .map((item) => item.value),\n    target: state.target\n      .filter((item) => !item.disabled && defaultChecked.includes(item.value))\n      .map((item) => item.value),\n  }));\n  const [searchState, setSearchState] = useState<{ source: string; target: string }>({ source: '', target: '' });\n\n  const isTargetControled = 'value' in props;\n  const isCheckedControled = 'checked' in props;\n\n  const { classPrefix } = useConfig();\n  const transferClassName = `${classPrefix}-transfer`;\n\n  const [sourceData, targetData] = useMemo(() => {\n    const { source, target } = state;\n    const { source: searchSource, target: searchTarget } = searchState;\n    return [\n      source.filter((item) => !searchSource || item.label.indexOf(searchState.source) > -1),\n      target.filter((item) => !searchTarget || item.label.indexOf(searchState.target) > -1),\n    ];\n  }, [searchState, state]);\n\n  const [SourceEmptyCmp, TargetEmptyCmp] = getDefaultValue(empty, '暂无数据').map((item) => getJSX(item));\n  const [sourceDisable, targetDisable] = getDefaultValue(disabled, false);\n  const [sourcePagonation, targetPagonation] = getDefaultValue(pagination);\n  const [sourceTitle, targetTitle] = getDefaultValue(title).map((item) => getJSX(item));\n  const [leftOperation, rightOperation] = getDefaultValue(operation, [\n    () => <ChevronRightIcon />,\n    () => <ChevronLeftIcon />,\n  ]).map((item) => getJSX(item));\n  const [sourceFooter, targetFooter] = getDefaultValue(footer).map((item) => getJSX(item));\n  const [sourceTransferItem, targetTransferItem] = getDefaultValue(transferItem);\n  const [sourceContent, targetContent] = getDefaultValue(content);\n\n  const transfromSource = () => {\n    const { source, target } = state;\n    const sourceCheckeds = source.filter((item) => checkeds.source.includes(item.value));\n    const newSoure = difference(source, sourceCheckeds);\n    const newTarget = [...target, ...sourceCheckeds];\n\n    if (isTargetControled) {\n      onChange?.(\n        newTarget.map((t) => t.value),\n        {\n          type: 'source',\n          movedValue: sourceCheckeds.map((s) => s.value),\n        },\n      );\n    } else {\n      setState({ ...state, source: newSoure, target: [...newTarget] });\n      setCheckeds({ ...checkeds, source: [] });\n    }\n  };\n  const transfromTarget = () => {\n    const { source, target } = state;\n    const targetCheckeds = target.filter((item) => checkeds.target.includes(item.value));\n    const newTarget = difference(target, targetCheckeds);\n\n    if (isTargetControled) {\n      onChange?.(\n        newTarget.map((t) => t.value),\n        {\n          type: 'target',\n          movedValue: targetCheckeds.map((s) => s.value),\n        },\n      );\n    } else {\n      setState({ ...state, source: [...source, ...targetCheckeds], target: newTarget });\n      setCheckeds({ ...checkeds, target: [] });\n    }\n  };\n\n  const OperationsCmp = () => {\n    const isSourceDisabled = sourceDisable || !checkeds.source.length;\n    const isTargetDisabled = targetDisable || !checkeds.target.length;\n\n    return (\n      <div className={`${transferClassName}__operations`}>\n        <Button\n          key={isSourceDisabled ? 'right-outline' : 'right-base'}\n          variant={isSourceDisabled ? 'outline' : 'base'}\n          disabled={isSourceDisabled}\n          onClick={transfromSource}\n        >\n          {leftOperation}\n        </Button>\n        <Button\n          key={isSourceDisabled ? 'left-outline' : 'left-base'}\n          variant={isTargetDisabled ? 'outline' : 'base'}\n          disabled={isTargetDisabled}\n          onClick={transfromTarget}\n        >\n          {rightOperation}\n        </Button>\n      </div>\n    );\n  };\n\n  const handleCheckChange = (value: Array<TransferValue>, type: TransferListType) => {\n    const { source: sourceChecked, target: targetChecked } = checkeds;\n    const inverseMap = { source: 'target', target: 'source' };\n\n    isCheckedControled\n      ? onCheckedChange?.({\n          type,\n          checked: value.concat(checkeds[inverseMap[type]]),\n          sourceChecked,\n          targetChecked,\n        })\n      : setCheckeds({ ...checkeds, [type]: value });\n  };\n\n  // value 受控\n  useEffect(() => {\n    if (isTargetControled && Array.isArray(value)) {\n      const newTarget = data.filter((item) => value.includes(item.value));\n      const newSource = difference(data, newTarget);\n      setState({ source: [...newSource], target: [...newTarget] });\n      setCheckeds({ source: [], target: [] });\n    }\n  }, [value, data, isTargetControled]);\n\n  // checked 受控\n  useEffect(() => {\n    const { source, target } = state;\n    if (isCheckedControled && Array.isArray(checked)) {\n      const newSourceChecked = source\n        .filter((item) => !item.disabled && checked.includes(item.value))\n        .map((item) => item.value);\n      const newTargetChecked = target\n        .filter((item) => !item.disabled && checked.includes(item.value))\n        .map((item) => item.value);\n      setCheckeds({ source: newSourceChecked, target: newTargetChecked });\n    }\n  }, [checked, state, isCheckedControled]);\n\n  return (\n    <div\n      className={classnames(transferClassName, {\n        [`${transferClassName}__search`]: search,\n        [`${transferClassName}__pagination`]: pagination,\n        [`${transferClassName}__footer`]: footer,\n      })}\n    >\n      <TransferList\n        className={`${transferClassName}__list-source`}\n        data={sourceData}\n        search={search}\n        checked={checkeds.source}\n        empty={SourceEmptyCmp}\n        disabled={sourceDisable}\n        pagination={sourcePagonation}\n        title={sourceTitle}\n        footer={sourceFooter}\n        transferItem={sourceTransferItem}\n        content={sourceContent}\n        onCheckbox={(value) => handleCheckChange(value, 'source')}\n        onSearch={(val: string) => setSearchState({ ...searchState, source: val })}\n      ></TransferList>\n      {OperationsCmp()}\n      <TransferList\n        className={`${transferClassName}__list-target`}\n        data={targetData}\n        search={search}\n        checked={checkeds.target}\n        empty={TargetEmptyCmp}\n        disabled={targetDisable}\n        pagination={targetPagonation}\n        title={targetTitle}\n        footer={targetFooter}\n        transferItem={targetTransferItem}\n        content={targetContent}\n        onCheckbox={(value) => handleCheckChange(value, 'target')}\n        onSearch={(val: string) => setSearchState({ ...searchState, target: val })}\n      ></TransferList>\n    </div>\n  );\n};\n\nTransfer.displayName = 'Transfer';\n\nexport default Transfer;\n"],"names":["Transfer","props","data","search","checked","defaultChecked","onCheckedChange","value","defaultValue","onChange","empty","disabled","pagination","title","operation","footer","transferItem","content","useState","source","filter","item","includes","target","state","setState","map","checkeds","setCheckeds","searchState","setSearchState","isTargetControled","isCheckedControled","useConfig","classPrefix","transferClassName","useMemo","searchSource","searchTarget","label","indexOf","sourceData","targetData","getDefaultValue","getJSX","SourceEmptyCmp","TargetEmptyCmp","sourceDisable","targetDisable","sourcePagonation","targetPagonation","sourceTitle","targetTitle","React","createElement","ChevronRightIcon","ChevronLeftIcon","leftOperation","rightOperation","sourceFooter","targetFooter","sourceTransferItem","targetTransferItem","sourceContent","targetContent","transfromSource","sourceCheckeds","newSoure","difference","newTarget","t","type","movedValue","s","transfromTarget","targetCheckeds","OperationsCmp","isSourceDisabled","length","isTargetDisabled","className","Button","key","variant","onClick","handleCheckChange","value2","sourceChecked","targetChecked","inverseMap","concat","useEffect","Array","isArray","newSource","newSourceChecked","newTargetChecked","classnames","TransferList","onCheckbox","onSearch","val","displayName"],"mappings":"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"}