/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import React, { useCallback } from 'react';
import classNames from 'classnames';
import { ErrorCircleFilledIcon, CloseCircleFilledIcon } from 'tdesign-icons-react';
import { Loading } from '../../loading/index.js';
import useConfig from '../../_util/useConfig.js';
import '../../loading/loading.js';
import '../../_chunks/dep-9332bbea.js';
import '../../_chunks/dep-93971e86.js';
import '../../_chunks/dep-beac373a.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-3853103d.js';
import '../../_chunks/dep-ab1e2688.js';
import '../../_chunks/dep-aa2bff1b.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-897ce04d.js';
import '../../_chunks/dep-2eff142e.js';
import '../../_chunks/dep-312619d6.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../loading/style/index.js';
import '../../loading/type.js';
import '../../loading/plugin.js';

var SingleFile = function SingleFile(props) {
  var _props$display = props.display,
      display = _props$display === void 0 ? "file" : _props$display,
      onRemove = props.onRemove,
      file = props.file,
      showUploadProgress = props.showUploadProgress;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var fileClass = classNames("".concat(classPrefix, "-upload__single"), "".concat(classPrefix, "-upload__single-").concat(display));
  var showProgress = showUploadProgress && file && file.status !== "success";
  var inputName = file === null || file === void 0 ? void 0 : file.name;
  var handleRemove = useCallback(function (e) {
    onRemove === null || onRemove === void 0 ? void 0 : onRemove({
      e: e,
      file: file,
      index: 0
    });
  }, [file, onRemove]);
  var renderProgress = useCallback(function () {
    if ((file === null || file === void 0 ? void 0 : file.status) === "fail") {
      return /* @__PURE__ */React.createElement(ErrorCircleFilledIcon, null);
    }

    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__single-progress")
    }, /* @__PURE__ */React.createElement(Loading, {
      loading: true,
      size: "small"
    }), /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-upload__single-percent")
    }, Math.min((file === null || file === void 0 ? void 0 : file.percent) || 0, 99), "%"));
  }, [classPrefix, file]);
  var renderFilePreviewAsText = useCallback(function () {
    if (!inputName) return;
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__single-display-text ").concat(classPrefix, "-upload__display-text--margin")
    }, /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-upload__single-name")
    }, inputName), showProgress ? renderProgress() : /* @__PURE__ */React.createElement(CloseCircleFilledIcon, {
      className: "".concat(classPrefix, "-upload__icon-delete"),
      onClick: handleRemove
    }));
  }, [classPrefix, inputName, renderProgress, showProgress, handleRemove]);
  return /* @__PURE__ */React.createElement("div", {
    className: fileClass
  }, props.children, display === "file" && renderFilePreviewAsText());
};

export { SingleFile as default };
//# sourceMappingURL=single-file.js.map
