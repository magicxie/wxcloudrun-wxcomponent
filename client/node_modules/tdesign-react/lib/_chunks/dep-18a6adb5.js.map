{"version":3,"file":"dep-18a6adb5.js","sources":["../../src/checkbox/CheckboxGroup.tsx","../../src/checkbox/Checkbox.tsx"],"sourcesContent":["import React, { ReactElement, useEffect, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport isNumber from 'lodash/isNumber';\nimport useConfig from '../_util/useConfig';\nimport { CheckContext, CheckContextValue } from '../common/Check';\nimport { CheckboxOption, CheckboxOptionObj, TdCheckboxGroupProps } from './type';\nimport { StyledProps } from '../common';\nimport useDefault from '../_util/useDefault';\nimport Checkbox from './Checkbox';\n\nexport interface CheckboxGroupProps extends TdCheckboxGroupProps, StyledProps {\n  children?: React.ReactNode;\n}\n\n// 将 checkBox 的 value 转换为 string|number\nconst getCheckboxValue = (v: CheckboxOption): string | number => {\n  switch (typeof v) {\n    case 'number' || 'string':\n      return v as string | number;\n    case 'object': {\n      const vs = v as CheckboxOptionObj;\n      return vs.value;\n    }\n    default:\n      return undefined;\n  }\n};\n\n/**\n * 多选选项组，里面可以嵌套 <Checkbox />\n */\nexport function CheckboxGroup(props: CheckboxGroupProps) {\n  const { classPrefix } = useConfig();\n  const { value, defaultValue, onChange, disabled, className, style, children, max, options = [] } = props;\n\n  // 去掉所有 checkAll 之后的 options\n  const intervalOptions =\n    Array.isArray(options) && options.length > 0\n      ? options\n      : React.Children.map(children, (child) => (child as ReactElement).props);\n\n  const optionsWithoutCheckAll = intervalOptions.filter((t) => typeof t !== 'object' || !t.checkAll);\n  const optionsWithoutCheckAllValues = [];\n  optionsWithoutCheckAll.forEach((v) => {\n    const vs = getCheckboxValue(v);\n    optionsWithoutCheckAllValues.push(vs);\n  });\n\n  const [internalValue, setInternalValue] = useDefault(value, defaultValue, onChange);\n  const [localMax, setLocalMax] = useState(max);\n\n  const checkedSet = useMemo(() => {\n    if (!Array.isArray(internalValue)) return new Set([]);\n    return new Set([].concat(internalValue));\n  }, [internalValue]);\n\n  // 用于决定全选状态的属性\n  const indeterminate = useMemo(() => {\n    const list = Array.from(checkedSet);\n    return list.length !== 0 && list.length !== optionsWithoutCheckAll.length;\n  }, [checkedSet, optionsWithoutCheckAll]);\n\n  const checkAllChecked = useMemo(() => {\n    const list = Array.from(checkedSet);\n    return list.length === optionsWithoutCheckAll.length;\n  }, [checkedSet, optionsWithoutCheckAll]);\n\n  useEffect(() => {\n    if (!isNumber(max)) return;\n    if (max < checkedSet.size) {\n      console.warn('[TDesign] max should be less than the length of value, change is invalid');\n    } else {\n      setLocalMax(max);\n    }\n  }, [max, checkedSet]);\n\n  const context: CheckContextValue = {\n    inject: (checkProps) => {\n      // 如果已经受控，则不注入\n      if (typeof checkProps.checked !== 'undefined') {\n        return checkProps;\n      }\n\n      const { value: checkValue } = checkProps;\n\n      return {\n        ...checkProps,\n        checked: checkProps.checkAll ? checkAllChecked : checkedSet.has(checkValue),\n        indeterminate: checkProps.checkAll ? indeterminate : checkProps.indeterminate,\n        disabled: checkProps.disabled || disabled || (checkedSet.size >= localMax && !checkedSet.has(checkValue)),\n        onChange(checked, { e }) {\n          if (typeof checkProps.onChange === 'function') {\n            checkProps.onChange(checked, { e });\n          }\n\n          // 全选时的逻辑处理\n          if (checkProps.checkAll) {\n            checkedSet.clear();\n            if (checked) {\n              optionsWithoutCheckAllValues.forEach((v) => {\n                checkedSet.add(v);\n              });\n            }\n          } else if (checked) {\n            if (checkedSet.size >= localMax && isNumber(max)) return;\n            checkedSet.add(checkValue);\n          } else {\n            checkedSet.delete(checkValue);\n          }\n\n          setInternalValue(Array.from(checkedSet), { e });\n        },\n      };\n    },\n  };\n\n  // options 和 children 的抉择,在未明确说明时，暂时以 options 优先\n  const useOptions = Array.isArray(options) && options.length !== 0;\n\n  return (\n    <div className={classNames(`${classPrefix}-checkbox-group`, className)} style={style}>\n      <CheckContext.Provider value={context}>\n        {useOptions\n          ? options.map((v, index) => {\n              const type = typeof v;\n              switch (type) {\n                case 'number' || 'string': {\n                  const vs = v as number | string;\n                  return (\n                    <Checkbox key={vs} label={vs} value={vs}>\n                      {v}\n                    </Checkbox>\n                  );\n                }\n                case 'object': {\n                  const vs = v as CheckboxOptionObj;\n                  // CheckAll 的 checkBox 不存在 value,故用 checkAll_index 来保证尽量不和用户的 value 冲突.\n                  return vs.checkAll ? (\n                    <Checkbox {...v} key={`checkAll_${index}`} indeterminate={indeterminate} />\n                  ) : (\n                    <Checkbox {...v} key={vs.value} disabled={vs.disabled || disabled} />\n                  );\n                }\n                default:\n                  return null;\n              }\n            })\n          : children}\n      </CheckContext.Provider>\n    </div>\n  );\n}\n","import React, { Ref } from 'react';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport Check, { CheckProps } from '../common/Check';\nimport { CheckboxGroup } from './CheckboxGroup';\n\nexport type CheckboxProps = Omit<CheckProps, 'type'>;\n\nconst Checkbox = forwardRefWithStatics(\n  (props: CheckboxProps, ref: Ref<HTMLLabelElement>) => <Check ref={ref} type=\"checkbox\" {...props} />,\n  { Group: CheckboxGroup },\n);\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n"],"names":["getCheckboxValue","v","vs","value","CheckboxGroup","props","useConfig","classPrefix","defaultValue","onChange","disabled","className","style","children","max","options","intervalOptions","Array","isArray","length","React","Children","map","child","optionsWithoutCheckAll","filter","t","checkAll","optionsWithoutCheckAllValues","forEach","push","useDefault","internalValue","setInternalValue","useState","localMax","setLocalMax","checkedSet","useMemo","Set","concat","indeterminate","list","from","checkAllChecked","useEffect","isNumber","size","console","warn","context","inject","checkProps","checked","checkValue","has","e","clear","add","useOptions","createElement","classNames","CheckContext","Provider","index","type","Checkbox","key","label","forwardRefWithStatics","ref","Check","Group","displayName"],"mappings":"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"}