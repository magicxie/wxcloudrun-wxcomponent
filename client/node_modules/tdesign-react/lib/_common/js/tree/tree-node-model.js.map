{"version":3,"file":"tree-node-model.js","sources":["../../../../node_modules/lodash/_baseSet.js","../../../../node_modules/lodash/_basePickBy.js","../../../../node_modules/lodash/_basePick.js","../../../../node_modules/lodash/pick.js","../../../../src/_common/js/tree/tree-node-model.ts"],"sourcesContent":["var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","import pick from 'lodash/pick';\nimport { TreeNode } from './tree-node';\nimport { OptionData } from '../common';\nimport {\n  TreeNodeValue,\n  TypeTreeNodeModel,\n  TypeTreeNodeData,\n  TypeTreeItem,\n  TreeNodeModelProps,\n} from './types';\n\n// 获取节点需要暴露的属性\nfunction getExposedProps(node: TreeNode): TreeNodeModelProps {\n  const props = pick(node, [\n    'value',\n    'label',\n    'data',\n    'actived',\n    'expanded',\n    'checked',\n    'indeterminate',\n    'loading',\n  ]) as TreeNodeModelProps;\n  return props;\n}\n\n// 封装对外暴露的对象\nexport function createNodeModel(node: TreeNode): TypeTreeNodeModel {\n  const props = getExposedProps(node);\n\n  const model: TypeTreeNodeModel = {\n    ...props,\n\n    // 获取节点所处层级\n    getLevel() {\n      return node.getLevel();\n    },\n\n    // 获取节点在 children 中的位置\n    getIndex() {\n      return node.getIndex();\n    },\n\n    // 判断节点是否为 children 中的第一个节点\n    isFirst() {\n      return node.isFirst();\n    },\n\n    // 判断节点是否为 children 中的最后一个节点\n    isLast() {\n      return node.isLast();\n    },\n\n    // 判断节点是否为叶节点\n    isLeaf() {\n      return node.isLeaf();\n    },\n\n    // 插入数据到节点之前\n    insertBefore(newData: TypeTreeItem) {\n      return node.insertBefore(newData);\n    },\n\n    // 插入数据到节点之后\n    insertAfter(newData: TypeTreeItem) {\n      return node.insertAfter(newData);\n    },\n\n    // 给当前节点添加子节点数据\n    appendData(data: TypeTreeNodeData | TypeTreeNodeData[]) {\n      return node.append(data);\n    },\n\n    // 返回路径节点数据集合\n    getPath(): TypeTreeNodeModel[] {\n      const nodes = node.getPath();\n      return nodes.map((item: TreeNode) => item.getModel());\n    },\n\n    // 获取单个父节点数据\n    getParent(): TypeTreeNodeModel {\n      return node.parent?.getModel();\n    },\n\n    // 获取所有父节点数据\n    getParents(): TypeTreeNodeModel[] {\n      const nodes = node.getParents();\n      return nodes.map((item: TreeNode) => item.getModel());\n    },\n\n    // 获取根节点\n    getRoot(): TypeTreeNodeModel {\n      const root = node.getRoot();\n      return root?.getModel();\n    },\n\n    // 获取兄弟节点，包含自己在内\n    getSiblings(): TypeTreeNodeModel[] {\n      const nodes = node.getSiblings();\n      return nodes.map((item: TreeNode) => item.getModel());\n    },\n\n    // 返回当前节点的第一层子节点数据集合\n    getChildren(deep?: boolean): boolean | TypeTreeNodeModel[] {\n      let childrenModel: boolean | TypeTreeNodeModel[] = false;\n      const { children } = node;\n      if (Array.isArray(children)) {\n        if (children.length > 0) {\n          if (deep) {\n            const nodes = node.walk();\n            nodes.shift();\n            childrenModel = nodes.map((item) => item.getModel());\n          } else {\n            childrenModel = children.map((item) => item.getModel());\n          }\n        } else {\n          childrenModel = false;\n        }\n      } else if (typeof children === 'boolean') {\n        childrenModel = children;\n      }\n      return childrenModel;\n    },\n\n    // 删除本节点，或者 value 指定的子节点\n    remove(value?: TreeNodeValue) {\n      if (!value) {\n        node.remove();\n        return;\n      }\n\n      const { tree } = node;\n      const targetNode = tree.getNode(value);\n      if (!targetNode) {\n        // eslint-disable-next-line no-console\n        console.warn(`TDesign Tree Warn: \\`${value}\\` is not exist`);\n        return;\n      }\n\n      const parents = targetNode.getParents();\n      const parentValues = parents.map((pnode) => (pnode.value));\n      if (parentValues.indexOf(node.value) < 0) {\n        // eslint-disable-next-line no-console\n        console.warn(`TDesign Tree Warn: \\`${value}\\` is not a childNode of current node`);\n        return;\n      }\n      targetNode.remove();\n    },\n\n    // 设置本节点携带的元数据\n    setData(data: OptionData) {\n      Object.assign(node.data, data);\n    },\n  };\n\n  return model;\n}\n\n// 更新封装对象\nexport function updateNodeModel(model: TypeTreeNodeModel, node: TreeNode) {\n  // 同步节点属性\n  const props = getExposedProps(node);\n  Object.assign(model, props);\n}\n"],"names":["assignValue","require$$0","castPath","require$$1","isIndex","require$$2","isObject","require$$3","toKey","require$$4","baseSet","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined","_baseSet","baseGet","basePickBy","paths","predicate","result","_basePickBy","hasIn","basePick","_basePick","flatRest","pick","pick_1","getExposedProps","node","props","createNodeModel","model","getLevel","getIndex","isFirst","isLast","isLeaf","insertBefore","newData","insertAfter","appendData","data","append","getPath","nodes","map","item","getModel","getParent","parent","getParents","getRoot","root","getSiblings","getChildren","deep","childrenModel","children","Array","isArray","walk","shift","remove","tree","targetNode","getNode","console","warn","parents","parentValues","pnode","indexOf","setData","Object","assign","updateNodeModel"],"mappings":"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"}