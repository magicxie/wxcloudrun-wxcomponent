/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import React, { useMemo } from 'react';
import classNames from 'classnames';
import useConfig from '../../_util/useConfig.js';
import { getPanels, expendClickEffect, valueChangeEffect } from '../utils/panel.js';
import Item from './Item.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-93971e86.js';
import '../../_chunks/dep-beac373a.js';
import '../../_chunks/dep-e2a4740c.js';
import '../../_chunks/dep-c6576f8f.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-6ca758b4.js';
import 'tdesign-icons-react';
import '../../_util/useCommonClassName.js';
import '../../_util/useRipple.js';
import '../../_util/setStyle.js';
import '../utils/item.js';
import '../../_chunks/dep-124f91c5.js';
import '../utils/helper.js';
import '../../loading/index.js';
import '../../loading/loading.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-f3f6eedc.js';
import '../../_chunks/dep-04305406.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../loading/plugin.js';
import '../../tooltip/Tooltip.js';
import '../../_chunks/dep-27d690ce.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../_util/useDefault.js';
import '../../_util/noop.js';
import '../../_util/composeRefs.js';
import '../../_util/usePrevious.js';
import '../../popup/Portal.js';
import '../../popup/hooks/useTriggerProps.js';
import '../../_util/useClickOutside.js';
import '../../popup/hooks/usePopupCssTransition.js';
import '../../_chunks/dep-18a6adb5.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_util/helper.js';
import '../../_chunks/dep-5913685b.js';
import '../../_chunks/dep-76c67131.js';
import '../../_chunks/dep-7cf92957.js';
import '../../_chunks/dep-e7eff919.js';
import '../../_chunks/dep-3dccad86.js';

var Panel = function Panel(props) {
  var _props$cascaderContex = props.cascaderContext,
      filterActive = _props$cascaderContex.filterActive,
      treeNodes = _props$cascaderContex.treeNodes,
      inputWidth = _props$cascaderContex.inputWidth,
      cascaderContext = props.cascaderContext,
      empty = props.empty;
  var panels = useMemo(function () {
    return getPanels(treeNodes);
  }, [treeNodes]);

  var handleExpand = function handleExpand(ctx, trigger) {
    var node = ctx.node;
    var propsTrigger = props.trigger,
        cascaderContext2 = props.cascaderContext;
    expendClickEffect(propsTrigger, trigger, node, cascaderContext2);
  };

  var handleChange = function handleChange(ctx) {
    var node = ctx.node;
    valueChangeEffect(node, cascaderContext);
  };

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var name = "".concat(classPrefix, "-cascader");
  var renderEmpty = /* @__PURE__ */React.createElement("div", {
    className: "".concat(name, "__panel--empty")
  }, empty);

  var renderItem = function renderItem(node) {
    return /* @__PURE__ */React.createElement(Item, {
      key: node.value,
      node: node,
      cascaderContext: cascaderContext,
      onClick: function onClick(ctx) {
        handleExpand(ctx, "click");
      },
      onMouseEnter: function onMouseEnter(ctx) {
        handleExpand(ctx, "hover");
      },
      onChange: handleChange
    });
  };

  var panelsContainer = panels.map(function (panel, index) {
    return /* @__PURE__ */React.createElement("ul", {
      className: classNames("".concat(name, "__menu"), "narrow-scrollbar", _defineProperty({}, "".concat(name, "__menu--segment"), index !== panels.length - 1)),
      key: index
    }, panel.map(function (node) {
      return renderItem(node);
    }));
  });
  var filterPanelsContainer = /* @__PURE__ */React.createElement("ul", {
    className: classNames("".concat(name, "__menu"), "narrow-scrollbar", "".concat(name, "__menu--segment"), "".concat(name, "__menu--filter"))
  }, treeNodes.map(function (node) {
    return renderItem(node);
  }));
  var renderPanels = filterActive ? filterPanelsContainer : panelsContainer;
  return /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(name, "__panel"), _defineProperty({}, "".concat(name, "--normal"), panels.length)),
    style: {
      width: panels.length === 0 ? "".concat(inputWidth, "px") : null
    }
  }, panels && panels.length ? renderPanels : renderEmpty);
};

export { Panel as default };
//# sourceMappingURL=Panel.js.map
