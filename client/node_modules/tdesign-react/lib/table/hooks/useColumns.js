/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import { _ as _toConsumableArray } from '../../_chunks/dep-124f91c5.js';
import { useMemo } from 'react';
import '../../_chunks/dep-beac373a.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function flattenColumns(columns) {
  var result = [];
  columns.forEach(function (column) {
    var children = column.children;

    if (children !== null && children !== void 0 && children.length) {
      result.push.apply(result, _toConsumableArray(flattenColumns(children)));
    } else {
      result.push(_objectSpread({}, column));
    }
  });
  return result;
}

function useColumns(props) {
  var _props$columns = props.columns,
      columns = _props$columns === void 0 ? [] : _props$columns;
  var flattenedColumns = useMemo(function () {
    return flattenColumns(columns);
  }, [columns]);
  return [columns, flattenedColumns];
}

export { useColumns };
//# sourceMappingURL=useColumns.js.map
