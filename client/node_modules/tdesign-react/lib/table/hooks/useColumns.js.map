{"version":3,"file":"useColumns.js","sources":["../../../src/table/hooks/useColumns.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { BaseTableCol, DataType } from '../type';\n\nfunction flattenColumns(columns: BaseTableCol[]): BaseTableCol[] {\n  const result: Array<BaseTableCol> = [];\n  columns.forEach((column: BaseTableCol) => {\n    const { children } = column;\n    if (children?.length) {\n      result.push(...flattenColumns(children));\n    } else {\n      result.push({\n        ...column,\n      });\n    }\n  });\n  return result;\n}\n\nexport function useColumns<RowData extends DataType = DataType>(props: { columns?: BaseTableCol<RowData>[] }) {\n  const { columns = [] } = props;\n  const flattenedColumns = useMemo(() => flattenColumns(columns), [columns]);\n\n  return [columns, flattenedColumns];\n}\n"],"names":["flattenColumns","columns","result","forEach","column","children","length","push","useColumns","props","flattenedColumns","useMemo"],"mappings":";;;;;;;;;;;;;;;AACA,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,MAAMC,MAAM,GAAG,EAAf;AACAD,EAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,MAAD,EAAY;AAC1B,QAAQC,QAAR,GAAqBD,MAArB,CAAQC,QAAR;;AACA,QAAIA,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEC,MAAd,EAAsB;AACpBJ,MAAAA,MAAM,CAACK,IAAP,OAAAL,MAAM,qBAASF,cAAc,CAACK,QAAD,CAAvB,EAAN;AACD,KAFD,MAEO;AACLH,MAAAA,MAAM,CAACK,IAAP,mBACKH,MADL;AAGD;AACF,GATD;AAUA,SAAOF,MAAP;AACD;;AACM,SAASM,UAAT,CAAoBC,KAApB,EAA2B;AAChC,uBAAyBA,KAAzB,CAAQR,OAAR;AAAA,MAAQA,OAAR,+BAAkB,EAAlB;AACA,MAAMS,gBAAgB,GAAGC,OAAO,CAAC;AAAA,WAAMX,cAAc,CAACC,OAAD,CAApB;AAAA,GAAD,EAAgC,CAACA,OAAD,CAAhC,CAAhC;AACA,SAAO,CAACA,OAAD,EAAUS,gBAAV,CAAP;AACD;;;;"}