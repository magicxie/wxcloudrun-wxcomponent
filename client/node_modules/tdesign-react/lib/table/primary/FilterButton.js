/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import { _ as _slicedToArray } from '../../_chunks/dep-93971e86.js';
import React, { useContext, useState, useEffect } from 'react';
import classNames from 'classnames';
import { i as isFunction_1 } from '../../_chunks/dep-a347fb20.js';
import { i as isString_1 } from '../../_chunks/dep-f3f6eedc.js';
import { FilterIcon } from 'tdesign-icons-react';
import { Popup } from '../../popup/index.js';
import { Radio } from '../../radio/index.js';
import { Checkbox } from '../../checkbox/index.js';
import { Input } from '../../input/index.js';
import ConfigContext from '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-beac373a.js';
import '../../_chunks/dep-c6576f8f.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-b33ecffe.js';
import '../../_chunks/dep-04305406.js';
import '../../_chunks/dep-6ca758b4.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import 'react-popper';
import '../../_util/useDefault.js';
import '../../_util/noop.js';
import '../../_util/useConfig.js';
import '../../locale/zh_CN.js';
import '../../_util/composeRefs.js';
import '../../_util/usePrevious.js';
import '../../popup/Portal.js';
import 'react-dom';
import '../../popup/hooks/useTriggerProps.js';
import '../../_util/useClickOutside.js';
import '../../popup/hooks/usePopupCssTransition.js';
import '../../_chunks/dep-8610b562.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../common/Check.js';
import '../../_chunks/dep-27d690ce.js';
import '../../_util/helper.js';
import '../../_chunks/dep-5913685b.js';
import '../../_chunks/dep-76c67131.js';
import '../../_chunks/dep-7cf92957.js';
import '../../_chunks/dep-e7eff919.js';
import '../../_chunks/dep-3dccad86.js';
import '../../_util/useCommonClassName.js';
import '../../_chunks/dep-18a6adb5.js';
import '../../_chunks/dep-e2a4740c.js';
import '../../input/Input.js';
import '../../input/InputGroup.js';
import '../../_util/useDefaultValue.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var renderIcon = function renderIcon(classPrefix, icon) {
  var result = null;
  if (icon) result = icon;
  if (typeof icon === "function") result = icon();

  if (result) {
    result = /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-table__filter-icon")
    }, result);
  } else {
    result = /* @__PURE__ */React.createElement(FilterIcon, {
      className: "".concat(classPrefix, "-table__filter-icon")
    });
  }

  return result;
};

function getTitle(column, colIndex) {
  var result = null;

  if (isFunction_1(column.title)) {
    result = column.title({
      col: column,
      colIndex: colIndex
    });
  } else if (isString_1(column.title)) {
    result = column.title;
  }

  return result;
}

function FilterButton(props) {
  var onChange = props.onChange,
      filterIcon = props.filterIcon,
      innerfiltVal = props.innerfiltVal,
      columns = props.columns;

  var _useContext = useContext(ConfigContext),
      classPrefix = _useContext.classPrefix;

  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      filterVal = _useState2[0],
      setfilterVal = _useState2[1];

  var getFilterContent = function getFilterContent(filter, colKey, column) {
    var types = ["single", "multiple", "input"];

    if (filter.type && !types.includes(filter.type)) {
      console.error("column.type must be the following: ".concat(JSON.stringify(types)));
      return;
    }

    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-table__filter-pop-content-inner")
    }, /* @__PURE__ */React.createElement(React.Fragment, null, filter.type === "multiple" ? /* @__PURE__ */React.createElement(Checkbox.Group, {
      value: (filterVal === null || filterVal === void 0 ? void 0 : filterVal[colKey]) || [],
      defaultValue: [],
      onChange: function onChange(value) {
        onChangeFilter(value, colKey, column);
      }
    }, filter === null || filter === void 0 ? void 0 : filter.list.map(function (_ref) {
      var label = _ref.label,
          value = _ref.value;
      return /* @__PURE__ */React.createElement(Checkbox, {
        key: value,
        value: value
      }, label);
    })) : null, filter.type === "single" ? /* @__PURE__ */React.createElement(Radio.Group, {
      size: "large",
      value: (filterVal === null || filterVal === void 0 ? void 0 : filterVal[colKey]) || "",
      onChange: function onChange(value) {
        onChangeFilter(value, colKey, column);
      }
    }, filter === null || filter === void 0 ? void 0 : filter.list.map(function (_ref2) {
      var label = _ref2.label,
          value = _ref2.value;
      return /* @__PURE__ */React.createElement(Radio, {
        key: value,
        value: value
      }, label);
    })) : null, filter.type === "input" ? /* @__PURE__ */React.createElement(Input, {
      placeholder: "\u8BF7\u8F93\u5165\u5185\u5BB9\uFF08\u65E0\u9ED8\u8BA4\u503C\uFF09",
      clearable: true,
      value: (filterVal === null || filterVal === void 0 ? void 0 : filterVal[colKey]) || "",
      onChange: function onChange(value) {
        onChangeFilter(value, colKey, column);
      }
    }) : null));
  };

  function onChangeFilter(value, colKey, column) {
    setfilterVal(_objectSpread(_objectSpread({}, filterVal), {}, _defineProperty({}, colKey, value)));
    onChange(_objectSpread(_objectSpread({}, filterVal), {}, _defineProperty({}, colKey, value)), column);
  }

  useEffect(function () {
    setfilterVal(innerfiltVal);
  }, [innerfiltVal]);
  return columns.map(function (column, index) {
    var filter = column.filter,
        colKey = column.colKey;

    if (!filter) {
      return column;
    }

    var lastTitle = getTitle(column, index);

    var titleNew = function titleNew() {
      return /* @__PURE__ */React.createElement("div", {
        className: "".concat(classPrefix, "-table__cell--title")
      }, /* @__PURE__ */React.createElement("div", null, lastTitle), /* @__PURE__ */React.createElement("div", {
        className: classNames(["".concat(classPrefix, "-table__cell--filter")])
      }, /* @__PURE__ */React.createElement(Popup, {
        trigger: "click",
        placement: "bottom",
        showArrow: true,
        overlayClassName: "".concat(classPrefix, "-table__filter-pop"),
        content: /* @__PURE__ */React.createElement("div", {
          className: "".concat(classPrefix, "-table__filter-pop-content")
        }, getFilterContent(filter, colKey, column))
      }, renderIcon(classPrefix, filterIcon))));
    };

    return _objectSpread(_objectSpread({}, column), {}, {
      title: titleNew
    });
  });
}

export { FilterButton as default };
//# sourceMappingURL=FilterButton.js.map
