/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-9332bbea.js';
import React, { useMemo } from 'react';
import dayjs from 'dayjs';
import SinglePanel from './SinglePanel.js';
import useConfig from '../../_util/useConfig.js';
import { Button } from '../../button/index.js';
import { useTimePickerTextConfig, DEFAULT_FORMAT, DEFAULT_STEPS } from '../consts.js';
import '../../_chunks/dep-93971e86.js';
import '../../_chunks/dep-beac373a.js';
import 'classnames';
import '../../_chunks/dep-e335ac07.js';
import '../../_chunks/dep-b33ecffe.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-c6576f8f.js';
import '../../_chunks/dep-fc84e5e6.js';
import '../../_chunks/dep-7cf92957.js';
import '../../_chunks/dep-6ca758b4.js';
import '../../_chunks/dep-4912e829.js';
import '../../_chunks/dep-76c67131.js';
import '../../_chunks/dep-04305406.js';
import '../../_chunks/dep-e7eff919.js';
import '../../_chunks/dep-3dccad86.js';
import '../../_chunks/dep-e7a51908.js';
import '../../_chunks/dep-61d30284.js';
import '../../_chunks/dep-5950eb93.js';
import '../../_chunks/dep-0268bf88.js';
import '../../_chunks/dep-aeb2fb38.js';
import '../../_chunks/dep-a347fb20.js';
import '../../_chunks/dep-17892822.js';
import '../../_chunks/dep-99f6ab64.js';
import '../../_util/noop.js';
import '../interfaces.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../button/Button.js';
import '../../_chunks/dep-27d690ce.js';
import '../../_util/useRipple.js';
import '../../_util/setStyle.js';
import '../../loading/index.js';
import '../../loading/loading.js';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-f3f6eedc.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../loading/plugin.js';
import '../../locale/LocalReceiver.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var TimePickerPanel = function TimePickerPanel(props) {
  var isFooterDisplay = props.isFooterDisplay,
      onChange = props.onChange,
      _props$format = props.format,
      format = _props$format === void 0 ? DEFAULT_FORMAT : _props$format,
      _props$steps = props.steps,
      steps = _props$steps === void 0 ? DEFAULT_STEPS : _props$steps,
      handleConfirmClick = props.handleConfirmClick,
      value = props.value;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var TEXT_CONFIG = useTimePickerTextConfig();
  var panelClassName = "".concat(classPrefix, "-time-picker__panel");
  var showNowTimeBtn = !!steps.filter(function (v) {
    return v > 1;
  }).length;
  var defaultValue = useMemo(function () {
    var isStepsSet = !!steps.filter(function (v) {
      return v > 1;
    }).length;

    if (value) {
      return dayjs(value, format);
    }

    if (isStepsSet) {
      return dayjs().hour(0).minute(0).second(0);
    }

    return dayjs();
  }, [value, format, steps]);
  return /* @__PURE__ */React.createElement("div", {
    className: panelClassName
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(panelClassName, "-section-body")
  }, /* @__PURE__ */React.createElement(SinglePanel, _objectSpread(_objectSpread({}, props), {}, {
    format: format,
    steps: steps,
    value: value
  }))), isFooterDisplay ? /* @__PURE__ */React.createElement("div", {
    className: "".concat(panelClassName, "-section-footer")
  }, /* @__PURE__ */React.createElement(Button, {
    theme: "primary",
    variant: "base",
    onClick: function onClick() {
      handleConfirmClick(defaultValue);
    }
  }, TEXT_CONFIG.confirm), !showNowTimeBtn ? /* @__PURE__ */React.createElement(Button, {
    theme: "primary",
    variant: "text",
    onClick: function onClick() {
      return onChange(dayjs().format(format));
    }
  }, TEXT_CONFIG.nowtime) : null) : null);
};

export { TimePickerPanel as default };
//# sourceMappingURL=TimePickerPanel.js.map
