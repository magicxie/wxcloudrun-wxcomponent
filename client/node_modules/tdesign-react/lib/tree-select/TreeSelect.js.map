{"version":3,"file":"TreeSelect.js","sources":["../../node_modules/lodash/isBoolean.js","../../src/tree-select/TreeSelect.tsx"],"sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nmodule.exports = isBoolean;\n","import React, { useState, useEffect, useCallback, useMemo, useRef, forwardRef } from 'react';\n\nimport isArray from 'lodash/isArray';\nimport isEmpty from 'lodash/isEmpty';\nimport isBoolean from 'lodash/isBoolean';\nimport isFunction from 'lodash/isFunction';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { TdTreeSelectProps, TreeSelectValue } from './type';\nimport { StyledProps, TreeOptionData } from '../common';\nimport useConfig from '../_util/useConfig';\nimport useDefault from '../_util/useDefault';\n\nimport Popup from '../popup';\nimport Tree, { TreeNodeModel, TreeNodeValue } from '../tree';\nimport TreeStore from '../_common/js/tree/tree-store';\n\nimport TreeSelectTags from './TreeSelectTags';\nimport TreeSelectInput from './TreeSelectInput';\nimport TreeSelectSuffix from './TreeSelectSuffix';\nimport useTreeSelectConfig from './useTreeSelectConfig';\n\nexport interface TreeSelectProps extends TdTreeSelectProps, StyledProps {}\n\nexport interface NodeOptions {\n  label: string;\n  value: string | number;\n}\n\nconst TreeSelect = forwardRef((props: TreeSelectProps, ref: React.Ref<HTMLDivElement>) => {\n  const {\n    className: treeSelectClassName,\n    style: treeSelectStyle,\n    disabled,\n    multiple,\n    prefixIcon,\n    valueType,\n    loading,\n    max,\n    treeProps,\n    empty,\n    data,\n    loadingText,\n    filter,\n    filterable,\n    onClear,\n  } = props;\n  const { classPrefix } = useConfig();\n\n  const popupRef = useRef(null);\n  const treeRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const [visible, setVisible] = useState(false);\n  const [isHover, setIsHover] = useState(false);\n  const [focusing, setFocusing] = useState(false);\n  const [filterText, setFilterText] = useState('');\n  const [actived, setActived] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [nodeInfo, setNodeInfo] = useState(null);\n\n  const [value, onChange] = useDefault(props.value, props.defaultValue, props.onChange);\n\n  const { selectClassName, popupObject, popupClassName } = useTreeSelectConfig({ visible, ...props });\n\n  // 初始化 Tree 组件未渲染需要提供默认的树形数据结构\n  const defaultStore = new TreeStore({ ...treeProps });\n  defaultStore.append(data);\n  const defaultGetTreeItem = (value: TreeNodeValue) => {\n    const node = defaultStore.getNode(value);\n    return node?.getModel();\n  };\n\n  const selectedMultiple: Array<TreeSelectValue> = useMemo(() => {\n    if (multiple && isArray(value) && !isEmpty(value)) {\n      return value;\n    }\n    return [];\n  }, [multiple, value]);\n\n  const selectedSingle: string = useMemo(() => {\n    if (multiple) return '';\n\n    if (typeof value === 'undefined') {\n      return nodeInfo ? nodeInfo.label : '';\n    }\n\n    return nodeInfo ? nodeInfo.label : `${value}`;\n  }, [multiple, value, nodeInfo]);\n\n  const checked: any = useMemo(() => {\n    if (multiple) {\n      if (valueType === 'object') {\n        return isArray(value) ? value.map((item) => (item as NodeOptions).value) : [];\n      }\n      return isArray(value) ? value : [];\n    }\n    return [];\n  }, [multiple, valueType, value]);\n\n  const showLoading: boolean = useMemo(() => loading && !disabled, [loading, disabled]);\n\n  const showFilter: boolean = useMemo(() => {\n    if (disabled) {\n      return false;\n    }\n    if (!multiple && selectedSingle && (filterable || isFunction(filter))) {\n      return visible;\n    }\n    return filterable || isFunction(filter);\n  }, [disabled, multiple, selectedSingle, filterable, visible, filter]);\n\n  const multiLimitDisabled: boolean = useMemo(() => {\n    if (multiple && max && isArray(value) && max <= value.length) {\n      return true;\n    }\n    return false;\n  }, [multiple, max, value]);\n\n  const realLabel: string = useMemo(() => {\n    if (!isEmpty(treeProps) && !isEmpty(treeProps.keys)) {\n      return treeProps.keys.label || 'label';\n    }\n    return 'label';\n  }, [treeProps]);\n\n  const realValue: string = useMemo(() => {\n    if (!isEmpty(treeProps) && !isEmpty(treeProps.keys)) {\n      return treeProps.keys.value || 'value';\n    }\n    return 'value';\n  }, [treeProps]);\n\n  const tagList: Array<TreeSelectValue> = useMemo(() => {\n    if (nodeInfo && isArray(nodeInfo)) {\n      return nodeInfo.map((node) => node.label);\n    }\n    return selectedMultiple;\n  }, [nodeInfo, selectedMultiple]);\n\n  const filterByText = useCallback(\n    (node: TreeNodeModel<TreeOptionData>): boolean => {\n      if (isFunction(filter)) {\n        const filterValue: boolean | Promise<boolean> = filter(filterText, node);\n        if (isBoolean(filterValue)) {\n          return filterValue;\n        }\n      }\n      return node.data[realLabel].indexOf(filterText) >= 0;\n    },\n    [filterText, realLabel, filter],\n  );\n\n  useEffect(() => {\n    if (valueType === 'object') {\n      setActived(isArray(value) ? value.map((item) => (item as NodeOptions).value) : [(value as NodeOptions).value]);\n    } else {\n      setActived(isArray(value) ? value : [value]);\n    }\n    changeNodeInfo(value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value, valueType]);\n\n  function handleClear(e: React.MouseEvent<SVGSVGElement>) {\n    e.stopPropagation();\n\n    const defaultValue: TreeSelectValue = multiple ? [] : '';\n    onChange?.(defaultValue, null);\n    setActived([]);\n    setFilterText('');\n    setNodeInfo(null);\n    onClear?.({ e });\n  }\n\n  function changeNodeInfo(value) {\n    if (!multiple && value) {\n      const nodeValue = valueType === 'object' ? (value as NodeOptions).value : value;\n      const node = treeRef.current?.getItem(nodeValue) || defaultGetTreeItem(nodeValue);\n      node ? setNodeInfo({ label: node.data[realLabel], value: node.data[realValue] }) : setNodeInfo(null);\n    } else if (multiple && isArray(value)) {\n      setNodeInfo(\n        value.map((value) => {\n          const nodeValue = valueType === 'object' ? (value as NodeOptions).value : value;\n          const node = treeRef.current?.getItem(nodeValue) || defaultGetTreeItem(nodeValue);\n          return node ? { label: node.data[realLabel], value: node.data[realValue] } : {};\n        }),\n      );\n    } else {\n      setNodeInfo(null);\n    }\n  }\n\n  function treeNodeChange(value: Array<TreeNodeValue>, context: { node: TreeNodeModel<TreeOptionData> }) {\n    let current: TreeSelectValue = value;\n    if (valueType === 'object') {\n      current = value.map((nodeValue) => {\n        const node = treeRef.current.getItem(nodeValue);\n        return { label: node.data[realLabel], value: node.data[realValue] };\n      });\n    }\n    onChange?.(current, context);\n  }\n\n  function treeNodeActive(value: Array<TreeNodeValue>, context: { node: TreeNodeModel<TreeOptionData> }) {\n    // 多选模式屏蔽 Active 事件\n    if (multiple) return;\n\n    const nodeValue = isEmpty(value) ? '' : value[0];\n    const node = treeRef.current.getItem(nodeValue);\n    let current: TreeSelectValue = nodeValue;\n\n    if (valueType === 'object' && node) {\n      current = { label: node.data[realLabel], value: node.data[realValue] };\n    }\n\n    onChange?.(current, context);\n    setFilterText('');\n    setVisible(false);\n  }\n\n  function treeNodeExpand(value: Array<TreeNodeValue>) {\n    setExpanded(value);\n  }\n\n  function popupVisibleChange(visible: boolean) {\n    if (focusing && !visible) {\n      setVisible(true);\n      return;\n    }\n    setVisible(visible);\n    if (showFilter && visible) {\n      inputRef.current?.focus();\n    }\n  }\n\n  // 国际化文本初始化\n  const [local, t] = useLocaleReceiver('treeSelect');\n  const emptyText = t(local.empty);\n  const loadingTextLabel = t(local.loadingText);\n\n  const treeItem = !loading && (\n    <Tree\n      ref={treeRef}\n      value={checked}\n      hover\n      expandAll\n      expandOnClickNode\n      data={data}\n      activable={!multiple}\n      checkable={multiple}\n      disabled={disabled || multiLimitDisabled}\n      empty={empty || <div className={`${classPrefix}-select__empty`}>{emptyText}</div>}\n      filter={filterByText}\n      actived={actived}\n      expanded={expanded}\n      activeMultiple={multiple}\n      onChange={treeNodeChange}\n      onActive={treeNodeActive}\n      onExpand={treeNodeExpand}\n      {...treeProps}\n    />\n  );\n\n  const loadingTip = showLoading && (\n    <p className={`${classPrefix}-select__loading-tips`}>\n      {loadingText || <div className={`${classPrefix}-select__empty`}>{loadingTextLabel}</div>}\n    </p>\n  );\n\n  return (\n    <div ref={ref} className={treeSelectClassName} style={treeSelectStyle}>\n      <Popup\n        ref={popupRef}\n        className={`${classPrefix}-select__popup-reference`}\n        visible={visible}\n        disabled={disabled}\n        placement={popupObject.placement}\n        trigger={popupObject.trigger}\n        overlayStyle={popupObject.overlayStyle}\n        overlayClassName={popupClassName}\n        onVisibleChange={popupVisibleChange}\n        expandAnimation={true}\n        destroyOnClose={true}\n        content={\n          <>\n            {loadingTip}\n            {treeItem}\n          </>\n        }\n      >\n        <div\n          style={{ minHeight: 30 }}\n          className={selectClassName}\n          onMouseEnter={() => setIsHover(true)}\n          onMouseLeave={() => setIsHover(false)}\n        >\n          {prefixIcon && <span className={`${classPrefix}-select__left-icon`}>{prefixIcon}</span>}\n\n          <TreeSelectTags tagList={tagList} {...props} />\n\n          <TreeSelectInput\n            ref={inputRef}\n            visible={visible}\n            filterText={filterText}\n            selectedSingle={selectedSingle}\n            setFocusing={setFocusing}\n            setFilterText={setFilterText}\n            {...props}\n          />\n\n          <TreeSelectSuffix\n            visible={visible}\n            isHover={isHover}\n            showLoading={showLoading}\n            handleClear={handleClear}\n            {...props}\n          />\n        </div>\n      </Popup>\n    </div>\n  );\n});\n\nTreeSelect.displayName = 'TreeSelect';\n\nTreeSelect.defaultProps = {\n  clearable: false,\n  data: [],\n  disabled: false,\n  empty: '',\n  filterable: false,\n  loading: false,\n  loadingText: '',\n  max: 0,\n  multiple: false,\n  placeholder: '请输入',\n  size: 'medium',\n  valueType: 'value',\n  minCollapsedNum: 0,\n};\nexport default TreeSelect;\n"],"names":["baseGetTag","require$$0","isObjectLike","require$$1","boolTag","isBoolean","value","isBoolean_1","TreeSelect","forwardRef","props","ref","treeSelectClassName","className","treeSelectStyle","style","disabled","multiple","prefixIcon","valueType","loading","max","treeProps","empty","data","loadingText","filter","filterable","onClear","useConfig","classPrefix","popupRef","useRef","treeRef","inputRef","useState","visible","setVisible","isHover","setIsHover","focusing","setFocusing","filterText","setFilterText","actived","setActived","expanded","setExpanded","nodeInfo","setNodeInfo","useDefault","defaultValue","onChange","useTreeSelectConfig","selectClassName","popupObject","popupClassName","defaultStore","TreeStore","append","defaultGetTreeItem","value2","node","getNode","getModel","selectedMultiple","useMemo","isArray","isEmpty","selectedSingle","label","checked","map","item","showLoading","showFilter","isFunction","multiLimitDisabled","length","realLabel","keys","realValue","tagList","filterByText","useCallback","filterValue","indexOf","useEffect","changeNodeInfo","handleClear","e","stopPropagation","nodeValue","current","getItem","value3","treeNodeChange","context","treeNodeActive","treeNodeExpand","popupVisibleChange","visible2","focus","useLocaleReceiver","local","t","emptyText","loadingTextLabel","treeItem","React","createElement","Tree","hover","expandAll","expandOnClickNode","activable","checkable","activeMultiple","onActive","onExpand","loadingTip","Popup","placement","trigger","overlayStyle","overlayClassName","onVisibleChange","expandAnimation","destroyOnClose","content","Fragment","minHeight","onMouseEnter","onMouseLeave","TreeSelectTags","TreeSelectInput","TreeSelectSuffix","displayName","defaultProps","clearable","placeholder","size","minCollapsedNum"],"mappings":"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"}