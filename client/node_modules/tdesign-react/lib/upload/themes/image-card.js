/**
 * tdesign v0.22.1
 * (c) 2022 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-93971e86.js';
import React, { useState, Fragment } from 'react';
import { BrowseIcon, DeleteIcon, AddIcon } from 'tdesign-icons-react';
import { Loading } from '../../loading/index.js';
import { Dialog } from '../../dialog/index.js';
import useConfig from '../../_util/useConfig.js';
import { finishUpload } from '../util.js';
import BooleanRender from '../boolean-render.js';
import '../../_chunks/dep-beac373a.js';
import '../../loading/loading.js';
import '../../_chunks/dep-9332bbea.js';
import 'classnames';
import '../../_util/dom.js';
import 'raf';
import '../../_chunks/dep-f3f6eedc.js';
import '../../_chunks/dep-c6576f8f.js';
import '../../_chunks/dep-156c830d.js';
import '../../_chunks/dep-04305406.js';
import '../../_chunks/dep-6ca758b4.js';
import '../../_util/easing.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../loading/gradient.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../loading/plugin.js';
import '../../dialog/Dialog.js';
import '../../_chunks/dep-27d690ce.js';
import '../../locale/LocalReceiver.js';
import '../../button/index.js';
import '../../button/Button.js';
import '../../_util/noop.js';
import '../../_util/useRipple.js';
import '../../_util/setStyle.js';
import '../../dialog/RenderDialog.js';
import 'react-transition-group';
import '../../_util/useSetState.js';
import '../../dialog/plugin.js';
import '../../_chunks/dep-124f91c5.js';

var ImageCard = function ImageCard(props) {
  var files = props.files,
      _props$multiple = props.multiple,
      multiple = _props$multiple === void 0 ? false : _props$multiple,
      _props$max = props.max,
      max = _props$max === void 0 ? 0 : _props$max,
      onRemove = props.onRemove,
      showUploadProgress = props.showUploadProgress;

  var _useConfig = useConfig(),
      classPrefix = _useConfig.classPrefix;

  var _useState = useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      showImg = _useState2[0],
      setShowImg = _useState2[1];

  var _useState3 = useState(),
      _useState4 = _slicedToArray(_useState3, 2),
      imgURL = _useState4[0],
      setImgURL = _useState4[1];

  var preview = function preview(file) {
    setShowImg(true);
    setImgURL(file.url);
  };

  var showTrigger = React.useMemo(function () {
    if (multiple) {
      return !max || files.length < max;
    }

    return !(files && files[0]);
  }, [files, max, multiple]);
  return /* @__PURE__ */React.createElement(Fragment, null, /* @__PURE__ */React.createElement(Dialog, {
    visible: showImg,
    showOverlay: true,
    width: "auto",
    top: "10%",
    className: "".concat(classPrefix, "-upload__dialog"),
    footer: false,
    header: false,
    onClose: function onClose() {
      setShowImg(false);
      setImgURL(null);
    }
  }, /* @__PURE__ */React.createElement("p", {
    className: "".concat(classPrefix, "-dialog__dialog-body-img-box")
  }, /* @__PURE__ */React.createElement("img", {
    src: imgURL,
    alt: ""
  }))), /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-upload__card")
  }, /* @__PURE__ */React.createElement(BooleanRender, {
    boolExpression: !!files
  }, files.map(function (file, index) {
    return /* @__PURE__ */React.createElement("li", {
      className: "".concat(classPrefix, "-upload__card-item ").concat(classPrefix, "-is--background"),
      key: index
    }, /* @__PURE__ */React.createElement(BooleanRender, {
      falseRender: function falseRender() {
        return /* @__PURE__ */React.createElement("div", {
          className: "".concat(classPrefix, "-upload__card-content ").concat(classPrefix, "-upload__card-box")
        }, /* @__PURE__ */React.createElement("img", {
          className: "".concat(classPrefix, "-upload__card-image"),
          src: file.url
        }), /* @__PURE__ */React.createElement("div", {
          className: "".concat(classPrefix, "-upload__card-mask")
        }, /* @__PURE__ */React.createElement("span", {
          className: "".concat(classPrefix, "-upload__card-mask-item"),
          onClick: function onClick(e) {
            return e.stopPropagation();
          }
        }, /* @__PURE__ */React.createElement(BrowseIcon, {
          onClick: function onClick() {
            preview(file);
          }
        })), /* @__PURE__ */React.createElement("span", {
          className: "".concat(classPrefix, "-upload__card-mask-item-divider")
        }), /* @__PURE__ */React.createElement("span", {
          className: "".concat(classPrefix, "-upload__card-mask-item"),
          onClick: function onClick(e) {
            return e.stopPropagation();
          }
        }, /* @__PURE__ */React.createElement(DeleteIcon, {
          onClick: function onClick(e) {
            onRemove === null || onRemove === void 0 ? void 0 : onRemove({
              e: e,
              file: file,
              index: index
            });
          }
        }))));
      },
      boolExpression: showUploadProgress && !finishUpload(file.status)
    }, /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box")
    }, /* @__PURE__ */React.createElement(Loading, {
      loading: true,
      size: "medium"
    }), /* @__PURE__ */React.createElement("p", null, "\u4E0A\u4F20\u4E2D ", Math.min(files[0].percent, 99), "%"))));
  })), /* @__PURE__ */React.createElement(BooleanRender, {
    boolExpression: showTrigger
  }, /* @__PURE__ */React.createElement("li", {
    className: "".concat(classPrefix, "-upload__card-item ").concat(classPrefix, "-is--background"),
    onClick: props.onTrigger
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box")
  }, /* @__PURE__ */React.createElement(AddIcon, null), /* @__PURE__ */React.createElement("p", {
    className: "".concat(classPrefix, "-size-s")
  }, "\u70B9\u51FB\u4E0A\u4F20\u56FE\u7247"))))));
};

export { ImageCard as default };
//# sourceMappingURL=image-card.js.map
