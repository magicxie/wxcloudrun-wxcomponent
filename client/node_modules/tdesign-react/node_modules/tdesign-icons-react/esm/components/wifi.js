import { _ as _defineProperty } from '../_chunks/dep-fd75569b.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../style/css.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 16 16",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M10.15 10.7l.7-.71a4.03 4.03 0 00-2.87-1.3c-1.02 0-2.01.45-2.83 1.27l.7.71a3.03 3.03 0 012.13-.98c.74 0 1.5.32 2.17 1.01zM12.18 8.63l.7-.72a6.83 6.83 0 00-4.9-2.2c-1.77 0-3.49.77-4.86 2.17l.7.72A5.83 5.83 0 018 6.7c1.49 0 2.98.66 4.19 1.92z",
      "fillOpacity": 0.9
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M14.13 6.62l.7-.71A9.53 9.53 0 008 2.85a9.53 9.53 0 00-6.82 3.03l.7.71a8.54 8.54 0 016.12-2.74c2.22 0 4.4.97 6.14 2.77zM9 12.5a1 1 0 11-2 0 1 1 0 012 0z",
      "fillOpacity": 0.9
    }
  }]
};
var WifiIcon = forwardRef((props, ref) => createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
  id: "wifi",
  ref,
  icon: element
})));
WifiIcon.displayName = "WifiIcon";

export { WifiIcon as default };
//# sourceMappingURL=wifi.js.map
