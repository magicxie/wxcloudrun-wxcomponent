{"version":3,"file":"iconfont.js","sources":["../../src/iconfont/iconfont.tsx"],"sourcesContent":["import {\n  forwardRef, Ref, HTMLAttributes, useEffect, createElement, CSSProperties, useMemo,\n} from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../util/use-size-props';\nimport { checkLinkAndLoad } from '../util/check-url-and-load';\n\nimport '../style/css';\n\nexport interface IconFontProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * 图标类型\n   */\n  name?: string;\n\n  /**\n   * 尺寸\n   * @default 'middle'\n   */\n  size?: 'small' | 'middle' | 'large' | string | number;\n\n  /**\n   * 渲染容器元素\n   * @default 'i'\n   */\n  tag?: 'i' | 'span' | 'div';\n\n  /**\n   * 样式\n   */\n  style?: CSSProperties;\n\n  /**\n   * 类名\n   */\n  className?: string;\n\n  /**\n   * 图标地址\n   */\n  url?: string | string[];\n\n  /**\n   * @default true\n   */\n  loadDefaultIcons?: boolean;\n}\n\nconst CDN_ICONFONT_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.css';\n\n/**\n * 图标组件\n * iconfont 版本\n */\nexport const IconFont = forwardRef((props: IconFontProps, ref: Ref<HTMLElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    name,\n    size,\n    tag = 'i',\n    className: customClassName,\n    url = [],\n    loadDefaultIcons = true,\n    style: customStyle,\n    ...htmlProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size);\n  const className = useMemo(\n    () =>\n      // eslint-disable-next-line implicit-arrow-linebreak\n      classNames(`${classPrefix}-icon`, `${classPrefix}-icon-${name}`, sizeClassName, customClassName),\n    [classPrefix, customClassName, name, sizeClassName],\n  );\n\n  // 插入 iconfont 样式\n  useEffect(() => {\n    // 兼容一下服务端渲染\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    // 不加载图标\n    if (!loadDefaultIcons) {\n      return;\n    }\n\n    checkLinkAndLoad(CDN_ICONFONT_URL, `${classPrefix}-iconfont-stylesheet--unique-class`);\n  }, [classPrefix, loadDefaultIcons]);\n\n  // 加载 url\n  useEffect(() => {\n    const urls = Array.isArray(url) ? url : [url];\n    urls.forEach((url) => {\n      checkLinkAndLoad(url, `${classPrefix}-iconfont-stylesheet--unique-class`);\n    });\n  }, [classPrefix, url]);\n\n  return createElement(tag, {\n    ref,\n    style: { ...customStyle, ...sizeStyle },\n    className,\n    ...htmlProps,\n  });\n});\n\nIconFont.displayName = 'Icon';\n"],"names":["CDN_ICONFONT_URL","IconFont","forwardRef","props","ref","classPrefix","useConfig","name","size","tag","className","customClassName","url","loadDefaultIcons","style","customStyle","htmlProps","sizeClassName","sizeStyle","useSizeProps","useMemo","classNames","document","urls","Array","isArray","forEach","url2","createElement","displayName"],"mappings":";;;;;;;;;;;;;;AAiDA,IAAMA,mBAAmB,sDAAzB;IAMaC,WAAWC,WAAW,CAACC,KAAD,EAAuBC,GAAvB,KAAiD;MAC5E;AAAEC,IAAAA;AAAF,MAAkBC;;MAClB;AACJC,IAAAA,IADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,MAAM,GAHF;AAIJC,IAAAA,WAAWC,eAJP;AAKJC,IAAAA,MAAM,EALF;AAMJC,IAAAA,mBAAmB,IANf;AAOJC,IAAAA,OAAOC;AAPH,MASFZ;MADCa,qCACDb;;MACE;AAAEO,IAAAA,WAAWO,aAAb;AAA4BH,IAAAA,OAAOI;AAAnC,MAAiDC,aAAaX;MAC9DE,YAAYU,QAChB,MAEEC,qBAAchB,iCAAuBA,8BAAoBE,OAAQU,eAAeN,kBAClF,CAACN,WAAD,EAAcM,eAAd,EAA+BJ,IAA/B,EAAqCU,aAArC;YAIQ,MAAM;QAEV,OAAOK,QAAP,KAAoB,aAAa;;;;QAKjC,CAACT,kBAAkB;;;;qBAINb,4BAAqBK;KACrC,CAACA,WAAD,EAAcQ,gBAAd;YAGO,MAAM;QACRU,OAAOC,MAAMC,OAAN,CAAcb,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD;SACnCc,QAASC,IAAD,IAAS;uBACHA,gBAAQtB;;KAE1B,CAACA,WAAD,EAAcO,GAAd;SAEIgB,cAAcnB;AACnBL,IAAAA;AACAU,IAAAA,uCAAYC,cAAgBG;AAC5BR,IAAAA;KACGM;;AAIPf,SAAS4B,WAAT,GAAuB,MAAvB;;;;"}