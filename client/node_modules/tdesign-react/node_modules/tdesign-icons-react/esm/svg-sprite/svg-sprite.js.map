{"version":3,"file":"svg-sprite.js","sources":["../../src/svg-sprite/svg-sprite.tsx"],"sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport * as React from 'react';\nimport {\n  forwardRef, Ref, useEffect, useMemo, CSSProperties,\n} from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../util/use-size-props';\nimport { checkScriptAndLoad } from '../util/check-url-and-load';\n\nimport { IconProps as BaseIconProps } from './type';\n\nimport '../style/css';\n\nexport interface SpriteIconProps extends BaseIconProps {\n  /**\n   * 图标类型\n   */\n  name?: string;\n\n  /**\n   * 图标地址\n   */\n  url?: string | string[];\n\n  /**\n   * @default true\n   */\n  loadDefaultIcons?: boolean;\n\n  /**\n   * 样式\n   */\n  style?: CSSProperties;\n\n  /**\n   * 类名\n   */\n  className?: string;\n}\n\nconst CDN_SVGSPRITE_URL = 'https://tdesign.gtimg.com/icon/0.0.3/fonts/index.js';\n\n/**\n * 图标组件\n * svg 版本\n */\nexport const Icon = forwardRef((props: SpriteIconProps, ref: Ref<SVGSVGElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    name,\n    size,\n    url = [],\n    loadDefaultIcons = true,\n    className: customClassName,\n    style: customStyle,\n    ...restProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size);\n  const className = useMemo(\n    () =>\n      // eslint-disable-next-line implicit-arrow-linebreak\n      classNames(`${classPrefix}-icon`, `${classPrefix}-icon-${name}`, sizeClassName, customClassName),\n    [classPrefix, customClassName, name, sizeClassName],\n  );\n\n  // 插入 iconfont 样式\n  useEffect(() => {\n    // 兼容一下服务端渲染\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    // 不加载图标\n    if (!loadDefaultIcons) {\n      return;\n    }\n\n    checkScriptAndLoad(CDN_SVGSPRITE_URL, `${classPrefix}-svg-js-stylesheet--unique-class`);\n  }, [classPrefix, loadDefaultIcons]);\n\n  // 加载 url\n  useEffect(() => {\n    const urls = Array.isArray(url) ? url : [url];\n    urls.forEach((url) => {\n      checkScriptAndLoad(url, `${classPrefix}-svg-js-stylesheet--unique-class`);\n    });\n  }, [classPrefix, url]);\n\n  return (\n    <svg ref={ref} className={className} style={{ ...customStyle, ...sizeStyle }} {...restProps}>\n      <use xlinkHref={`#t-icon-${name}`} />\n    </svg>\n  );\n});\n\nIcon.displayName = 'Icon';\n"],"names":["CDN_SVGSPRITE_URL","Icon","forwardRef","props","ref","classPrefix","useConfig","name","size","url","loadDefaultIcons","className","customClassName","style","customStyle","restProps","sizeClassName","sizeStyle","useSizeProps","useMemo","classNames","document","urls","Array","isArray","forEach","url2","xlinkHref","displayName"],"mappings":";;;;;;;;;;;;;;;AAyCA,IAAMA,oBAAoB,qDAA1B;IAMaC,OAAOC,WAAW,CAACC,KAAD,EAAyBC,GAAzB,KAAqD;MAC5E;AAAEC,IAAAA;AAAF,MAAkBC;;MAClB;AACJC,IAAAA,IADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,MAAM,EAHF;AAIJC,IAAAA,mBAAmB,IAJf;AAKJC,IAAAA,WAAWC,eALP;AAMJC,IAAAA,OAAOC;AANH,MAQFX;MADCY,qCACDZ;;MACE;AAAEQ,IAAAA,WAAWK,aAAb;AAA4BH,IAAAA,OAAOI;AAAnC,MAAiDC,aAAaV;MAC9DG,YAAYQ,QAChB,MAEEC,qBAAcf,iCAAuBA,8BAAoBE,OAAQS,eAAeJ,kBAClF,CAACP,WAAD,EAAcO,eAAd,EAA+BL,IAA/B,EAAqCS,aAArC;YAIQ,MAAM;QAEV,OAAOK,QAAP,KAAoB,aAAa;;;;QAKjC,CAACX,kBAAkB;;;;uBAIJV,6BAAsBK;KACxC,CAACA,WAAD,EAAcK,gBAAd;YAGO,MAAM;QACRY,OAAOC,MAAMC,OAAN,CAAcf,GAAd,IAAqBA,GAArB,GAA2B,CAACA,GAAD;SACnCgB,QAASC,IAAD,IAAS;yBACDA,gBAAQrB;;KAE5B,CAACA,WAAD,EAAcI,GAAd;4CAGA;AAAIL,IAAAA;AAAUO,IAAAA;AAAsBE,IAAAA,uCAAYC,cAAgBG;KAAiBF,+CAC/E,OAAD;AAAKY,IAAAA,6BAAsBpB;AAA3B;;AAKNN,KAAK2B,WAAL,GAAmB,MAAnB;;;;"}